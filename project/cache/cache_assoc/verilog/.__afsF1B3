$date
	Wed Dec  4 13:52:53 2024
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end

$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end

$scope task end_simulation $end
$upscope $end

$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end

$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module m0 $end
$var parameter 32 $! memtype $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 %! c0_tag_out [4] $end
$var wire 1 &! c0_tag_out [3] $end
$var wire 1 '! c0_tag_out [2] $end
$var wire 1 (! c0_tag_out [1] $end
$var wire 1 )! c0_tag_out [0] $end
$var wire 1 *! c1_tag_out [4] $end
$var wire 1 +! c1_tag_out [3] $end
$var wire 1 ,! c1_tag_out [2] $end
$var wire 1 -! c1_tag_out [1] $end
$var wire 1 .! c1_tag_out [0] $end
$var wire 1 /! chosen_tag_out [4] $end
$var wire 1 0! chosen_tag_out [3] $end
$var wire 1 1! chosen_tag_out [2] $end
$var wire 1 2! chosen_tag_out [1] $end
$var wire 1 3! chosen_tag_out [0] $end
$var wire 1 4! c0_data_out [15] $end
$var wire 1 5! c0_data_out [14] $end
$var wire 1 6! c0_data_out [13] $end
$var wire 1 7! c0_data_out [12] $end
$var wire 1 8! c0_data_out [11] $end
$var wire 1 9! c0_data_out [10] $end
$var wire 1 :! c0_data_out [9] $end
$var wire 1 ;! c0_data_out [8] $end
$var wire 1 <! c0_data_out [7] $end
$var wire 1 =! c0_data_out [6] $end
$var wire 1 >! c0_data_out [5] $end
$var wire 1 ?! c0_data_out [4] $end
$var wire 1 @! c0_data_out [3] $end
$var wire 1 A! c0_data_out [2] $end
$var wire 1 B! c0_data_out [1] $end
$var wire 1 C! c0_data_out [0] $end
$var wire 1 D! c1_data_out [15] $end
$var wire 1 E! c1_data_out [14] $end
$var wire 1 F! c1_data_out [13] $end
$var wire 1 G! c1_data_out [12] $end
$var wire 1 H! c1_data_out [11] $end
$var wire 1 I! c1_data_out [10] $end
$var wire 1 J! c1_data_out [9] $end
$var wire 1 K! c1_data_out [8] $end
$var wire 1 L! c1_data_out [7] $end
$var wire 1 M! c1_data_out [6] $end
$var wire 1 N! c1_data_out [5] $end
$var wire 1 O! c1_data_out [4] $end
$var wire 1 P! c1_data_out [3] $end
$var wire 1 Q! c1_data_out [2] $end
$var wire 1 R! c1_data_out [1] $end
$var wire 1 S! c1_data_out [0] $end
$var wire 1 T! chosen_data_out [15] $end
$var wire 1 U! chosen_data_out [14] $end
$var wire 1 V! chosen_data_out [13] $end
$var wire 1 W! chosen_data_out [12] $end
$var wire 1 X! chosen_data_out [11] $end
$var wire 1 Y! chosen_data_out [10] $end
$var wire 1 Z! chosen_data_out [9] $end
$var wire 1 [! chosen_data_out [8] $end
$var wire 1 \! chosen_data_out [7] $end
$var wire 1 ]! chosen_data_out [6] $end
$var wire 1 ^! chosen_data_out [5] $end
$var wire 1 _! chosen_data_out [4] $end
$var wire 1 `! chosen_data_out [3] $end
$var wire 1 a! chosen_data_out [2] $end
$var wire 1 b! chosen_data_out [1] $end
$var wire 1 c! chosen_data_out [0] $end
$var wire 1 d! c0_hit $end
$var wire 1 e! c1_hit $end
$var wire 1 f! cache_hit $end
$var wire 1 g! c0_dirty $end
$var wire 1 h! c1_dirty $end
$var wire 1 i! chosen_dirty $end
$var wire 1 j! c0_valid $end
$var wire 1 k! c1_valid $end
$var wire 1 l! chosen_valid $end
$var wire 1 m! enable_signal $end
$var wire 1 n! comp_signal $end
$var wire 1 o! write_signal $end
$var wire 1 p! c0_write_signal $end
$var wire 1 q! c1_write_signal $end
$var wire 1 r! valid_in_signal $end
$var wire 1 s! offset_signal [2] $end
$var wire 1 t! offset_signal [1] $end
$var wire 1 u! offset_signal [0] $end
$var wire 1 v! m_data_out [15] $end
$var wire 1 w! m_data_out [14] $end
$var wire 1 x! m_data_out [13] $end
$var wire 1 y! m_data_out [12] $end
$var wire 1 z! m_data_out [11] $end
$var wire 1 {! m_data_out [10] $end
$var wire 1 |! m_data_out [9] $end
$var wire 1 }! m_data_out [8] $end
$var wire 1 ~! m_data_out [7] $end
$var wire 1 !" m_data_out [6] $end
$var wire 1 "" m_data_out [5] $end
$var wire 1 #" m_data_out [4] $end
$var wire 1 $" m_data_out [3] $end
$var wire 1 %" m_data_out [2] $end
$var wire 1 &" m_data_out [1] $end
$var wire 1 '" m_data_out [0] $end
$var wire 1 (" mem_addr [15] $end
$var wire 1 )" mem_addr [14] $end
$var wire 1 *" mem_addr [13] $end
$var wire 1 +" mem_addr [12] $end
$var wire 1 ," mem_addr [11] $end
$var wire 1 -" mem_addr [10] $end
$var wire 1 ." mem_addr [9] $end
$var wire 1 /" mem_addr [8] $end
$var wire 1 0" mem_addr [7] $end
$var wire 1 1" mem_addr [6] $end
$var wire 1 2" mem_addr [5] $end
$var wire 1 3" mem_addr [4] $end
$var wire 1 4" mem_addr [3] $end
$var wire 1 5" mem_addr [2] $end
$var wire 1 6" mem_addr [1] $end
$var wire 1 7" mem_addr [0] $end
$var wire 1 8" mem_wr $end
$var wire 1 9" mem_rd $end
$var wire 1 :" stall_mem $end
$var wire 1 ;" cache_data_in [15] $end
$var wire 1 <" cache_data_in [14] $end
$var wire 1 =" cache_data_in [13] $end
$var wire 1 >" cache_data_in [12] $end
$var wire 1 ?" cache_data_in [11] $end
$var wire 1 @" cache_data_in [10] $end
$var wire 1 A" cache_data_in [9] $end
$var wire 1 B" cache_data_in [8] $end
$var wire 1 C" cache_data_in [7] $end
$var wire 1 D" cache_data_in [6] $end
$var wire 1 E" cache_data_in [5] $end
$var wire 1 F" cache_data_in [4] $end
$var wire 1 G" cache_data_in [3] $end
$var wire 1 H" cache_data_in [2] $end
$var wire 1 I" cache_data_in [1] $end
$var wire 1 J" cache_data_in [0] $end
$var wire 1 K" err_c0 $end
$var wire 1 L" err_c1 $end
$var wire 1 M" err_mem $end
$var wire 1 N" err_fsm $end
$var wire 1 O" victimway_in $end
$var wire 1 P" victimway_out $end
$var wire 1 Q" victim_line_sel $end
$var wire 1 R" selected_way $end

$scope module c0 $end
$var parameter 32 S" cache_id $end
$var wire 1 m! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 s! offset [2] $end
$var wire 1 t! offset [1] $end
$var wire 1 u! offset [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 n! comp $end
$var wire 1 p! write $end
$var wire 1 r! valid_in $end
$var wire 1 %! tag_out [4] $end
$var wire 1 &! tag_out [3] $end
$var wire 1 '! tag_out [2] $end
$var wire 1 (! tag_out [1] $end
$var wire 1 )! tag_out [0] $end
$var wire 1 4! data_out [15] $end
$var wire 1 5! data_out [14] $end
$var wire 1 6! data_out [13] $end
$var wire 1 7! data_out [12] $end
$var wire 1 8! data_out [11] $end
$var wire 1 9! data_out [10] $end
$var wire 1 :! data_out [9] $end
$var wire 1 ;! data_out [8] $end
$var wire 1 <! data_out [7] $end
$var wire 1 =! data_out [6] $end
$var wire 1 >! data_out [5] $end
$var wire 1 ?! data_out [4] $end
$var wire 1 @! data_out [3] $end
$var wire 1 A! data_out [2] $end
$var wire 1 B! data_out [1] $end
$var wire 1 C! data_out [0] $end
$var wire 1 d! hit $end
$var wire 1 g! dirty $end
$var wire 1 j! valid $end
$var wire 1 K" err $end
$var wire 1 T" ram0_id [4] $end
$var wire 1 U" ram0_id [3] $end
$var wire 1 V" ram0_id [2] $end
$var wire 1 W" ram0_id [1] $end
$var wire 1 X" ram0_id [0] $end
$var wire 1 Y" ram1_id [4] $end
$var wire 1 Z" ram1_id [3] $end
$var wire 1 [" ram1_id [2] $end
$var wire 1 \" ram1_id [1] $end
$var wire 1 ]" ram1_id [0] $end
$var wire 1 ^" ram2_id [4] $end
$var wire 1 _" ram2_id [3] $end
$var wire 1 `" ram2_id [2] $end
$var wire 1 a" ram2_id [1] $end
$var wire 1 b" ram2_id [0] $end
$var wire 1 c" ram3_id [4] $end
$var wire 1 d" ram3_id [3] $end
$var wire 1 e" ram3_id [2] $end
$var wire 1 f" ram3_id [1] $end
$var wire 1 g" ram3_id [0] $end
$var wire 1 h" ram4_id [4] $end
$var wire 1 i" ram4_id [3] $end
$var wire 1 j" ram4_id [2] $end
$var wire 1 k" ram4_id [1] $end
$var wire 1 l" ram4_id [0] $end
$var wire 1 m" ram5_id [4] $end
$var wire 1 n" ram5_id [3] $end
$var wire 1 o" ram5_id [2] $end
$var wire 1 p" ram5_id [1] $end
$var wire 1 q" ram5_id [0] $end
$var wire 1 r" w0 [15] $end
$var wire 1 s" w0 [14] $end
$var wire 1 t" w0 [13] $end
$var wire 1 u" w0 [12] $end
$var wire 1 v" w0 [11] $end
$var wire 1 w" w0 [10] $end
$var wire 1 x" w0 [9] $end
$var wire 1 y" w0 [8] $end
$var wire 1 z" w0 [7] $end
$var wire 1 {" w0 [6] $end
$var wire 1 |" w0 [5] $end
$var wire 1 }" w0 [4] $end
$var wire 1 ~" w0 [3] $end
$var wire 1 !# w0 [2] $end
$var wire 1 "# w0 [1] $end
$var wire 1 ## w0 [0] $end
$var wire 1 $# w1 [15] $end
$var wire 1 %# w1 [14] $end
$var wire 1 &# w1 [13] $end
$var wire 1 '# w1 [12] $end
$var wire 1 (# w1 [11] $end
$var wire 1 )# w1 [10] $end
$var wire 1 *# w1 [9] $end
$var wire 1 +# w1 [8] $end
$var wire 1 ,# w1 [7] $end
$var wire 1 -# w1 [6] $end
$var wire 1 .# w1 [5] $end
$var wire 1 /# w1 [4] $end
$var wire 1 0# w1 [3] $end
$var wire 1 1# w1 [2] $end
$var wire 1 2# w1 [1] $end
$var wire 1 3# w1 [0] $end
$var wire 1 4# w2 [15] $end
$var wire 1 5# w2 [14] $end
$var wire 1 6# w2 [13] $end
$var wire 1 7# w2 [12] $end
$var wire 1 8# w2 [11] $end
$var wire 1 9# w2 [10] $end
$var wire 1 :# w2 [9] $end
$var wire 1 ;# w2 [8] $end
$var wire 1 <# w2 [7] $end
$var wire 1 =# w2 [6] $end
$var wire 1 ># w2 [5] $end
$var wire 1 ?# w2 [4] $end
$var wire 1 @# w2 [3] $end
$var wire 1 A# w2 [2] $end
$var wire 1 B# w2 [1] $end
$var wire 1 C# w2 [0] $end
$var wire 1 D# w3 [15] $end
$var wire 1 E# w3 [14] $end
$var wire 1 F# w3 [13] $end
$var wire 1 G# w3 [12] $end
$var wire 1 H# w3 [11] $end
$var wire 1 I# w3 [10] $end
$var wire 1 J# w3 [9] $end
$var wire 1 K# w3 [8] $end
$var wire 1 L# w3 [7] $end
$var wire 1 M# w3 [6] $end
$var wire 1 N# w3 [5] $end
$var wire 1 O# w3 [4] $end
$var wire 1 P# w3 [3] $end
$var wire 1 Q# w3 [2] $end
$var wire 1 R# w3 [1] $end
$var wire 1 S# w3 [0] $end
$var wire 1 T# go $end
$var wire 1 U# match $end
$var wire 1 V# wr_word0 $end
$var wire 1 W# wr_word1 $end
$var wire 1 X# wr_word2 $end
$var wire 1 Y# wr_word3 $end
$var wire 1 Z# wr_dirty $end
$var wire 1 [# wr_tag $end
$var wire 1 \# wr_valid $end
$var wire 1 ]# dirty_in $end
$var wire 1 ^# dirtybit $end
$var wire 1 _# validbit $end

$scope module mem_w0 $end
$var parameter 32 `# Size $end
$var wire 1 r" data_out [15] $end
$var wire 1 s" data_out [14] $end
$var wire 1 t" data_out [13] $end
$var wire 1 u" data_out [12] $end
$var wire 1 v" data_out [11] $end
$var wire 1 w" data_out [10] $end
$var wire 1 x" data_out [9] $end
$var wire 1 y" data_out [8] $end
$var wire 1 z" data_out [7] $end
$var wire 1 {" data_out [6] $end
$var wire 1 |" data_out [5] $end
$var wire 1 }" data_out [4] $end
$var wire 1 ~" data_out [3] $end
$var wire 1 !# data_out [2] $end
$var wire 1 "# data_out [1] $end
$var wire 1 ## data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 V# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 T" file_id [4] $end
$var wire 1 U" file_id [3] $end
$var wire 1 V" file_id [2] $end
$var wire 1 W" file_id [1] $end
$var wire 1 X" file_id [0] $end
$var integer 32 a# mcd $end
$var integer 32 b# i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 c# Size $end
$var wire 1 $# data_out [15] $end
$var wire 1 %# data_out [14] $end
$var wire 1 &# data_out [13] $end
$var wire 1 '# data_out [12] $end
$var wire 1 (# data_out [11] $end
$var wire 1 )# data_out [10] $end
$var wire 1 *# data_out [9] $end
$var wire 1 +# data_out [8] $end
$var wire 1 ,# data_out [7] $end
$var wire 1 -# data_out [6] $end
$var wire 1 .# data_out [5] $end
$var wire 1 /# data_out [4] $end
$var wire 1 0# data_out [3] $end
$var wire 1 1# data_out [2] $end
$var wire 1 2# data_out [1] $end
$var wire 1 3# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 W# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y" file_id [4] $end
$var wire 1 Z" file_id [3] $end
$var wire 1 [" file_id [2] $end
$var wire 1 \" file_id [1] $end
$var wire 1 ]" file_id [0] $end
$var integer 32 d# mcd $end
$var integer 32 e# i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 f# Size $end
$var wire 1 4# data_out [15] $end
$var wire 1 5# data_out [14] $end
$var wire 1 6# data_out [13] $end
$var wire 1 7# data_out [12] $end
$var wire 1 8# data_out [11] $end
$var wire 1 9# data_out [10] $end
$var wire 1 :# data_out [9] $end
$var wire 1 ;# data_out [8] $end
$var wire 1 <# data_out [7] $end
$var wire 1 =# data_out [6] $end
$var wire 1 ># data_out [5] $end
$var wire 1 ?# data_out [4] $end
$var wire 1 @# data_out [3] $end
$var wire 1 A# data_out [2] $end
$var wire 1 B# data_out [1] $end
$var wire 1 C# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 X# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ^" file_id [4] $end
$var wire 1 _" file_id [3] $end
$var wire 1 `" file_id [2] $end
$var wire 1 a" file_id [1] $end
$var wire 1 b" file_id [0] $end
$var integer 32 g# mcd $end
$var integer 32 h# i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 i# Size $end
$var wire 1 D# data_out [15] $end
$var wire 1 E# data_out [14] $end
$var wire 1 F# data_out [13] $end
$var wire 1 G# data_out [12] $end
$var wire 1 H# data_out [11] $end
$var wire 1 I# data_out [10] $end
$var wire 1 J# data_out [9] $end
$var wire 1 K# data_out [8] $end
$var wire 1 L# data_out [7] $end
$var wire 1 M# data_out [6] $end
$var wire 1 N# data_out [5] $end
$var wire 1 O# data_out [4] $end
$var wire 1 P# data_out [3] $end
$var wire 1 Q# data_out [2] $end
$var wire 1 R# data_out [1] $end
$var wire 1 S# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 Y# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 c" file_id [4] $end
$var wire 1 d" file_id [3] $end
$var wire 1 e" file_id [2] $end
$var wire 1 f" file_id [1] $end
$var wire 1 g" file_id [0] $end
$var integer 32 j# mcd $end
$var integer 32 k# i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 l# Size $end
$var wire 1 %! data_out [4] $end
$var wire 1 &! data_out [3] $end
$var wire 1 '! data_out [2] $end
$var wire 1 (! data_out [1] $end
$var wire 1 )! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 [# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 h" file_id [4] $end
$var wire 1 i" file_id [3] $end
$var wire 1 j" file_id [2] $end
$var wire 1 k" file_id [1] $end
$var wire 1 l" file_id [0] $end
$var integer 32 m# mcd $end
$var integer 32 n# i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 o# Size $end
$var wire 1 ^# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ]# data_in [0] $end
$var wire 1 Z# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 m" file_id [4] $end
$var wire 1 n" file_id [3] $end
$var wire 1 o" file_id [2] $end
$var wire 1 p" file_id [1] $end
$var wire 1 q" file_id [0] $end
$var integer 32 p# mcd $end
$var integer 32 q# i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 _# data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 r! data_in $end
$var wire 1 \# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 T" file_id [4] $end
$var wire 1 U" file_id [3] $end
$var wire 1 V" file_id [2] $end
$var wire 1 W" file_id [1] $end
$var wire 1 X" file_id [0] $end
$var integer 32 r# mcd $end
$var integer 32 s# i $end
$upscope $end
$upscope $end

$scope module c1 $end
$var parameter 32 t# cache_id $end
$var wire 1 m! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 s! offset [2] $end
$var wire 1 t! offset [1] $end
$var wire 1 u! offset [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 n! comp $end
$var wire 1 q! write $end
$var wire 1 r! valid_in $end
$var wire 1 *! tag_out [4] $end
$var wire 1 +! tag_out [3] $end
$var wire 1 ,! tag_out [2] $end
$var wire 1 -! tag_out [1] $end
$var wire 1 .! tag_out [0] $end
$var wire 1 D! data_out [15] $end
$var wire 1 E! data_out [14] $end
$var wire 1 F! data_out [13] $end
$var wire 1 G! data_out [12] $end
$var wire 1 H! data_out [11] $end
$var wire 1 I! data_out [10] $end
$var wire 1 J! data_out [9] $end
$var wire 1 K! data_out [8] $end
$var wire 1 L! data_out [7] $end
$var wire 1 M! data_out [6] $end
$var wire 1 N! data_out [5] $end
$var wire 1 O! data_out [4] $end
$var wire 1 P! data_out [3] $end
$var wire 1 Q! data_out [2] $end
$var wire 1 R! data_out [1] $end
$var wire 1 S! data_out [0] $end
$var wire 1 e! hit $end
$var wire 1 h! dirty $end
$var wire 1 k! valid $end
$var wire 1 L" err $end
$var wire 1 u# ram0_id [4] $end
$var wire 1 v# ram0_id [3] $end
$var wire 1 w# ram0_id [2] $end
$var wire 1 x# ram0_id [1] $end
$var wire 1 y# ram0_id [0] $end
$var wire 1 z# ram1_id [4] $end
$var wire 1 {# ram1_id [3] $end
$var wire 1 |# ram1_id [2] $end
$var wire 1 }# ram1_id [1] $end
$var wire 1 ~# ram1_id [0] $end
$var wire 1 !$ ram2_id [4] $end
$var wire 1 "$ ram2_id [3] $end
$var wire 1 #$ ram2_id [2] $end
$var wire 1 $$ ram2_id [1] $end
$var wire 1 %$ ram2_id [0] $end
$var wire 1 &$ ram3_id [4] $end
$var wire 1 '$ ram3_id [3] $end
$var wire 1 ($ ram3_id [2] $end
$var wire 1 )$ ram3_id [1] $end
$var wire 1 *$ ram3_id [0] $end
$var wire 1 +$ ram4_id [4] $end
$var wire 1 ,$ ram4_id [3] $end
$var wire 1 -$ ram4_id [2] $end
$var wire 1 .$ ram4_id [1] $end
$var wire 1 /$ ram4_id [0] $end
$var wire 1 0$ ram5_id [4] $end
$var wire 1 1$ ram5_id [3] $end
$var wire 1 2$ ram5_id [2] $end
$var wire 1 3$ ram5_id [1] $end
$var wire 1 4$ ram5_id [0] $end
$var wire 1 5$ w0 [15] $end
$var wire 1 6$ w0 [14] $end
$var wire 1 7$ w0 [13] $end
$var wire 1 8$ w0 [12] $end
$var wire 1 9$ w0 [11] $end
$var wire 1 :$ w0 [10] $end
$var wire 1 ;$ w0 [9] $end
$var wire 1 <$ w0 [8] $end
$var wire 1 =$ w0 [7] $end
$var wire 1 >$ w0 [6] $end
$var wire 1 ?$ w0 [5] $end
$var wire 1 @$ w0 [4] $end
$var wire 1 A$ w0 [3] $end
$var wire 1 B$ w0 [2] $end
$var wire 1 C$ w0 [1] $end
$var wire 1 D$ w0 [0] $end
$var wire 1 E$ w1 [15] $end
$var wire 1 F$ w1 [14] $end
$var wire 1 G$ w1 [13] $end
$var wire 1 H$ w1 [12] $end
$var wire 1 I$ w1 [11] $end
$var wire 1 J$ w1 [10] $end
$var wire 1 K$ w1 [9] $end
$var wire 1 L$ w1 [8] $end
$var wire 1 M$ w1 [7] $end
$var wire 1 N$ w1 [6] $end
$var wire 1 O$ w1 [5] $end
$var wire 1 P$ w1 [4] $end
$var wire 1 Q$ w1 [3] $end
$var wire 1 R$ w1 [2] $end
$var wire 1 S$ w1 [1] $end
$var wire 1 T$ w1 [0] $end
$var wire 1 U$ w2 [15] $end
$var wire 1 V$ w2 [14] $end
$var wire 1 W$ w2 [13] $end
$var wire 1 X$ w2 [12] $end
$var wire 1 Y$ w2 [11] $end
$var wire 1 Z$ w2 [10] $end
$var wire 1 [$ w2 [9] $end
$var wire 1 \$ w2 [8] $end
$var wire 1 ]$ w2 [7] $end
$var wire 1 ^$ w2 [6] $end
$var wire 1 _$ w2 [5] $end
$var wire 1 `$ w2 [4] $end
$var wire 1 a$ w2 [3] $end
$var wire 1 b$ w2 [2] $end
$var wire 1 c$ w2 [1] $end
$var wire 1 d$ w2 [0] $end
$var wire 1 e$ w3 [15] $end
$var wire 1 f$ w3 [14] $end
$var wire 1 g$ w3 [13] $end
$var wire 1 h$ w3 [12] $end
$var wire 1 i$ w3 [11] $end
$var wire 1 j$ w3 [10] $end
$var wire 1 k$ w3 [9] $end
$var wire 1 l$ w3 [8] $end
$var wire 1 m$ w3 [7] $end
$var wire 1 n$ w3 [6] $end
$var wire 1 o$ w3 [5] $end
$var wire 1 p$ w3 [4] $end
$var wire 1 q$ w3 [3] $end
$var wire 1 r$ w3 [2] $end
$var wire 1 s$ w3 [1] $end
$var wire 1 t$ w3 [0] $end
$var wire 1 u$ go $end
$var wire 1 v$ match $end
$var wire 1 w$ wr_word0 $end
$var wire 1 x$ wr_word1 $end
$var wire 1 y$ wr_word2 $end
$var wire 1 z$ wr_word3 $end
$var wire 1 {$ wr_dirty $end
$var wire 1 |$ wr_tag $end
$var wire 1 }$ wr_valid $end
$var wire 1 ~$ dirty_in $end
$var wire 1 !% dirtybit $end
$var wire 1 "% validbit $end

$scope module mem_w0 $end
$var parameter 32 #% Size $end
$var wire 1 5$ data_out [15] $end
$var wire 1 6$ data_out [14] $end
$var wire 1 7$ data_out [13] $end
$var wire 1 8$ data_out [12] $end
$var wire 1 9$ data_out [11] $end
$var wire 1 :$ data_out [10] $end
$var wire 1 ;$ data_out [9] $end
$var wire 1 <$ data_out [8] $end
$var wire 1 =$ data_out [7] $end
$var wire 1 >$ data_out [6] $end
$var wire 1 ?$ data_out [5] $end
$var wire 1 @$ data_out [4] $end
$var wire 1 A$ data_out [3] $end
$var wire 1 B$ data_out [2] $end
$var wire 1 C$ data_out [1] $end
$var wire 1 D$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 w$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 u# file_id [4] $end
$var wire 1 v# file_id [3] $end
$var wire 1 w# file_id [2] $end
$var wire 1 x# file_id [1] $end
$var wire 1 y# file_id [0] $end
$var integer 32 $% mcd $end
$var integer 32 %% i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 &% Size $end
$var wire 1 E$ data_out [15] $end
$var wire 1 F$ data_out [14] $end
$var wire 1 G$ data_out [13] $end
$var wire 1 H$ data_out [12] $end
$var wire 1 I$ data_out [11] $end
$var wire 1 J$ data_out [10] $end
$var wire 1 K$ data_out [9] $end
$var wire 1 L$ data_out [8] $end
$var wire 1 M$ data_out [7] $end
$var wire 1 N$ data_out [6] $end
$var wire 1 O$ data_out [5] $end
$var wire 1 P$ data_out [4] $end
$var wire 1 Q$ data_out [3] $end
$var wire 1 R$ data_out [2] $end
$var wire 1 S$ data_out [1] $end
$var wire 1 T$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 x$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 z# file_id [4] $end
$var wire 1 {# file_id [3] $end
$var wire 1 |# file_id [2] $end
$var wire 1 }# file_id [1] $end
$var wire 1 ~# file_id [0] $end
$var integer 32 '% mcd $end
$var integer 32 (% i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 )% Size $end
$var wire 1 U$ data_out [15] $end
$var wire 1 V$ data_out [14] $end
$var wire 1 W$ data_out [13] $end
$var wire 1 X$ data_out [12] $end
$var wire 1 Y$ data_out [11] $end
$var wire 1 Z$ data_out [10] $end
$var wire 1 [$ data_out [9] $end
$var wire 1 \$ data_out [8] $end
$var wire 1 ]$ data_out [7] $end
$var wire 1 ^$ data_out [6] $end
$var wire 1 _$ data_out [5] $end
$var wire 1 `$ data_out [4] $end
$var wire 1 a$ data_out [3] $end
$var wire 1 b$ data_out [2] $end
$var wire 1 c$ data_out [1] $end
$var wire 1 d$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 y$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 !$ file_id [4] $end
$var wire 1 "$ file_id [3] $end
$var wire 1 #$ file_id [2] $end
$var wire 1 $$ file_id [1] $end
$var wire 1 %$ file_id [0] $end
$var integer 32 *% mcd $end
$var integer 32 +% i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 ,% Size $end
$var wire 1 e$ data_out [15] $end
$var wire 1 f$ data_out [14] $end
$var wire 1 g$ data_out [13] $end
$var wire 1 h$ data_out [12] $end
$var wire 1 i$ data_out [11] $end
$var wire 1 j$ data_out [10] $end
$var wire 1 k$ data_out [9] $end
$var wire 1 l$ data_out [8] $end
$var wire 1 m$ data_out [7] $end
$var wire 1 n$ data_out [6] $end
$var wire 1 o$ data_out [5] $end
$var wire 1 p$ data_out [4] $end
$var wire 1 q$ data_out [3] $end
$var wire 1 r$ data_out [2] $end
$var wire 1 s$ data_out [1] $end
$var wire 1 t$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ;" data_in [15] $end
$var wire 1 <" data_in [14] $end
$var wire 1 =" data_in [13] $end
$var wire 1 >" data_in [12] $end
$var wire 1 ?" data_in [11] $end
$var wire 1 @" data_in [10] $end
$var wire 1 A" data_in [9] $end
$var wire 1 B" data_in [8] $end
$var wire 1 C" data_in [7] $end
$var wire 1 D" data_in [6] $end
$var wire 1 E" data_in [5] $end
$var wire 1 F" data_in [4] $end
$var wire 1 G" data_in [3] $end
$var wire 1 H" data_in [2] $end
$var wire 1 I" data_in [1] $end
$var wire 1 J" data_in [0] $end
$var wire 1 z$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 &$ file_id [4] $end
$var wire 1 '$ file_id [3] $end
$var wire 1 ($ file_id [2] $end
$var wire 1 )$ file_id [1] $end
$var wire 1 *$ file_id [0] $end
$var integer 32 -% mcd $end
$var integer 32 .% i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 /% Size $end
$var wire 1 *! data_out [4] $end
$var wire 1 +! data_out [3] $end
$var wire 1 ,! data_out [2] $end
$var wire 1 -! data_out [1] $end
$var wire 1 .! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 |$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 +$ file_id [4] $end
$var wire 1 ,$ file_id [3] $end
$var wire 1 -$ file_id [2] $end
$var wire 1 .$ file_id [1] $end
$var wire 1 /$ file_id [0] $end
$var integer 32 0% mcd $end
$var integer 32 1% i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 2% Size $end
$var wire 1 !% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 ~$ data_in [0] $end
$var wire 1 {$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 0$ file_id [4] $end
$var wire 1 1$ file_id [3] $end
$var wire 1 2$ file_id [2] $end
$var wire 1 3$ file_id [1] $end
$var wire 1 4$ file_id [0] $end
$var integer 32 3% mcd $end
$var integer 32 4% i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 "% data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 r! data_in $end
$var wire 1 }$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 u# file_id [4] $end
$var wire 1 v# file_id [3] $end
$var wire 1 w# file_id [2] $end
$var wire 1 x# file_id [1] $end
$var wire 1 y# file_id [0] $end
$var integer 32 5% mcd $end
$var integer 32 6% i $end
$upscope $end
$upscope $end

$scope module main_mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 (" addr [15] $end
$var wire 1 )" addr [14] $end
$var wire 1 *" addr [13] $end
$var wire 1 +" addr [12] $end
$var wire 1 ," addr [11] $end
$var wire 1 -" addr [10] $end
$var wire 1 ." addr [9] $end
$var wire 1 /" addr [8] $end
$var wire 1 0" addr [7] $end
$var wire 1 1" addr [6] $end
$var wire 1 2" addr [5] $end
$var wire 1 3" addr [4] $end
$var wire 1 4" addr [3] $end
$var wire 1 5" addr [2] $end
$var wire 1 6" addr [1] $end
$var wire 1 7" addr [0] $end
$var wire 1 T! data_in [15] $end
$var wire 1 U! data_in [14] $end
$var wire 1 V! data_in [13] $end
$var wire 1 W! data_in [12] $end
$var wire 1 X! data_in [11] $end
$var wire 1 Y! data_in [10] $end
$var wire 1 Z! data_in [9] $end
$var wire 1 [! data_in [8] $end
$var wire 1 \! data_in [7] $end
$var wire 1 ]! data_in [6] $end
$var wire 1 ^! data_in [5] $end
$var wire 1 _! data_in [4] $end
$var wire 1 `! data_in [3] $end
$var wire 1 a! data_in [2] $end
$var wire 1 b! data_in [1] $end
$var wire 1 c! data_in [0] $end
$var wire 1 8" wr $end
$var wire 1 9" rd $end
$var wire 1 v! data_out [15] $end
$var wire 1 w! data_out [14] $end
$var wire 1 x! data_out [13] $end
$var wire 1 y! data_out [12] $end
$var wire 1 z! data_out [11] $end
$var wire 1 {! data_out [10] $end
$var wire 1 |! data_out [9] $end
$var wire 1 }! data_out [8] $end
$var wire 1 ~! data_out [7] $end
$var wire 1 !" data_out [6] $end
$var wire 1 "" data_out [5] $end
$var wire 1 #" data_out [4] $end
$var wire 1 $" data_out [3] $end
$var wire 1 %" data_out [2] $end
$var wire 1 &" data_out [1] $end
$var wire 1 '" data_out [0] $end
$var wire 1 :" stall $end
$var wire 1 7% busy [3] $end
$var wire 1 8% busy [2] $end
$var wire 1 9% busy [1] $end
$var wire 1 :% busy [0] $end
$var wire 1 M" err $end
$var wire 1 ;% data0_out [15] $end
$var wire 1 <% data0_out [14] $end
$var wire 1 =% data0_out [13] $end
$var wire 1 >% data0_out [12] $end
$var wire 1 ?% data0_out [11] $end
$var wire 1 @% data0_out [10] $end
$var wire 1 A% data0_out [9] $end
$var wire 1 B% data0_out [8] $end
$var wire 1 C% data0_out [7] $end
$var wire 1 D% data0_out [6] $end
$var wire 1 E% data0_out [5] $end
$var wire 1 F% data0_out [4] $end
$var wire 1 G% data0_out [3] $end
$var wire 1 H% data0_out [2] $end
$var wire 1 I% data0_out [1] $end
$var wire 1 J% data0_out [0] $end
$var wire 1 K% data1_out [15] $end
$var wire 1 L% data1_out [14] $end
$var wire 1 M% data1_out [13] $end
$var wire 1 N% data1_out [12] $end
$var wire 1 O% data1_out [11] $end
$var wire 1 P% data1_out [10] $end
$var wire 1 Q% data1_out [9] $end
$var wire 1 R% data1_out [8] $end
$var wire 1 S% data1_out [7] $end
$var wire 1 T% data1_out [6] $end
$var wire 1 U% data1_out [5] $end
$var wire 1 V% data1_out [4] $end
$var wire 1 W% data1_out [3] $end
$var wire 1 X% data1_out [2] $end
$var wire 1 Y% data1_out [1] $end
$var wire 1 Z% data1_out [0] $end
$var wire 1 [% data2_out [15] $end
$var wire 1 \% data2_out [14] $end
$var wire 1 ]% data2_out [13] $end
$var wire 1 ^% data2_out [12] $end
$var wire 1 _% data2_out [11] $end
$var wire 1 `% data2_out [10] $end
$var wire 1 a% data2_out [9] $end
$var wire 1 b% data2_out [8] $end
$var wire 1 c% data2_out [7] $end
$var wire 1 d% data2_out [6] $end
$var wire 1 e% data2_out [5] $end
$var wire 1 f% data2_out [4] $end
$var wire 1 g% data2_out [3] $end
$var wire 1 h% data2_out [2] $end
$var wire 1 i% data2_out [1] $end
$var wire 1 j% data2_out [0] $end
$var wire 1 k% data3_out [15] $end
$var wire 1 l% data3_out [14] $end
$var wire 1 m% data3_out [13] $end
$var wire 1 n% data3_out [12] $end
$var wire 1 o% data3_out [11] $end
$var wire 1 p% data3_out [10] $end
$var wire 1 q% data3_out [9] $end
$var wire 1 r% data3_out [8] $end
$var wire 1 s% data3_out [7] $end
$var wire 1 t% data3_out [6] $end
$var wire 1 u% data3_out [5] $end
$var wire 1 v% data3_out [4] $end
$var wire 1 w% data3_out [3] $end
$var wire 1 x% data3_out [2] $end
$var wire 1 y% data3_out [1] $end
$var wire 1 z% data3_out [0] $end
$var wire 1 {% err0 $end
$var wire 1 |% err1 $end
$var wire 1 }% err2 $end
$var wire 1 ~% err3 $end
$var wire 1 !& sel0 $end
$var wire 1 "& sel1 $end
$var wire 1 #& sel2 $end
$var wire 1 $& sel3 $end
$var wire 1 %& en [3] $end
$var wire 1 && en [2] $end
$var wire 1 '& en [1] $end
$var wire 1 (& en [0] $end
$var wire 1 )& bsy0 [3] $end
$var wire 1 *& bsy0 [2] $end
$var wire 1 +& bsy0 [1] $end
$var wire 1 ,& bsy0 [0] $end
$var wire 1 -& bsy1 [3] $end
$var wire 1 .& bsy1 [2] $end
$var wire 1 /& bsy1 [1] $end
$var wire 1 0& bsy1 [0] $end
$var wire 1 1& bsy2 [3] $end
$var wire 1 2& bsy2 [2] $end
$var wire 1 3& bsy2 [1] $end
$var wire 1 4& bsy2 [0] $end

$scope module m0 $end
$var wire 1 ;% data_out [15] $end
$var wire 1 <% data_out [14] $end
$var wire 1 =% data_out [13] $end
$var wire 1 >% data_out [12] $end
$var wire 1 ?% data_out [11] $end
$var wire 1 @% data_out [10] $end
$var wire 1 A% data_out [9] $end
$var wire 1 B% data_out [8] $end
$var wire 1 C% data_out [7] $end
$var wire 1 D% data_out [6] $end
$var wire 1 E% data_out [5] $end
$var wire 1 F% data_out [4] $end
$var wire 1 G% data_out [3] $end
$var wire 1 H% data_out [2] $end
$var wire 1 I% data_out [1] $end
$var wire 1 J% data_out [0] $end
$var wire 1 {% err $end
$var wire 1 T! data_in [15] $end
$var wire 1 U! data_in [14] $end
$var wire 1 V! data_in [13] $end
$var wire 1 W! data_in [12] $end
$var wire 1 X! data_in [11] $end
$var wire 1 Y! data_in [10] $end
$var wire 1 Z! data_in [9] $end
$var wire 1 [! data_in [8] $end
$var wire 1 \! data_in [7] $end
$var wire 1 ]! data_in [6] $end
$var wire 1 ^! data_in [5] $end
$var wire 1 _! data_in [4] $end
$var wire 1 `! data_in [3] $end
$var wire 1 a! data_in [2] $end
$var wire 1 b! data_in [1] $end
$var wire 1 c! data_in [0] $end
$var wire 1 (" addr [12] $end
$var wire 1 )" addr [11] $end
$var wire 1 *" addr [10] $end
$var wire 1 +" addr [9] $end
$var wire 1 ," addr [8] $end
$var wire 1 -" addr [7] $end
$var wire 1 ." addr [6] $end
$var wire 1 /" addr [5] $end
$var wire 1 0" addr [4] $end
$var wire 1 1" addr [3] $end
$var wire 1 2" addr [2] $end
$var wire 1 3" addr [1] $end
$var wire 1 4" addr [0] $end
$var wire 1 8" wr $end
$var wire 1 9" rd $end
$var wire 1 (& enable $end
$var wire 1 { create_dump $end
$var wire 1 5& bank_id [1] $end
$var wire 1 6& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7& loaded $end
$var reg 16 8& largest [15:0] $end
$var wire 1 9& addr_1c [13] $end
$var wire 1 :& addr_1c [12] $end
$var wire 1 ;& addr_1c [11] $end
$var wire 1 <& addr_1c [10] $end
$var wire 1 =& addr_1c [9] $end
$var wire 1 >& addr_1c [8] $end
$var wire 1 ?& addr_1c [7] $end
$var wire 1 @& addr_1c [6] $end
$var wire 1 A& addr_1c [5] $end
$var wire 1 B& addr_1c [4] $end
$var wire 1 C& addr_1c [3] $end
$var wire 1 D& addr_1c [2] $end
$var wire 1 E& addr_1c [1] $end
$var wire 1 F& addr_1c [0] $end
$var wire 1 G& data_in_1c [15] $end
$var wire 1 H& data_in_1c [14] $end
$var wire 1 I& data_in_1c [13] $end
$var wire 1 J& data_in_1c [12] $end
$var wire 1 K& data_in_1c [11] $end
$var wire 1 L& data_in_1c [10] $end
$var wire 1 M& data_in_1c [9] $end
$var wire 1 N& data_in_1c [8] $end
$var wire 1 O& data_in_1c [7] $end
$var wire 1 P& data_in_1c [6] $end
$var wire 1 Q& data_in_1c [5] $end
$var wire 1 R& data_in_1c [4] $end
$var wire 1 S& data_in_1c [3] $end
$var wire 1 T& data_in_1c [2] $end
$var wire 1 U& data_in_1c [1] $end
$var wire 1 V& data_in_1c [0] $end
$var wire 1 W& rd0 $end
$var wire 1 X& rd1 $end
$var wire 1 Y& rd2 $end
$var wire 1 Z& rd3 $end
$var wire 1 [& wr0 $end
$var wire 1 \& wr1 $end
$var wire 1 ]& wr2 $end
$var wire 1 ^& wr3 $end
$var wire 1 _& busy $end
$var integer 32 `& mcd $end
$var integer 32 a& largeout $end
$var integer 32 b& i $end
$var wire 1 c& data_out_1c [15] $end
$var wire 1 d& data_out_1c [14] $end
$var wire 1 e& data_out_1c [13] $end
$var wire 1 f& data_out_1c [12] $end
$var wire 1 g& data_out_1c [11] $end
$var wire 1 h& data_out_1c [10] $end
$var wire 1 i& data_out_1c [9] $end
$var wire 1 j& data_out_1c [8] $end
$var wire 1 k& data_out_1c [7] $end
$var wire 1 l& data_out_1c [6] $end
$var wire 1 m& data_out_1c [5] $end
$var wire 1 n& data_out_1c [4] $end
$var wire 1 o& data_out_1c [3] $end
$var wire 1 p& data_out_1c [2] $end
$var wire 1 q& data_out_1c [1] $end
$var wire 1 r& data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 X& q $end
$var wire 1 W& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s& state $end
$upscope $end

$scope module ff1 $end
$var wire 1 \& q $end
$var wire 1 [& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t& state $end
$upscope $end

$scope module ff2 $end
$var wire 1 Y& q $end
$var wire 1 X& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u& state $end
$upscope $end

$scope module ff3 $end
$var wire 1 ]& q $end
$var wire 1 \& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v& state $end
$upscope $end

$scope module ff4 $end
$var wire 1 Z& q $end
$var wire 1 Y& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w& state $end
$upscope $end

$scope module ff5 $end
$var wire 1 ^& q $end
$var wire 1 ]& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x& state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 :& q $end
$var wire 1 (" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y& state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 ;& q $end
$var wire 1 )" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z& state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 <& q $end
$var wire 1 *" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {& state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 =& q $end
$var wire 1 +" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |& state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 >& q $end
$var wire 1 ," d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }& state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 ?& q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~& state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 @& q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !' state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 A& q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "' state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 B& q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #' state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 C& q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $' state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 D& q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %' state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 E& q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &' state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 F& q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '' state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 G& q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (' state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 H& q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )' state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 I& q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *' state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 J& q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +' state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 K& q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,' state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 L& q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -' state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 M& q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .' state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 N& q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /' state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 O& q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0' state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 P& q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1' state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 Q& q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2' state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 R& q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3' state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 S& q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4' state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 T& q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5' state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 U& q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6' state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 V& q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7' state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 ;% q $end
$var wire 1 c& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 <% q $end
$var wire 1 d& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9' state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 =% q $end
$var wire 1 e& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :' state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 >% q $end
$var wire 1 f& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;' state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 ?% q $end
$var wire 1 g& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <' state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 @% q $end
$var wire 1 h& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =' state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 A% q $end
$var wire 1 i& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >' state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 B% q $end
$var wire 1 j& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?' state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 C% q $end
$var wire 1 k& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @' state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 D% q $end
$var wire 1 l& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A' state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 E% q $end
$var wire 1 m& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B' state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 F% q $end
$var wire 1 n& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C' state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 G% q $end
$var wire 1 o& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D' state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 H% q $end
$var wire 1 p& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E' state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 I% q $end
$var wire 1 q& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F' state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 J% q $end
$var wire 1 r& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G' state $end
$upscope $end
$upscope $end

$scope module m1 $end
$var wire 1 K% data_out [15] $end
$var wire 1 L% data_out [14] $end
$var wire 1 M% data_out [13] $end
$var wire 1 N% data_out [12] $end
$var wire 1 O% data_out [11] $end
$var wire 1 P% data_out [10] $end
$var wire 1 Q% data_out [9] $end
$var wire 1 R% data_out [8] $end
$var wire 1 S% data_out [7] $end
$var wire 1 T% data_out [6] $end
$var wire 1 U% data_out [5] $end
$var wire 1 V% data_out [4] $end
$var wire 1 W% data_out [3] $end
$var wire 1 X% data_out [2] $end
$var wire 1 Y% data_out [1] $end
$var wire 1 Z% data_out [0] $end
$var wire 1 |% err $end
$var wire 1 T! data_in [15] $end
$var wire 1 U! data_in [14] $end
$var wire 1 V! data_in [13] $end
$var wire 1 W! data_in [12] $end
$var wire 1 X! data_in [11] $end
$var wire 1 Y! data_in [10] $end
$var wire 1 Z! data_in [9] $end
$var wire 1 [! data_in [8] $end
$var wire 1 \! data_in [7] $end
$var wire 1 ]! data_in [6] $end
$var wire 1 ^! data_in [5] $end
$var wire 1 _! data_in [4] $end
$var wire 1 `! data_in [3] $end
$var wire 1 a! data_in [2] $end
$var wire 1 b! data_in [1] $end
$var wire 1 c! data_in [0] $end
$var wire 1 (" addr [12] $end
$var wire 1 )" addr [11] $end
$var wire 1 *" addr [10] $end
$var wire 1 +" addr [9] $end
$var wire 1 ," addr [8] $end
$var wire 1 -" addr [7] $end
$var wire 1 ." addr [6] $end
$var wire 1 /" addr [5] $end
$var wire 1 0" addr [4] $end
$var wire 1 1" addr [3] $end
$var wire 1 2" addr [2] $end
$var wire 1 3" addr [1] $end
$var wire 1 4" addr [0] $end
$var wire 1 8" wr $end
$var wire 1 9" rd $end
$var wire 1 '& enable $end
$var wire 1 { create_dump $end
$var wire 1 H' bank_id [1] $end
$var wire 1 I' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' loaded $end
$var reg 16 K' largest [15:0] $end
$var wire 1 L' addr_1c [13] $end
$var wire 1 M' addr_1c [12] $end
$var wire 1 N' addr_1c [11] $end
$var wire 1 O' addr_1c [10] $end
$var wire 1 P' addr_1c [9] $end
$var wire 1 Q' addr_1c [8] $end
$var wire 1 R' addr_1c [7] $end
$var wire 1 S' addr_1c [6] $end
$var wire 1 T' addr_1c [5] $end
$var wire 1 U' addr_1c [4] $end
$var wire 1 V' addr_1c [3] $end
$var wire 1 W' addr_1c [2] $end
$var wire 1 X' addr_1c [1] $end
$var wire 1 Y' addr_1c [0] $end
$var wire 1 Z' data_in_1c [15] $end
$var wire 1 [' data_in_1c [14] $end
$var wire 1 \' data_in_1c [13] $end
$var wire 1 ]' data_in_1c [12] $end
$var wire 1 ^' data_in_1c [11] $end
$var wire 1 _' data_in_1c [10] $end
$var wire 1 `' data_in_1c [9] $end
$var wire 1 a' data_in_1c [8] $end
$var wire 1 b' data_in_1c [7] $end
$var wire 1 c' data_in_1c [6] $end
$var wire 1 d' data_in_1c [5] $end
$var wire 1 e' data_in_1c [4] $end
$var wire 1 f' data_in_1c [3] $end
$var wire 1 g' data_in_1c [2] $end
$var wire 1 h' data_in_1c [1] $end
$var wire 1 i' data_in_1c [0] $end
$var wire 1 j' rd0 $end
$var wire 1 k' rd1 $end
$var wire 1 l' rd2 $end
$var wire 1 m' rd3 $end
$var wire 1 n' wr0 $end
$var wire 1 o' wr1 $end
$var wire 1 p' wr2 $end
$var wire 1 q' wr3 $end
$var wire 1 r' busy $end
$var integer 32 s' mcd $end
$var integer 32 t' largeout $end
$var integer 32 u' i $end
$var wire 1 v' data_out_1c [15] $end
$var wire 1 w' data_out_1c [14] $end
$var wire 1 x' data_out_1c [13] $end
$var wire 1 y' data_out_1c [12] $end
$var wire 1 z' data_out_1c [11] $end
$var wire 1 {' data_out_1c [10] $end
$var wire 1 |' data_out_1c [9] $end
$var wire 1 }' data_out_1c [8] $end
$var wire 1 ~' data_out_1c [7] $end
$var wire 1 !( data_out_1c [6] $end
$var wire 1 "( data_out_1c [5] $end
$var wire 1 #( data_out_1c [4] $end
$var wire 1 $( data_out_1c [3] $end
$var wire 1 %( data_out_1c [2] $end
$var wire 1 &( data_out_1c [1] $end
$var wire 1 '( data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 k' q $end
$var wire 1 j' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (( state $end
$upscope $end

$scope module ff1 $end
$var wire 1 o' q $end
$var wire 1 n' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )( state $end
$upscope $end

$scope module ff2 $end
$var wire 1 l' q $end
$var wire 1 k' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *( state $end
$upscope $end

$scope module ff3 $end
$var wire 1 p' q $end
$var wire 1 o' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +( state $end
$upscope $end

$scope module ff4 $end
$var wire 1 m' q $end
$var wire 1 l' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,( state $end
$upscope $end

$scope module ff5 $end
$var wire 1 q' q $end
$var wire 1 p' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -( state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 M' q $end
$var wire 1 (" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .( state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 N' q $end
$var wire 1 )" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /( state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 O' q $end
$var wire 1 *" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0( state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 P' q $end
$var wire 1 +" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1( state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 Q' q $end
$var wire 1 ," d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2( state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 R' q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3( state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 S' q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4( state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 T' q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5( state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 U' q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6( state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 V' q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7( state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 W' q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8( state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 X' q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9( state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 Y' q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :( state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 Z' q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;( state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 [' q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <( state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 \' q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =( state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 ]' q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 ^' q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 _' q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 `' q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 a' q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 b' q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 c' q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 d' q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 e' q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F( state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 f' q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G( state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 g' q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 h' q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I( state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 i' q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J( state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 K% q $end
$var wire 1 v' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 L% q $end
$var wire 1 w' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L( state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 M% q $end
$var wire 1 x' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M( state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 N% q $end
$var wire 1 y' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N( state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 O% q $end
$var wire 1 z' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O( state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 P% q $end
$var wire 1 {' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P( state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 Q% q $end
$var wire 1 |' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q( state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 R% q $end
$var wire 1 }' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R( state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 S% q $end
$var wire 1 ~' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S( state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 T% q $end
$var wire 1 !( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T( state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 U% q $end
$var wire 1 "( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U( state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 V% q $end
$var wire 1 #( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V( state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 W% q $end
$var wire 1 $( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W( state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 X% q $end
$var wire 1 %( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X( state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 Y% q $end
$var wire 1 &( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y( state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 Z% q $end
$var wire 1 '( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z( state $end
$upscope $end
$upscope $end

$scope module m2 $end
$var wire 1 [% data_out [15] $end
$var wire 1 \% data_out [14] $end
$var wire 1 ]% data_out [13] $end
$var wire 1 ^% data_out [12] $end
$var wire 1 _% data_out [11] $end
$var wire 1 `% data_out [10] $end
$var wire 1 a% data_out [9] $end
$var wire 1 b% data_out [8] $end
$var wire 1 c% data_out [7] $end
$var wire 1 d% data_out [6] $end
$var wire 1 e% data_out [5] $end
$var wire 1 f% data_out [4] $end
$var wire 1 g% data_out [3] $end
$var wire 1 h% data_out [2] $end
$var wire 1 i% data_out [1] $end
$var wire 1 j% data_out [0] $end
$var wire 1 }% err $end
$var wire 1 T! data_in [15] $end
$var wire 1 U! data_in [14] $end
$var wire 1 V! data_in [13] $end
$var wire 1 W! data_in [12] $end
$var wire 1 X! data_in [11] $end
$var wire 1 Y! data_in [10] $end
$var wire 1 Z! data_in [9] $end
$var wire 1 [! data_in [8] $end
$var wire 1 \! data_in [7] $end
$var wire 1 ]! data_in [6] $end
$var wire 1 ^! data_in [5] $end
$var wire 1 _! data_in [4] $end
$var wire 1 `! data_in [3] $end
$var wire 1 a! data_in [2] $end
$var wire 1 b! data_in [1] $end
$var wire 1 c! data_in [0] $end
$var wire 1 (" addr [12] $end
$var wire 1 )" addr [11] $end
$var wire 1 *" addr [10] $end
$var wire 1 +" addr [9] $end
$var wire 1 ," addr [8] $end
$var wire 1 -" addr [7] $end
$var wire 1 ." addr [6] $end
$var wire 1 /" addr [5] $end
$var wire 1 0" addr [4] $end
$var wire 1 1" addr [3] $end
$var wire 1 2" addr [2] $end
$var wire 1 3" addr [1] $end
$var wire 1 4" addr [0] $end
$var wire 1 8" wr $end
$var wire 1 9" rd $end
$var wire 1 && enable $end
$var wire 1 { create_dump $end
$var wire 1 [( bank_id [1] $end
$var wire 1 \( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( loaded $end
$var reg 16 ^( largest [15:0] $end
$var wire 1 _( addr_1c [13] $end
$var wire 1 `( addr_1c [12] $end
$var wire 1 a( addr_1c [11] $end
$var wire 1 b( addr_1c [10] $end
$var wire 1 c( addr_1c [9] $end
$var wire 1 d( addr_1c [8] $end
$var wire 1 e( addr_1c [7] $end
$var wire 1 f( addr_1c [6] $end
$var wire 1 g( addr_1c [5] $end
$var wire 1 h( addr_1c [4] $end
$var wire 1 i( addr_1c [3] $end
$var wire 1 j( addr_1c [2] $end
$var wire 1 k( addr_1c [1] $end
$var wire 1 l( addr_1c [0] $end
$var wire 1 m( data_in_1c [15] $end
$var wire 1 n( data_in_1c [14] $end
$var wire 1 o( data_in_1c [13] $end
$var wire 1 p( data_in_1c [12] $end
$var wire 1 q( data_in_1c [11] $end
$var wire 1 r( data_in_1c [10] $end
$var wire 1 s( data_in_1c [9] $end
$var wire 1 t( data_in_1c [8] $end
$var wire 1 u( data_in_1c [7] $end
$var wire 1 v( data_in_1c [6] $end
$var wire 1 w( data_in_1c [5] $end
$var wire 1 x( data_in_1c [4] $end
$var wire 1 y( data_in_1c [3] $end
$var wire 1 z( data_in_1c [2] $end
$var wire 1 {( data_in_1c [1] $end
$var wire 1 |( data_in_1c [0] $end
$var wire 1 }( rd0 $end
$var wire 1 ~( rd1 $end
$var wire 1 !) rd2 $end
$var wire 1 ") rd3 $end
$var wire 1 #) wr0 $end
$var wire 1 $) wr1 $end
$var wire 1 %) wr2 $end
$var wire 1 &) wr3 $end
$var wire 1 ') busy $end
$var integer 32 () mcd $end
$var integer 32 )) largeout $end
$var integer 32 *) i $end
$var wire 1 +) data_out_1c [15] $end
$var wire 1 ,) data_out_1c [14] $end
$var wire 1 -) data_out_1c [13] $end
$var wire 1 .) data_out_1c [12] $end
$var wire 1 /) data_out_1c [11] $end
$var wire 1 0) data_out_1c [10] $end
$var wire 1 1) data_out_1c [9] $end
$var wire 1 2) data_out_1c [8] $end
$var wire 1 3) data_out_1c [7] $end
$var wire 1 4) data_out_1c [6] $end
$var wire 1 5) data_out_1c [5] $end
$var wire 1 6) data_out_1c [4] $end
$var wire 1 7) data_out_1c [3] $end
$var wire 1 8) data_out_1c [2] $end
$var wire 1 9) data_out_1c [1] $end
$var wire 1 :) data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 ~( q $end
$var wire 1 }( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;) state $end
$upscope $end

$scope module ff1 $end
$var wire 1 $) q $end
$var wire 1 #) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <) state $end
$upscope $end

$scope module ff2 $end
$var wire 1 !) q $end
$var wire 1 ~( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =) state $end
$upscope $end

$scope module ff3 $end
$var wire 1 %) q $end
$var wire 1 $) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >) state $end
$upscope $end

$scope module ff4 $end
$var wire 1 ") q $end
$var wire 1 !) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?) state $end
$upscope $end

$scope module ff5 $end
$var wire 1 &) q $end
$var wire 1 %) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @) state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 `( q $end
$var wire 1 (" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A) state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 a( q $end
$var wire 1 )" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B) state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 b( q $end
$var wire 1 *" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C) state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 c( q $end
$var wire 1 +" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D) state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 d( q $end
$var wire 1 ," d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E) state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 e( q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F) state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 f( q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G) state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 g( q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H) state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 h( q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I) state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 i( q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J) state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 j( q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K) state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 k( q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L) state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 l( q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M) state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 m( q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 n( q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 o( q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 p( q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 q( q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 r( q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 s( q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 t( q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 u( q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 v( q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 w( q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 x( q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 y( q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 z( q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 {( q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \) state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 |( q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]) state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 [% q $end
$var wire 1 +) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 \% q $end
$var wire 1 ,) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _) state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 ]% q $end
$var wire 1 -) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `) state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 ^% q $end
$var wire 1 .) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a) state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 _% q $end
$var wire 1 /) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b) state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 `% q $end
$var wire 1 0) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c) state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 a% q $end
$var wire 1 1) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d) state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 b% q $end
$var wire 1 2) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e) state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 c% q $end
$var wire 1 3) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f) state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 d% q $end
$var wire 1 4) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g) state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 e% q $end
$var wire 1 5) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h) state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 f% q $end
$var wire 1 6) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i) state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 g% q $end
$var wire 1 7) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j) state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 h% q $end
$var wire 1 8) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k) state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 i% q $end
$var wire 1 9) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l) state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 j% q $end
$var wire 1 :) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m) state $end
$upscope $end
$upscope $end

$scope module m3 $end
$var wire 1 k% data_out [15] $end
$var wire 1 l% data_out [14] $end
$var wire 1 m% data_out [13] $end
$var wire 1 n% data_out [12] $end
$var wire 1 o% data_out [11] $end
$var wire 1 p% data_out [10] $end
$var wire 1 q% data_out [9] $end
$var wire 1 r% data_out [8] $end
$var wire 1 s% data_out [7] $end
$var wire 1 t% data_out [6] $end
$var wire 1 u% data_out [5] $end
$var wire 1 v% data_out [4] $end
$var wire 1 w% data_out [3] $end
$var wire 1 x% data_out [2] $end
$var wire 1 y% data_out [1] $end
$var wire 1 z% data_out [0] $end
$var wire 1 ~% err $end
$var wire 1 T! data_in [15] $end
$var wire 1 U! data_in [14] $end
$var wire 1 V! data_in [13] $end
$var wire 1 W! data_in [12] $end
$var wire 1 X! data_in [11] $end
$var wire 1 Y! data_in [10] $end
$var wire 1 Z! data_in [9] $end
$var wire 1 [! data_in [8] $end
$var wire 1 \! data_in [7] $end
$var wire 1 ]! data_in [6] $end
$var wire 1 ^! data_in [5] $end
$var wire 1 _! data_in [4] $end
$var wire 1 `! data_in [3] $end
$var wire 1 a! data_in [2] $end
$var wire 1 b! data_in [1] $end
$var wire 1 c! data_in [0] $end
$var wire 1 (" addr [12] $end
$var wire 1 )" addr [11] $end
$var wire 1 *" addr [10] $end
$var wire 1 +" addr [9] $end
$var wire 1 ," addr [8] $end
$var wire 1 -" addr [7] $end
$var wire 1 ." addr [6] $end
$var wire 1 /" addr [5] $end
$var wire 1 0" addr [4] $end
$var wire 1 1" addr [3] $end
$var wire 1 2" addr [2] $end
$var wire 1 3" addr [1] $end
$var wire 1 4" addr [0] $end
$var wire 1 8" wr $end
$var wire 1 9" rd $end
$var wire 1 %& enable $end
$var wire 1 { create_dump $end
$var wire 1 n) bank_id [1] $end
$var wire 1 o) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) loaded $end
$var reg 16 q) largest [15:0] $end
$var wire 1 r) addr_1c [13] $end
$var wire 1 s) addr_1c [12] $end
$var wire 1 t) addr_1c [11] $end
$var wire 1 u) addr_1c [10] $end
$var wire 1 v) addr_1c [9] $end
$var wire 1 w) addr_1c [8] $end
$var wire 1 x) addr_1c [7] $end
$var wire 1 y) addr_1c [6] $end
$var wire 1 z) addr_1c [5] $end
$var wire 1 {) addr_1c [4] $end
$var wire 1 |) addr_1c [3] $end
$var wire 1 }) addr_1c [2] $end
$var wire 1 ~) addr_1c [1] $end
$var wire 1 !* addr_1c [0] $end
$var wire 1 "* data_in_1c [15] $end
$var wire 1 #* data_in_1c [14] $end
$var wire 1 $* data_in_1c [13] $end
$var wire 1 %* data_in_1c [12] $end
$var wire 1 &* data_in_1c [11] $end
$var wire 1 '* data_in_1c [10] $end
$var wire 1 (* data_in_1c [9] $end
$var wire 1 )* data_in_1c [8] $end
$var wire 1 ** data_in_1c [7] $end
$var wire 1 +* data_in_1c [6] $end
$var wire 1 ,* data_in_1c [5] $end
$var wire 1 -* data_in_1c [4] $end
$var wire 1 .* data_in_1c [3] $end
$var wire 1 /* data_in_1c [2] $end
$var wire 1 0* data_in_1c [1] $end
$var wire 1 1* data_in_1c [0] $end
$var wire 1 2* rd0 $end
$var wire 1 3* rd1 $end
$var wire 1 4* rd2 $end
$var wire 1 5* rd3 $end
$var wire 1 6* wr0 $end
$var wire 1 7* wr1 $end
$var wire 1 8* wr2 $end
$var wire 1 9* wr3 $end
$var wire 1 :* busy $end
$var integer 32 ;* mcd $end
$var integer 32 <* largeout $end
$var integer 32 =* i $end
$var wire 1 >* data_out_1c [15] $end
$var wire 1 ?* data_out_1c [14] $end
$var wire 1 @* data_out_1c [13] $end
$var wire 1 A* data_out_1c [12] $end
$var wire 1 B* data_out_1c [11] $end
$var wire 1 C* data_out_1c [10] $end
$var wire 1 D* data_out_1c [9] $end
$var wire 1 E* data_out_1c [8] $end
$var wire 1 F* data_out_1c [7] $end
$var wire 1 G* data_out_1c [6] $end
$var wire 1 H* data_out_1c [5] $end
$var wire 1 I* data_out_1c [4] $end
$var wire 1 J* data_out_1c [3] $end
$var wire 1 K* data_out_1c [2] $end
$var wire 1 L* data_out_1c [1] $end
$var wire 1 M* data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 3* q $end
$var wire 1 2* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N* state $end
$upscope $end

$scope module ff1 $end
$var wire 1 7* q $end
$var wire 1 6* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O* state $end
$upscope $end

$scope module ff2 $end
$var wire 1 4* q $end
$var wire 1 3* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P* state $end
$upscope $end

$scope module ff3 $end
$var wire 1 8* q $end
$var wire 1 7* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q* state $end
$upscope $end

$scope module ff4 $end
$var wire 1 5* q $end
$var wire 1 4* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R* state $end
$upscope $end

$scope module ff5 $end
$var wire 1 9* q $end
$var wire 1 8* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S* state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 s) q $end
$var wire 1 (" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T* state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 t) q $end
$var wire 1 )" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U* state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 u) q $end
$var wire 1 *" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V* state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 v) q $end
$var wire 1 +" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 w) q $end
$var wire 1 ," d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 x) q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 y) q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 z) q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 {) q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 |) q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 }) q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^* state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 ~) q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _* state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 !* q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `* state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 "* q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a* state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 #* q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b* state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 $* q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c* state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 %* q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 &* q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 '* q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 (* q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 )* q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 ** q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 +* q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 ,* q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 -* q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l* state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 .* q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m* state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 /* q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 0* q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o* state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 1* q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p* state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 k% q $end
$var wire 1 >* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 l% q $end
$var wire 1 ?* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r* state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 m% q $end
$var wire 1 @* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s* state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 n% q $end
$var wire 1 A* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t* state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 o% q $end
$var wire 1 B* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u* state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 p% q $end
$var wire 1 C* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v* state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 q% q $end
$var wire 1 D* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w* state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 r% q $end
$var wire 1 E* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x* state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 s% q $end
$var wire 1 F* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y* state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 t% q $end
$var wire 1 G* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z* state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 u% q $end
$var wire 1 H* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {* state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 v% q $end
$var wire 1 I* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |* state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 w% q $end
$var wire 1 J* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }* state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 x% q $end
$var wire 1 K* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 y% q $end
$var wire 1 L* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 z% q $end
$var wire 1 M* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end
$upscope $end

$scope module b0[3] $end
$var wire 1 )& q $end
$var wire 1 %& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module b0[2] $end
$var wire 1 *& q $end
$var wire 1 && d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module b0[1] $end
$var wire 1 +& q $end
$var wire 1 '& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module b0[0] $end
$var wire 1 ,& q $end
$var wire 1 (& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module b1[3] $end
$var wire 1 -& q $end
$var wire 1 )& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module b1[2] $end
$var wire 1 .& q $end
$var wire 1 *& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module b1[1] $end
$var wire 1 /& q $end
$var wire 1 +& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module b1[0] $end
$var wire 1 0& q $end
$var wire 1 ,& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module b2[3] $end
$var wire 1 1& q $end
$var wire 1 -& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module b2[2] $end
$var wire 1 2& q $end
$var wire 1 .& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module b2[1] $end
$var wire 1 3& q $end
$var wire 1 /& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module b2[0] $end
$var wire 1 4& q $end
$var wire 1 0& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end
$upscope $end

$scope module cache_controller $end
$var parameter 4 /+ IDLE $end
$var parameter 4 0+ WB0 $end
$var parameter 4 1+ WB1 $end
$var parameter 4 2+ WB2 $end
$var parameter 4 3+ WB3 $end
$var parameter 4 4+ ALLO0 $end
$var parameter 4 5+ ALLO1 $end
$var parameter 4 6+ ALLO2 $end
$var parameter 4 7+ ALLO3 $end
$var parameter 4 8+ ALLO4 $end
$var parameter 4 9+ ALLO5 $end
$var parameter 4 :+ COMP $end
$var parameter 4 ;+ DONE $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 f! hit $end
$var wire 1 i! dirty $end
$var wire 1 l! valid $end
$var wire 1 :" stall $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 f offset_in [2] $end
$var wire 1 g offset_in [1] $end
$var wire 1 h offset_in [0] $end
$var wire 1 /! tag_out [4] $end
$var wire 1 0! tag_out [3] $end
$var wire 1 1! tag_out [2] $end
$var wire 1 2! tag_out [1] $end
$var wire 1 3! tag_out [0] $end
$var reg 1 <+ Done $end
$var reg 1 =+ Stall $end
$var reg 1 >+ CacheHit $end
$var reg 1 ?+ err $end
$var reg 1 @+ enable $end
$var reg 3 A+ offset [2:0] $end
$var reg 1 B+ comp $end
$var reg 1 C+ write $end
$var reg 1 D+ valid_in $end
$var reg 16 E+ addr [15:0] $end
$var reg 1 F+ wr $end
$var reg 1 G+ rd $end
$var reg 4 H+ next_state [3:0] $end
$var wire 1 I+ curr_state [3] $end
$var wire 1 J+ curr_state [2] $end
$var wire 1 K+ curr_state [1] $end
$var wire 1 L+ curr_state [0] $end

$scope module state_reg[3] $end
$var wire 1 I+ q $end
$var wire 1 M+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N+ state $end
$upscope $end

$scope module state_reg[2] $end
$var wire 1 J+ q $end
$var wire 1 O+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end

$scope module state_reg[1] $end
$var wire 1 K+ q $end
$var wire 1 Q+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end

$scope module state_reg[0] $end
$var wire 1 L+ q $end
$var wire 1 S+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end
$upscope $end

$scope module victimway_reg $end
$var wire 1 P" q $end
$var wire 1 O" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end
$upscope $end
$upscope $end

$scope module ref $end
$var wire 1 V+ Addr [15] $end
$var wire 1 W+ Addr [14] $end
$var wire 1 X+ Addr [13] $end
$var wire 1 Y+ Addr [12] $end
$var wire 1 Z+ Addr [11] $end
$var wire 1 [+ Addr [10] $end
$var wire 1 \+ Addr [9] $end
$var wire 1 ]+ Addr [8] $end
$var wire 1 ^+ Addr [7] $end
$var wire 1 _+ Addr [6] $end
$var wire 1 `+ Addr [5] $end
$var wire 1 a+ Addr [4] $end
$var wire 1 b+ Addr [3] $end
$var wire 1 c+ Addr [2] $end
$var wire 1 d+ Addr [1] $end
$var wire 1 e+ Addr [0] $end
$var wire 1 f+ DataIn [15] $end
$var wire 1 g+ DataIn [14] $end
$var wire 1 h+ DataIn [13] $end
$var wire 1 i+ DataIn [12] $end
$var wire 1 j+ DataIn [11] $end
$var wire 1 k+ DataIn [10] $end
$var wire 1 l+ DataIn [9] $end
$var wire 1 m+ DataIn [8] $end
$var wire 1 n+ DataIn [7] $end
$var wire 1 o+ DataIn [6] $end
$var wire 1 p+ DataIn [5] $end
$var wire 1 q+ DataIn [4] $end
$var wire 1 r+ DataIn [3] $end
$var wire 1 s+ DataIn [2] $end
$var wire 1 t+ DataIn [1] $end
$var wire 1 u+ DataIn [0] $end
$var wire 1 v+ Rd $end
$var wire 1 w+ Wr $end
$var wire 1 x+ clk $end
$var wire 1 y+ rst $end
$var reg 16 z+ DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 {+ loaded $end
$var integer 32 |+ i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b0 4
05
06
b10111000101110001011110010111101110110011001010111001001101001011001100110100101100011011000010111010001101001011011110110111000101111001011110110110101100101011011010010111001100001011001000110010001110010 7
1!!
1"!
17&
b1 8&
0s&
0t&
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
0u&
0v&
0w&
0x&
1J'
b1 K'
0((
0)(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0*(
0+(
0,(
0-(
1](
b1 ^(
0;)
0<)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0=)
0>)
0?)
0@)
1p)
b1 q)
0N*
0O*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
0P*
0Q*
0R*
0S*
0&+
0%+
0$+
0#+
0*+
0)+
0(+
0'+
0.+
0-+
0,+
0++
0<+
1=+
0>+
1?+
1@+
b0 A+
0B+
0C+
0D+
b0 E+
0F+
0G+
bx H+
0T+
0R+
0P+
0N+
0U+
bx z+
1{+
0N
1R
bx V
b0 X
b1 $!
b1 S"
b10000 `#
b10000 c#
b10000 f#
b10000 i#
b101 l#
b1 o#
b11 t#
b10000 #%
b10000 &%
b10000 )%
b10000 ,%
b101 /%
b1 2%
b0 /+
b1 0+
b10 1+
b11 2+
b100 3+
b101 4+
b110 5+
b111 6+
b1000 7+
b1001 8+
b1010 9+
b1011 :+
b1100 ;+
b1 #!
bx a#
b100000000 b#
bx d#
b100000000 e#
bx g#
b100000000 h#
bx j#
b100000000 k#
bx m#
b100000000 n#
bx p#
b100000000 q#
bx r#
b100000000 s#
bx $%
b100000000 %%
bx '%
b100000000 (%
bx *%
b100000000 +%
bx -%
b100000000 .%
bx 0%
b100000000 1%
bx 3%
b100000000 4%
bx 5%
b100000000 6%
bx `&
bx a&
b100000000000001 b&
bx s'
bx t'
b100000000000001 u'
bx ()
bx ))
b100000000000001 *)
bx ;*
bx <*
b100000000000001 =*
b10000000000000000 |+
b0 O
b0 P
b0 Q
b0 S
b10000000000000000000000000000011 T
bx U
bx W
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
12
18
19
0:
1|
1}
1~
0)!
0(!
0'!
0&!
0%!
0.!
0-!
0,!
0+!
0*!
03!
02!
01!
00!
0/!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
1m!
0n!
0o!
0p!
0q!
0r!
0u!
0t!
0s!
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
08"
09"
0:"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0K"
0L"
0M"
1N"
xO"
xP"
0Q"
0R"
0X"
0W"
0V"
1U"
0T"
1]"
0\"
0["
1Z"
0Y"
0b"
1a"
0`"
1_"
0^"
1g"
1f"
0e"
1d"
0c"
0l"
0k"
1j"
1i"
0h"
1q"
0p"
1o"
1n"
0m"
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0T#
1U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0y#
0x#
0w#
1v#
1u#
1~#
0}#
0|#
1{#
1z#
0%$
1$$
0#$
1"$
1!$
1*$
1)$
0($
1'$
1&$
0/$
0.$
1-$
1,$
1+$
14$
03$
12$
11$
10$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0u$
1v$
0w$
0x$
0y$
0z$
0{$
0|$
0}$
0~$
0!%
0"%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
0{%
0|%
0}%
0~%
1!&
0"&
0#&
0$&
0(&
0'&
0&&
0%&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
09&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
0W&
xX&
xY&
xZ&
0[&
x\&
x]&
x^&
x_&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
0L'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
0j'
xk'
xl'
xm'
0n'
xo'
xp'
xq'
xr'
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
0_(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
0}(
x~(
x!)
x")
0#)
x$)
x%)
x&)
x')
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
0r)
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
x%*
x$*
x#*
x"*
02*
x3*
x4*
x5*
06*
x7*
x8*
x9*
x:*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x,&
x+&
x*&
x)&
x0&
x/&
x.&
x-&
x4&
x3&
x2&
x1&
xL+
xK+
xJ+
xI+
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
0w+
0v+
0u+
0t+
0s+
0r+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
x:%
x9%
x8%
x7%
1o)
1n)
0\(
1[(
1I'
0H'
06&
05&
xS+
xQ+
xO+
xM+
1x+
1y+
$end
#1
0P"
0I+
0J+
0K+
0L+
01&
02&
03&
04&
0-&
0.&
0/&
00&
0)&
0*&
0+&
0,&
09*
05*
08*
04*
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0"*
0#*
0$*
0%*
0&*
0'*
0(*
0)*
0**
0+*
0,*
0-*
0.*
0/*
00*
01*
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
0~)
0!*
07*
03*
0&)
0")
0%)
0!)
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0m(
0n(
0o(
0p(
0q(
0r(
0s(
0t(
0u(
0v(
0w(
0x(
0y(
0z(
0{(
0|(
0`(
0a(
0b(
0c(
0d(
0e(
0f(
0g(
0h(
0i(
0j(
0k(
0l(
0$)
0~(
0q'
0m'
0p'
0l'
0K%
0L%
0M%
0N%
0O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0Z'
0['
0\'
0]'
0^'
0_'
0`'
0a'
0b'
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0M'
0N'
0O'
0P'
0Q'
0R'
0S'
0T'
0U'
0V'
0W'
0X'
0Y'
0o'
0k'
0^&
0Z&
0]&
0Y&
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
0G%
0H%
0I%
0J%
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0:&
0;&
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0\&
0X&
0_&
0r'
0')
0:*
0O"
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0:%
09%
08%
07%
0?+
b0 H+
0=+
0N"
0S+
0Q+
0O+
0M+
02
0|
#50
0!!
0x+
08
0}
#100
1!!
1x+
18
1}
b0 b#
b1 b#
b10 b#
b11 b#
b100 b#
b101 b#
b110 b#
b111 b#
b1000 b#
b1001 b#
b1010 b#
b1011 b#
b1100 b#
b1101 b#
b1110 b#
b1111 b#
b10000 b#
b10001 b#
b10010 b#
b10011 b#
b10100 b#
b10101 b#
b10110 b#
b10111 b#
b11000 b#
b11001 b#
b11010 b#
b11011 b#
b11100 b#
b11101 b#
b11110 b#
b11111 b#
b100000 b#
b100001 b#
b100010 b#
b100011 b#
b100100 b#
b100101 b#
b100110 b#
b100111 b#
b101000 b#
b101001 b#
b101010 b#
b101011 b#
b101100 b#
b101101 b#
b101110 b#
b101111 b#
b110000 b#
b110001 b#
b110010 b#
b110011 b#
b110100 b#
b110101 b#
b110110 b#
b110111 b#
b111000 b#
b111001 b#
b111010 b#
b111011 b#
b111100 b#
b111101 b#
b111110 b#
b111111 b#
b1000000 b#
b1000001 b#
b1000010 b#
b1000011 b#
b1000100 b#
b1000101 b#
b1000110 b#
b1000111 b#
b1001000 b#
b1001001 b#
b1001010 b#
b1001011 b#
b1001100 b#
b1001101 b#
b1001110 b#
b1001111 b#
b1010000 b#
b1010001 b#
b1010010 b#
b1010011 b#
b1010100 b#
b1010101 b#
b1010110 b#
b1010111 b#
b1011000 b#
b1011001 b#
b1011010 b#
b1011011 b#
b1011100 b#
b1011101 b#
b1011110 b#
b1011111 b#
b1100000 b#
b1100001 b#
b1100010 b#
b1100011 b#
b1100100 b#
b1100101 b#
b1100110 b#
b1100111 b#
b1101000 b#
b1101001 b#
b1101010 b#
b1101011 b#
b1101100 b#
b1101101 b#
b1101110 b#
b1101111 b#
b1110000 b#
b1110001 b#
b1110010 b#
b1110011 b#
b1110100 b#
b1110101 b#
b1110110 b#
b1110111 b#
b1111000 b#
b1111001 b#
b1111010 b#
b1111011 b#
b1111100 b#
b1111101 b#
b1111110 b#
b1111111 b#
b10000000 b#
b10000001 b#
b10000010 b#
b10000011 b#
b10000100 b#
b10000101 b#
b10000110 b#
b10000111 b#
b10001000 b#
b10001001 b#
b10001010 b#
b10001011 b#
b10001100 b#
b10001101 b#
b10001110 b#
b10001111 b#
b10010000 b#
b10010001 b#
b10010010 b#
b10010011 b#
b10010100 b#
b10010101 b#
b10010110 b#
b10010111 b#
b10011000 b#
b10011001 b#
b10011010 b#
b10011011 b#
b10011100 b#
b10011101 b#
b10011110 b#
b10011111 b#
b10100000 b#
b10100001 b#
b10100010 b#
b10100011 b#
b10100100 b#
b10100101 b#
b10100110 b#
b10100111 b#
b10101000 b#
b10101001 b#
b10101010 b#
b10101011 b#
b10101100 b#
b10101101 b#
b10101110 b#
b10101111 b#
b10110000 b#
b10110001 b#
b10110010 b#
b10110011 b#
b10110100 b#
b10110101 b#
b10110110 b#
b10110111 b#
b10111000 b#
b10111001 b#
b10111010 b#
b10111011 b#
b10111100 b#
b10111101 b#
b10111110 b#
b10111111 b#
b11000000 b#
b11000001 b#
b11000010 b#
b11000011 b#
b11000100 b#
b11000101 b#
b11000110 b#
b11000111 b#
b11001000 b#
b11001001 b#
b11001010 b#
b11001011 b#
b11001100 b#
b11001101 b#
b11001110 b#
b11001111 b#
b11010000 b#
b11010001 b#
b11010010 b#
b11010011 b#
b11010100 b#
b11010101 b#
b11010110 b#
b11010111 b#
b11011000 b#
b11011001 b#
b11011010 b#
b11011011 b#
b11011100 b#
b11011101 b#
b11011110 b#
b11011111 b#
b11100000 b#
b11100001 b#
b11100010 b#
b11100011 b#
b11100100 b#
b11100101 b#
b11100110 b#
b11100111 b#
b11101000 b#
b11101001 b#
b11101010 b#
b11101011 b#
b11101100 b#
b11101101 b#
b11101110 b#
b11101111 b#
b11110000 b#
b11110001 b#
b11110010 b#
b11110011 b#
b11110100 b#
b11110101 b#
b11110110 b#
b11110111 b#
b11111000 b#
b11111001 b#
b11111010 b#
b11111011 b#
b11111100 b#
b11111101 b#
b11111110 b#
b11111111 b#
b100000000 b#
b0 e#
b1 e#
b10 e#
b11 e#
b100 e#
b101 e#
b110 e#
b111 e#
b1000 e#
b1001 e#
b1010 e#
b1011 e#
b1100 e#
b1101 e#
b1110 e#
b1111 e#
b10000 e#
b10001 e#
b10010 e#
b10011 e#
b10100 e#
b10101 e#
b10110 e#
b10111 e#
b11000 e#
b11001 e#
b11010 e#
b11011 e#
b11100 e#
b11101 e#
b11110 e#
b11111 e#
b100000 e#
b100001 e#
b100010 e#
b100011 e#
b100100 e#
b100101 e#
b100110 e#
b100111 e#
b101000 e#
b101001 e#
b101010 e#
b101011 e#
b101100 e#
b101101 e#
b101110 e#
b101111 e#
b110000 e#
b110001 e#
b110010 e#
b110011 e#
b110100 e#
b110101 e#
b110110 e#
b110111 e#
b111000 e#
b111001 e#
b111010 e#
b111011 e#
b111100 e#
b111101 e#
b111110 e#
b111111 e#
b1000000 e#
b1000001 e#
b1000010 e#
b1000011 e#
b1000100 e#
b1000101 e#
b1000110 e#
b1000111 e#
b1001000 e#
b1001001 e#
b1001010 e#
b1001011 e#
b1001100 e#
b1001101 e#
b1001110 e#
b1001111 e#
b1010000 e#
b1010001 e#
b1010010 e#
b1010011 e#
b1010100 e#
b1010101 e#
b1010110 e#
b1010111 e#
b1011000 e#
b1011001 e#
b1011010 e#
b1011011 e#
b1011100 e#
b1011101 e#
b1011110 e#
b1011111 e#
b1100000 e#
b1100001 e#
b1100010 e#
b1100011 e#
b1100100 e#
b1100101 e#
b1100110 e#
b1100111 e#
b1101000 e#
b1101001 e#
b1101010 e#
b1101011 e#
b1101100 e#
b1101101 e#
b1101110 e#
b1101111 e#
b1110000 e#
b1110001 e#
b1110010 e#
b1110011 e#
b1110100 e#
b1110101 e#
b1110110 e#
b1110111 e#
b1111000 e#
b1111001 e#
b1111010 e#
b1111011 e#
b1111100 e#
b1111101 e#
b1111110 e#
b1111111 e#
b10000000 e#
b10000001 e#
b10000010 e#
b10000011 e#
b10000100 e#
b10000101 e#
b10000110 e#
b10000111 e#
b10001000 e#
b10001001 e#
b10001010 e#
b10001011 e#
b10001100 e#
b10001101 e#
b10001110 e#
b10001111 e#
b10010000 e#
b10010001 e#
b10010010 e#
b10010011 e#
b10010100 e#
b10010101 e#
b10010110 e#
b10010111 e#
b10011000 e#
b10011001 e#
b10011010 e#
b10011011 e#
b10011100 e#
b10011101 e#
b10011110 e#
b10011111 e#
b10100000 e#
b10100001 e#
b10100010 e#
b10100011 e#
b10100100 e#
b10100101 e#
b10100110 e#
b10100111 e#
b10101000 e#
b10101001 e#
b10101010 e#
b10101011 e#
b10101100 e#
b10101101 e#
b10101110 e#
b10101111 e#
b10110000 e#
b10110001 e#
b10110010 e#
b10110011 e#
b10110100 e#
b10110101 e#
b10110110 e#
b10110111 e#
b10111000 e#
b10111001 e#
b10111010 e#
b10111011 e#
b10111100 e#
b10111101 e#
b10111110 e#
b10111111 e#
b11000000 e#
b11000001 e#
b11000010 e#
b11000011 e#
b11000100 e#
b11000101 e#
b11000110 e#
b11000111 e#
b11001000 e#
b11001001 e#
b11001010 e#
b11001011 e#
b11001100 e#
b11001101 e#
b11001110 e#
b11001111 e#
b11010000 e#
b11010001 e#
b11010010 e#
b11010011 e#
b11010100 e#
b11010101 e#
b11010110 e#
b11010111 e#
b11011000 e#
b11011001 e#
b11011010 e#
b11011011 e#
b11011100 e#
b11011101 e#
b11011110 e#
b11011111 e#
b11100000 e#
b11100001 e#
b11100010 e#
b11100011 e#
b11100100 e#
b11100101 e#
b11100110 e#
b11100111 e#
b11101000 e#
b11101001 e#
b11101010 e#
b11101011 e#
b11101100 e#
b11101101 e#
b11101110 e#
b11101111 e#
b11110000 e#
b11110001 e#
b11110010 e#
b11110011 e#
b11110100 e#
b11110101 e#
b11110110 e#
b11110111 e#
b11111000 e#
b11111001 e#
b11111010 e#
b11111011 e#
b11111100 e#
b11111101 e#
b11111110 e#
b11111111 e#
b100000000 e#
b0 h#
b1 h#
b10 h#
b11 h#
b100 h#
b101 h#
b110 h#
b111 h#
b1000 h#
b1001 h#
b1010 h#
b1011 h#
b1100 h#
b1101 h#
b1110 h#
b1111 h#
b10000 h#
b10001 h#
b10010 h#
b10011 h#
b10100 h#
b10101 h#
b10110 h#
b10111 h#
b11000 h#
b11001 h#
b11010 h#
b11011 h#
b11100 h#
b11101 h#
b11110 h#
b11111 h#
b100000 h#
b100001 h#
b100010 h#
b100011 h#
b100100 h#
b100101 h#
b100110 h#
b100111 h#
b101000 h#
b101001 h#
b101010 h#
b101011 h#
b101100 h#
b101101 h#
b101110 h#
b101111 h#
b110000 h#
b110001 h#
b110010 h#
b110011 h#
b110100 h#
b110101 h#
b110110 h#
b110111 h#
b111000 h#
b111001 h#
b111010 h#
b111011 h#
b111100 h#
b111101 h#
b111110 h#
b111111 h#
b1000000 h#
b1000001 h#
b1000010 h#
b1000011 h#
b1000100 h#
b1000101 h#
b1000110 h#
b1000111 h#
b1001000 h#
b1001001 h#
b1001010 h#
b1001011 h#
b1001100 h#
b1001101 h#
b1001110 h#
b1001111 h#
b1010000 h#
b1010001 h#
b1010010 h#
b1010011 h#
b1010100 h#
b1010101 h#
b1010110 h#
b1010111 h#
b1011000 h#
b1011001 h#
b1011010 h#
b1011011 h#
b1011100 h#
b1011101 h#
b1011110 h#
b1011111 h#
b1100000 h#
b1100001 h#
b1100010 h#
b1100011 h#
b1100100 h#
b1100101 h#
b1100110 h#
b1100111 h#
b1101000 h#
b1101001 h#
b1101010 h#
b1101011 h#
b1101100 h#
b1101101 h#
b1101110 h#
b1101111 h#
b1110000 h#
b1110001 h#
b1110010 h#
b1110011 h#
b1110100 h#
b1110101 h#
b1110110 h#
b1110111 h#
b1111000 h#
b1111001 h#
b1111010 h#
b1111011 h#
b1111100 h#
b1111101 h#
b1111110 h#
b1111111 h#
b10000000 h#
b10000001 h#
b10000010 h#
b10000011 h#
b10000100 h#
b10000101 h#
b10000110 h#
b10000111 h#
b10001000 h#
b10001001 h#
b10001010 h#
b10001011 h#
b10001100 h#
b10001101 h#
b10001110 h#
b10001111 h#
b10010000 h#
b10010001 h#
b10010010 h#
b10010011 h#
b10010100 h#
b10010101 h#
b10010110 h#
b10010111 h#
b10011000 h#
b10011001 h#
b10011010 h#
b10011011 h#
b10011100 h#
b10011101 h#
b10011110 h#
b10011111 h#
b10100000 h#
b10100001 h#
b10100010 h#
b10100011 h#
b10100100 h#
b10100101 h#
b10100110 h#
b10100111 h#
b10101000 h#
b10101001 h#
b10101010 h#
b10101011 h#
b10101100 h#
b10101101 h#
b10101110 h#
b10101111 h#
b10110000 h#
b10110001 h#
b10110010 h#
b10110011 h#
b10110100 h#
b10110101 h#
b10110110 h#
b10110111 h#
b10111000 h#
b10111001 h#
b10111010 h#
b10111011 h#
b10111100 h#
b10111101 h#
b10111110 h#
b10111111 h#
b11000000 h#
b11000001 h#
b11000010 h#
b11000011 h#
b11000100 h#
b11000101 h#
b11000110 h#
b11000111 h#
b11001000 h#
b11001001 h#
b11001010 h#
b11001011 h#
b11001100 h#
b11001101 h#
b11001110 h#
b11001111 h#
b11010000 h#
b11010001 h#
b11010010 h#
b11010011 h#
b11010100 h#
b11010101 h#
b11010110 h#
b11010111 h#
b11011000 h#
b11011001 h#
b11011010 h#
b11011011 h#
b11011100 h#
b11011101 h#
b11011110 h#
b11011111 h#
b11100000 h#
b11100001 h#
b11100010 h#
b11100011 h#
b11100100 h#
b11100101 h#
b11100110 h#
b11100111 h#
b11101000 h#
b11101001 h#
b11101010 h#
b11101011 h#
b11101100 h#
b11101101 h#
b11101110 h#
b11101111 h#
b11110000 h#
b11110001 h#
b11110010 h#
b11110011 h#
b11110100 h#
b11110101 h#
b11110110 h#
b11110111 h#
b11111000 h#
b11111001 h#
b11111010 h#
b11111011 h#
b11111100 h#
b11111101 h#
b11111110 h#
b11111111 h#
b100000000 h#
b0 k#
b1 k#
b10 k#
b11 k#
b100 k#
b101 k#
b110 k#
b111 k#
b1000 k#
b1001 k#
b1010 k#
b1011 k#
b1100 k#
b1101 k#
b1110 k#
b1111 k#
b10000 k#
b10001 k#
b10010 k#
b10011 k#
b10100 k#
b10101 k#
b10110 k#
b10111 k#
b11000 k#
b11001 k#
b11010 k#
b11011 k#
b11100 k#
b11101 k#
b11110 k#
b11111 k#
b100000 k#
b100001 k#
b100010 k#
b100011 k#
b100100 k#
b100101 k#
b100110 k#
b100111 k#
b101000 k#
b101001 k#
b101010 k#
b101011 k#
b101100 k#
b101101 k#
b101110 k#
b101111 k#
b110000 k#
b110001 k#
b110010 k#
b110011 k#
b110100 k#
b110101 k#
b110110 k#
b110111 k#
b111000 k#
b111001 k#
b111010 k#
b111011 k#
b111100 k#
b111101 k#
b111110 k#
b111111 k#
b1000000 k#
b1000001 k#
b1000010 k#
b1000011 k#
b1000100 k#
b1000101 k#
b1000110 k#
b1000111 k#
b1001000 k#
b1001001 k#
b1001010 k#
b1001011 k#
b1001100 k#
b1001101 k#
b1001110 k#
b1001111 k#
b1010000 k#
b1010001 k#
b1010010 k#
b1010011 k#
b1010100 k#
b1010101 k#
b1010110 k#
b1010111 k#
b1011000 k#
b1011001 k#
b1011010 k#
b1011011 k#
b1011100 k#
b1011101 k#
b1011110 k#
b1011111 k#
b1100000 k#
b1100001 k#
b1100010 k#
b1100011 k#
b1100100 k#
b1100101 k#
b1100110 k#
b1100111 k#
b1101000 k#
b1101001 k#
b1101010 k#
b1101011 k#
b1101100 k#
b1101101 k#
b1101110 k#
b1101111 k#
b1110000 k#
b1110001 k#
b1110010 k#
b1110011 k#
b1110100 k#
b1110101 k#
b1110110 k#
b1110111 k#
b1111000 k#
b1111001 k#
b1111010 k#
b1111011 k#
b1111100 k#
b1111101 k#
b1111110 k#
b1111111 k#
b10000000 k#
b10000001 k#
b10000010 k#
b10000011 k#
b10000100 k#
b10000101 k#
b10000110 k#
b10000111 k#
b10001000 k#
b10001001 k#
b10001010 k#
b10001011 k#
b10001100 k#
b10001101 k#
b10001110 k#
b10001111 k#
b10010000 k#
b10010001 k#
b10010010 k#
b10010011 k#
b10010100 k#
b10010101 k#
b10010110 k#
b10010111 k#
b10011000 k#
b10011001 k#
b10011010 k#
b10011011 k#
b10011100 k#
b10011101 k#
b10011110 k#
b10011111 k#
b10100000 k#
b10100001 k#
b10100010 k#
b10100011 k#
b10100100 k#
b10100101 k#
b10100110 k#
b10100111 k#
b10101000 k#
b10101001 k#
b10101010 k#
b10101011 k#
b10101100 k#
b10101101 k#
b10101110 k#
b10101111 k#
b10110000 k#
b10110001 k#
b10110010 k#
b10110011 k#
b10110100 k#
b10110101 k#
b10110110 k#
b10110111 k#
b10111000 k#
b10111001 k#
b10111010 k#
b10111011 k#
b10111100 k#
b10111101 k#
b10111110 k#
b10111111 k#
b11000000 k#
b11000001 k#
b11000010 k#
b11000011 k#
b11000100 k#
b11000101 k#
b11000110 k#
b11000111 k#
b11001000 k#
b11001001 k#
b11001010 k#
b11001011 k#
b11001100 k#
b11001101 k#
b11001110 k#
b11001111 k#
b11010000 k#
b11010001 k#
b11010010 k#
b11010011 k#
b11010100 k#
b11010101 k#
b11010110 k#
b11010111 k#
b11011000 k#
b11011001 k#
b11011010 k#
b11011011 k#
b11011100 k#
b11011101 k#
b11011110 k#
b11011111 k#
b11100000 k#
b11100001 k#
b11100010 k#
b11100011 k#
b11100100 k#
b11100101 k#
b11100110 k#
b11100111 k#
b11101000 k#
b11101001 k#
b11101010 k#
b11101011 k#
b11101100 k#
b11101101 k#
b11101110 k#
b11101111 k#
b11110000 k#
b11110001 k#
b11110010 k#
b11110011 k#
b11110100 k#
b11110101 k#
b11110110 k#
b11110111 k#
b11111000 k#
b11111001 k#
b11111010 k#
b11111011 k#
b11111100 k#
b11111101 k#
b11111110 k#
b11111111 k#
b100000000 k#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 q#
b1 q#
b10 q#
b11 q#
b100 q#
b101 q#
b110 q#
b111 q#
b1000 q#
b1001 q#
b1010 q#
b1011 q#
b1100 q#
b1101 q#
b1110 q#
b1111 q#
b10000 q#
b10001 q#
b10010 q#
b10011 q#
b10100 q#
b10101 q#
b10110 q#
b10111 q#
b11000 q#
b11001 q#
b11010 q#
b11011 q#
b11100 q#
b11101 q#
b11110 q#
b11111 q#
b100000 q#
b100001 q#
b100010 q#
b100011 q#
b100100 q#
b100101 q#
b100110 q#
b100111 q#
b101000 q#
b101001 q#
b101010 q#
b101011 q#
b101100 q#
b101101 q#
b101110 q#
b101111 q#
b110000 q#
b110001 q#
b110010 q#
b110011 q#
b110100 q#
b110101 q#
b110110 q#
b110111 q#
b111000 q#
b111001 q#
b111010 q#
b111011 q#
b111100 q#
b111101 q#
b111110 q#
b111111 q#
b1000000 q#
b1000001 q#
b1000010 q#
b1000011 q#
b1000100 q#
b1000101 q#
b1000110 q#
b1000111 q#
b1001000 q#
b1001001 q#
b1001010 q#
b1001011 q#
b1001100 q#
b1001101 q#
b1001110 q#
b1001111 q#
b1010000 q#
b1010001 q#
b1010010 q#
b1010011 q#
b1010100 q#
b1010101 q#
b1010110 q#
b1010111 q#
b1011000 q#
b1011001 q#
b1011010 q#
b1011011 q#
b1011100 q#
b1011101 q#
b1011110 q#
b1011111 q#
b1100000 q#
b1100001 q#
b1100010 q#
b1100011 q#
b1100100 q#
b1100101 q#
b1100110 q#
b1100111 q#
b1101000 q#
b1101001 q#
b1101010 q#
b1101011 q#
b1101100 q#
b1101101 q#
b1101110 q#
b1101111 q#
b1110000 q#
b1110001 q#
b1110010 q#
b1110011 q#
b1110100 q#
b1110101 q#
b1110110 q#
b1110111 q#
b1111000 q#
b1111001 q#
b1111010 q#
b1111011 q#
b1111100 q#
b1111101 q#
b1111110 q#
b1111111 q#
b10000000 q#
b10000001 q#
b10000010 q#
b10000011 q#
b10000100 q#
b10000101 q#
b10000110 q#
b10000111 q#
b10001000 q#
b10001001 q#
b10001010 q#
b10001011 q#
b10001100 q#
b10001101 q#
b10001110 q#
b10001111 q#
b10010000 q#
b10010001 q#
b10010010 q#
b10010011 q#
b10010100 q#
b10010101 q#
b10010110 q#
b10010111 q#
b10011000 q#
b10011001 q#
b10011010 q#
b10011011 q#
b10011100 q#
b10011101 q#
b10011110 q#
b10011111 q#
b10100000 q#
b10100001 q#
b10100010 q#
b10100011 q#
b10100100 q#
b10100101 q#
b10100110 q#
b10100111 q#
b10101000 q#
b10101001 q#
b10101010 q#
b10101011 q#
b10101100 q#
b10101101 q#
b10101110 q#
b10101111 q#
b10110000 q#
b10110001 q#
b10110010 q#
b10110011 q#
b10110100 q#
b10110101 q#
b10110110 q#
b10110111 q#
b10111000 q#
b10111001 q#
b10111010 q#
b10111011 q#
b10111100 q#
b10111101 q#
b10111110 q#
b10111111 q#
b11000000 q#
b11000001 q#
b11000010 q#
b11000011 q#
b11000100 q#
b11000101 q#
b11000110 q#
b11000111 q#
b11001000 q#
b11001001 q#
b11001010 q#
b11001011 q#
b11001100 q#
b11001101 q#
b11001110 q#
b11001111 q#
b11010000 q#
b11010001 q#
b11010010 q#
b11010011 q#
b11010100 q#
b11010101 q#
b11010110 q#
b11010111 q#
b11011000 q#
b11011001 q#
b11011010 q#
b11011011 q#
b11011100 q#
b11011101 q#
b11011110 q#
b11011111 q#
b11100000 q#
b11100001 q#
b11100010 q#
b11100011 q#
b11100100 q#
b11100101 q#
b11100110 q#
b11100111 q#
b11101000 q#
b11101001 q#
b11101010 q#
b11101011 q#
b11101100 q#
b11101101 q#
b11101110 q#
b11101111 q#
b11110000 q#
b11110001 q#
b11110010 q#
b11110011 q#
b11110100 q#
b11110101 q#
b11110110 q#
b11110111 q#
b11111000 q#
b11111001 q#
b11111010 q#
b11111011 q#
b11111100 q#
b11111101 q#
b11111110 q#
b11111111 q#
b100000000 q#
b0 s#
b1 s#
b10 s#
b11 s#
b100 s#
b101 s#
b110 s#
b111 s#
b1000 s#
b1001 s#
b1010 s#
b1011 s#
b1100 s#
b1101 s#
b1110 s#
b1111 s#
b10000 s#
b10001 s#
b10010 s#
b10011 s#
b10100 s#
b10101 s#
b10110 s#
b10111 s#
b11000 s#
b11001 s#
b11010 s#
b11011 s#
b11100 s#
b11101 s#
b11110 s#
b11111 s#
b100000 s#
b100001 s#
b100010 s#
b100011 s#
b100100 s#
b100101 s#
b100110 s#
b100111 s#
b101000 s#
b101001 s#
b101010 s#
b101011 s#
b101100 s#
b101101 s#
b101110 s#
b101111 s#
b110000 s#
b110001 s#
b110010 s#
b110011 s#
b110100 s#
b110101 s#
b110110 s#
b110111 s#
b111000 s#
b111001 s#
b111010 s#
b111011 s#
b111100 s#
b111101 s#
b111110 s#
b111111 s#
b1000000 s#
b1000001 s#
b1000010 s#
b1000011 s#
b1000100 s#
b1000101 s#
b1000110 s#
b1000111 s#
b1001000 s#
b1001001 s#
b1001010 s#
b1001011 s#
b1001100 s#
b1001101 s#
b1001110 s#
b1001111 s#
b1010000 s#
b1010001 s#
b1010010 s#
b1010011 s#
b1010100 s#
b1010101 s#
b1010110 s#
b1010111 s#
b1011000 s#
b1011001 s#
b1011010 s#
b1011011 s#
b1011100 s#
b1011101 s#
b1011110 s#
b1011111 s#
b1100000 s#
b1100001 s#
b1100010 s#
b1100011 s#
b1100100 s#
b1100101 s#
b1100110 s#
b1100111 s#
b1101000 s#
b1101001 s#
b1101010 s#
b1101011 s#
b1101100 s#
b1101101 s#
b1101110 s#
b1101111 s#
b1110000 s#
b1110001 s#
b1110010 s#
b1110011 s#
b1110100 s#
b1110101 s#
b1110110 s#
b1110111 s#
b1111000 s#
b1111001 s#
b1111010 s#
b1111011 s#
b1111100 s#
b1111101 s#
b1111110 s#
b1111111 s#
b10000000 s#
b10000001 s#
b10000010 s#
b10000011 s#
b10000100 s#
b10000101 s#
b10000110 s#
b10000111 s#
b10001000 s#
b10001001 s#
b10001010 s#
b10001011 s#
b10001100 s#
b10001101 s#
b10001110 s#
b10001111 s#
b10010000 s#
b10010001 s#
b10010010 s#
b10010011 s#
b10010100 s#
b10010101 s#
b10010110 s#
b10010111 s#
b10011000 s#
b10011001 s#
b10011010 s#
b10011011 s#
b10011100 s#
b10011101 s#
b10011110 s#
b10011111 s#
b10100000 s#
b10100001 s#
b10100010 s#
b10100011 s#
b10100100 s#
b10100101 s#
b10100110 s#
b10100111 s#
b10101000 s#
b10101001 s#
b10101010 s#
b10101011 s#
b10101100 s#
b10101101 s#
b10101110 s#
b10101111 s#
b10110000 s#
b10110001 s#
b10110010 s#
b10110011 s#
b10110100 s#
b10110101 s#
b10110110 s#
b10110111 s#
b10111000 s#
b10111001 s#
b10111010 s#
b10111011 s#
b10111100 s#
b10111101 s#
b10111110 s#
b10111111 s#
b11000000 s#
b11000001 s#
b11000010 s#
b11000011 s#
b11000100 s#
b11000101 s#
b11000110 s#
b11000111 s#
b11001000 s#
b11001001 s#
b11001010 s#
b11001011 s#
b11001100 s#
b11001101 s#
b11001110 s#
b11001111 s#
b11010000 s#
b11010001 s#
b11010010 s#
b11010011 s#
b11010100 s#
b11010101 s#
b11010110 s#
b11010111 s#
b11011000 s#
b11011001 s#
b11011010 s#
b11011011 s#
b11011100 s#
b11011101 s#
b11011110 s#
b11011111 s#
b11100000 s#
b11100001 s#
b11100010 s#
b11100011 s#
b11100100 s#
b11100101 s#
b11100110 s#
b11100111 s#
b11101000 s#
b11101001 s#
b11101010 s#
b11101011 s#
b11101100 s#
b11101101 s#
b11101110 s#
b11101111 s#
b11110000 s#
b11110001 s#
b11110010 s#
b11110011 s#
b11110100 s#
b11110101 s#
b11110110 s#
b11110111 s#
b11111000 s#
b11111001 s#
b11111010 s#
b11111011 s#
b11111100 s#
b11111101 s#
b11111110 s#
b11111111 s#
b100000000 s#
b0 %%
b1 %%
b10 %%
b11 %%
b100 %%
b101 %%
b110 %%
b111 %%
b1000 %%
b1001 %%
b1010 %%
b1011 %%
b1100 %%
b1101 %%
b1110 %%
b1111 %%
b10000 %%
b10001 %%
b10010 %%
b10011 %%
b10100 %%
b10101 %%
b10110 %%
b10111 %%
b11000 %%
b11001 %%
b11010 %%
b11011 %%
b11100 %%
b11101 %%
b11110 %%
b11111 %%
b100000 %%
b100001 %%
b100010 %%
b100011 %%
b100100 %%
b100101 %%
b100110 %%
b100111 %%
b101000 %%
b101001 %%
b101010 %%
b101011 %%
b101100 %%
b101101 %%
b101110 %%
b101111 %%
b110000 %%
b110001 %%
b110010 %%
b110011 %%
b110100 %%
b110101 %%
b110110 %%
b110111 %%
b111000 %%
b111001 %%
b111010 %%
b111011 %%
b111100 %%
b111101 %%
b111110 %%
b111111 %%
b1000000 %%
b1000001 %%
b1000010 %%
b1000011 %%
b1000100 %%
b1000101 %%
b1000110 %%
b1000111 %%
b1001000 %%
b1001001 %%
b1001010 %%
b1001011 %%
b1001100 %%
b1001101 %%
b1001110 %%
b1001111 %%
b1010000 %%
b1010001 %%
b1010010 %%
b1010011 %%
b1010100 %%
b1010101 %%
b1010110 %%
b1010111 %%
b1011000 %%
b1011001 %%
b1011010 %%
b1011011 %%
b1011100 %%
b1011101 %%
b1011110 %%
b1011111 %%
b1100000 %%
b1100001 %%
b1100010 %%
b1100011 %%
b1100100 %%
b1100101 %%
b1100110 %%
b1100111 %%
b1101000 %%
b1101001 %%
b1101010 %%
b1101011 %%
b1101100 %%
b1101101 %%
b1101110 %%
b1101111 %%
b1110000 %%
b1110001 %%
b1110010 %%
b1110011 %%
b1110100 %%
b1110101 %%
b1110110 %%
b1110111 %%
b1111000 %%
b1111001 %%
b1111010 %%
b1111011 %%
b1111100 %%
b1111101 %%
b1111110 %%
b1111111 %%
b10000000 %%
b10000001 %%
b10000010 %%
b10000011 %%
b10000100 %%
b10000101 %%
b10000110 %%
b10000111 %%
b10001000 %%
b10001001 %%
b10001010 %%
b10001011 %%
b10001100 %%
b10001101 %%
b10001110 %%
b10001111 %%
b10010000 %%
b10010001 %%
b10010010 %%
b10010011 %%
b10010100 %%
b10010101 %%
b10010110 %%
b10010111 %%
b10011000 %%
b10011001 %%
b10011010 %%
b10011011 %%
b10011100 %%
b10011101 %%
b10011110 %%
b10011111 %%
b10100000 %%
b10100001 %%
b10100010 %%
b10100011 %%
b10100100 %%
b10100101 %%
b10100110 %%
b10100111 %%
b10101000 %%
b10101001 %%
b10101010 %%
b10101011 %%
b10101100 %%
b10101101 %%
b10101110 %%
b10101111 %%
b10110000 %%
b10110001 %%
b10110010 %%
b10110011 %%
b10110100 %%
b10110101 %%
b10110110 %%
b10110111 %%
b10111000 %%
b10111001 %%
b10111010 %%
b10111011 %%
b10111100 %%
b10111101 %%
b10111110 %%
b10111111 %%
b11000000 %%
b11000001 %%
b11000010 %%
b11000011 %%
b11000100 %%
b11000101 %%
b11000110 %%
b11000111 %%
b11001000 %%
b11001001 %%
b11001010 %%
b11001011 %%
b11001100 %%
b11001101 %%
b11001110 %%
b11001111 %%
b11010000 %%
b11010001 %%
b11010010 %%
b11010011 %%
b11010100 %%
b11010101 %%
b11010110 %%
b11010111 %%
b11011000 %%
b11011001 %%
b11011010 %%
b11011011 %%
b11011100 %%
b11011101 %%
b11011110 %%
b11011111 %%
b11100000 %%
b11100001 %%
b11100010 %%
b11100011 %%
b11100100 %%
b11100101 %%
b11100110 %%
b11100111 %%
b11101000 %%
b11101001 %%
b11101010 %%
b11101011 %%
b11101100 %%
b11101101 %%
b11101110 %%
b11101111 %%
b11110000 %%
b11110001 %%
b11110010 %%
b11110011 %%
b11110100 %%
b11110101 %%
b11110110 %%
b11110111 %%
b11111000 %%
b11111001 %%
b11111010 %%
b11111011 %%
b11111100 %%
b11111101 %%
b11111110 %%
b11111111 %%
b100000000 %%
b0 (%
b1 (%
b10 (%
b11 (%
b100 (%
b101 (%
b110 (%
b111 (%
b1000 (%
b1001 (%
b1010 (%
b1011 (%
b1100 (%
b1101 (%
b1110 (%
b1111 (%
b10000 (%
b10001 (%
b10010 (%
b10011 (%
b10100 (%
b10101 (%
b10110 (%
b10111 (%
b11000 (%
b11001 (%
b11010 (%
b11011 (%
b11100 (%
b11101 (%
b11110 (%
b11111 (%
b100000 (%
b100001 (%
b100010 (%
b100011 (%
b100100 (%
b100101 (%
b100110 (%
b100111 (%
b101000 (%
b101001 (%
b101010 (%
b101011 (%
b101100 (%
b101101 (%
b101110 (%
b101111 (%
b110000 (%
b110001 (%
b110010 (%
b110011 (%
b110100 (%
b110101 (%
b110110 (%
b110111 (%
b111000 (%
b111001 (%
b111010 (%
b111011 (%
b111100 (%
b111101 (%
b111110 (%
b111111 (%
b1000000 (%
b1000001 (%
b1000010 (%
b1000011 (%
b1000100 (%
b1000101 (%
b1000110 (%
b1000111 (%
b1001000 (%
b1001001 (%
b1001010 (%
b1001011 (%
b1001100 (%
b1001101 (%
b1001110 (%
b1001111 (%
b1010000 (%
b1010001 (%
b1010010 (%
b1010011 (%
b1010100 (%
b1010101 (%
b1010110 (%
b1010111 (%
b1011000 (%
b1011001 (%
b1011010 (%
b1011011 (%
b1011100 (%
b1011101 (%
b1011110 (%
b1011111 (%
b1100000 (%
b1100001 (%
b1100010 (%
b1100011 (%
b1100100 (%
b1100101 (%
b1100110 (%
b1100111 (%
b1101000 (%
b1101001 (%
b1101010 (%
b1101011 (%
b1101100 (%
b1101101 (%
b1101110 (%
b1101111 (%
b1110000 (%
b1110001 (%
b1110010 (%
b1110011 (%
b1110100 (%
b1110101 (%
b1110110 (%
b1110111 (%
b1111000 (%
b1111001 (%
b1111010 (%
b1111011 (%
b1111100 (%
b1111101 (%
b1111110 (%
b1111111 (%
b10000000 (%
b10000001 (%
b10000010 (%
b10000011 (%
b10000100 (%
b10000101 (%
b10000110 (%
b10000111 (%
b10001000 (%
b10001001 (%
b10001010 (%
b10001011 (%
b10001100 (%
b10001101 (%
b10001110 (%
b10001111 (%
b10010000 (%
b10010001 (%
b10010010 (%
b10010011 (%
b10010100 (%
b10010101 (%
b10010110 (%
b10010111 (%
b10011000 (%
b10011001 (%
b10011010 (%
b10011011 (%
b10011100 (%
b10011101 (%
b10011110 (%
b10011111 (%
b10100000 (%
b10100001 (%
b10100010 (%
b10100011 (%
b10100100 (%
b10100101 (%
b10100110 (%
b10100111 (%
b10101000 (%
b10101001 (%
b10101010 (%
b10101011 (%
b10101100 (%
b10101101 (%
b10101110 (%
b10101111 (%
b10110000 (%
b10110001 (%
b10110010 (%
b10110011 (%
b10110100 (%
b10110101 (%
b10110110 (%
b10110111 (%
b10111000 (%
b10111001 (%
b10111010 (%
b10111011 (%
b10111100 (%
b10111101 (%
b10111110 (%
b10111111 (%
b11000000 (%
b11000001 (%
b11000010 (%
b11000011 (%
b11000100 (%
b11000101 (%
b11000110 (%
b11000111 (%
b11001000 (%
b11001001 (%
b11001010 (%
b11001011 (%
b11001100 (%
b11001101 (%
b11001110 (%
b11001111 (%
b11010000 (%
b11010001 (%
b11010010 (%
b11010011 (%
b11010100 (%
b11010101 (%
b11010110 (%
b11010111 (%
b11011000 (%
b11011001 (%
b11011010 (%
b11011011 (%
b11011100 (%
b11011101 (%
b11011110 (%
b11011111 (%
b11100000 (%
b11100001 (%
b11100010 (%
b11100011 (%
b11100100 (%
b11100101 (%
b11100110 (%
b11100111 (%
b11101000 (%
b11101001 (%
b11101010 (%
b11101011 (%
b11101100 (%
b11101101 (%
b11101110 (%
b11101111 (%
b11110000 (%
b11110001 (%
b11110010 (%
b11110011 (%
b11110100 (%
b11110101 (%
b11110110 (%
b11110111 (%
b11111000 (%
b11111001 (%
b11111010 (%
b11111011 (%
b11111100 (%
b11111101 (%
b11111110 (%
b11111111 (%
b100000000 (%
b0 +%
b1 +%
b10 +%
b11 +%
b100 +%
b101 +%
b110 +%
b111 +%
b1000 +%
b1001 +%
b1010 +%
b1011 +%
b1100 +%
b1101 +%
b1110 +%
b1111 +%
b10000 +%
b10001 +%
b10010 +%
b10011 +%
b10100 +%
b10101 +%
b10110 +%
b10111 +%
b11000 +%
b11001 +%
b11010 +%
b11011 +%
b11100 +%
b11101 +%
b11110 +%
b11111 +%
b100000 +%
b100001 +%
b100010 +%
b100011 +%
b100100 +%
b100101 +%
b100110 +%
b100111 +%
b101000 +%
b101001 +%
b101010 +%
b101011 +%
b101100 +%
b101101 +%
b101110 +%
b101111 +%
b110000 +%
b110001 +%
b110010 +%
b110011 +%
b110100 +%
b110101 +%
b110110 +%
b110111 +%
b111000 +%
b111001 +%
b111010 +%
b111011 +%
b111100 +%
b111101 +%
b111110 +%
b111111 +%
b1000000 +%
b1000001 +%
b1000010 +%
b1000011 +%
b1000100 +%
b1000101 +%
b1000110 +%
b1000111 +%
b1001000 +%
b1001001 +%
b1001010 +%
b1001011 +%
b1001100 +%
b1001101 +%
b1001110 +%
b1001111 +%
b1010000 +%
b1010001 +%
b1010010 +%
b1010011 +%
b1010100 +%
b1010101 +%
b1010110 +%
b1010111 +%
b1011000 +%
b1011001 +%
b1011010 +%
b1011011 +%
b1011100 +%
b1011101 +%
b1011110 +%
b1011111 +%
b1100000 +%
b1100001 +%
b1100010 +%
b1100011 +%
b1100100 +%
b1100101 +%
b1100110 +%
b1100111 +%
b1101000 +%
b1101001 +%
b1101010 +%
b1101011 +%
b1101100 +%
b1101101 +%
b1101110 +%
b1101111 +%
b1110000 +%
b1110001 +%
b1110010 +%
b1110011 +%
b1110100 +%
b1110101 +%
b1110110 +%
b1110111 +%
b1111000 +%
b1111001 +%
b1111010 +%
b1111011 +%
b1111100 +%
b1111101 +%
b1111110 +%
b1111111 +%
b10000000 +%
b10000001 +%
b10000010 +%
b10000011 +%
b10000100 +%
b10000101 +%
b10000110 +%
b10000111 +%
b10001000 +%
b10001001 +%
b10001010 +%
b10001011 +%
b10001100 +%
b10001101 +%
b10001110 +%
b10001111 +%
b10010000 +%
b10010001 +%
b10010010 +%
b10010011 +%
b10010100 +%
b10010101 +%
b10010110 +%
b10010111 +%
b10011000 +%
b10011001 +%
b10011010 +%
b10011011 +%
b10011100 +%
b10011101 +%
b10011110 +%
b10011111 +%
b10100000 +%
b10100001 +%
b10100010 +%
b10100011 +%
b10100100 +%
b10100101 +%
b10100110 +%
b10100111 +%
b10101000 +%
b10101001 +%
b10101010 +%
b10101011 +%
b10101100 +%
b10101101 +%
b10101110 +%
b10101111 +%
b10110000 +%
b10110001 +%
b10110010 +%
b10110011 +%
b10110100 +%
b10110101 +%
b10110110 +%
b10110111 +%
b10111000 +%
b10111001 +%
b10111010 +%
b10111011 +%
b10111100 +%
b10111101 +%
b10111110 +%
b10111111 +%
b11000000 +%
b11000001 +%
b11000010 +%
b11000011 +%
b11000100 +%
b11000101 +%
b11000110 +%
b11000111 +%
b11001000 +%
b11001001 +%
b11001010 +%
b11001011 +%
b11001100 +%
b11001101 +%
b11001110 +%
b11001111 +%
b11010000 +%
b11010001 +%
b11010010 +%
b11010011 +%
b11010100 +%
b11010101 +%
b11010110 +%
b11010111 +%
b11011000 +%
b11011001 +%
b11011010 +%
b11011011 +%
b11011100 +%
b11011101 +%
b11011110 +%
b11011111 +%
b11100000 +%
b11100001 +%
b11100010 +%
b11100011 +%
b11100100 +%
b11100101 +%
b11100110 +%
b11100111 +%
b11101000 +%
b11101001 +%
b11101010 +%
b11101011 +%
b11101100 +%
b11101101 +%
b11101110 +%
b11101111 +%
b11110000 +%
b11110001 +%
b11110010 +%
b11110011 +%
b11110100 +%
b11110101 +%
b11110110 +%
b11110111 +%
b11111000 +%
b11111001 +%
b11111010 +%
b11111011 +%
b11111100 +%
b11111101 +%
b11111110 +%
b11111111 +%
b100000000 +%
b0 .%
b1 .%
b10 .%
b11 .%
b100 .%
b101 .%
b110 .%
b111 .%
b1000 .%
b1001 .%
b1010 .%
b1011 .%
b1100 .%
b1101 .%
b1110 .%
b1111 .%
b10000 .%
b10001 .%
b10010 .%
b10011 .%
b10100 .%
b10101 .%
b10110 .%
b10111 .%
b11000 .%
b11001 .%
b11010 .%
b11011 .%
b11100 .%
b11101 .%
b11110 .%
b11111 .%
b100000 .%
b100001 .%
b100010 .%
b100011 .%
b100100 .%
b100101 .%
b100110 .%
b100111 .%
b101000 .%
b101001 .%
b101010 .%
b101011 .%
b101100 .%
b101101 .%
b101110 .%
b101111 .%
b110000 .%
b110001 .%
b110010 .%
b110011 .%
b110100 .%
b110101 .%
b110110 .%
b110111 .%
b111000 .%
b111001 .%
b111010 .%
b111011 .%
b111100 .%
b111101 .%
b111110 .%
b111111 .%
b1000000 .%
b1000001 .%
b1000010 .%
b1000011 .%
b1000100 .%
b1000101 .%
b1000110 .%
b1000111 .%
b1001000 .%
b1001001 .%
b1001010 .%
b1001011 .%
b1001100 .%
b1001101 .%
b1001110 .%
b1001111 .%
b1010000 .%
b1010001 .%
b1010010 .%
b1010011 .%
b1010100 .%
b1010101 .%
b1010110 .%
b1010111 .%
b1011000 .%
b1011001 .%
b1011010 .%
b1011011 .%
b1011100 .%
b1011101 .%
b1011110 .%
b1011111 .%
b1100000 .%
b1100001 .%
b1100010 .%
b1100011 .%
b1100100 .%
b1100101 .%
b1100110 .%
b1100111 .%
b1101000 .%
b1101001 .%
b1101010 .%
b1101011 .%
b1101100 .%
b1101101 .%
b1101110 .%
b1101111 .%
b1110000 .%
b1110001 .%
b1110010 .%
b1110011 .%
b1110100 .%
b1110101 .%
b1110110 .%
b1110111 .%
b1111000 .%
b1111001 .%
b1111010 .%
b1111011 .%
b1111100 .%
b1111101 .%
b1111110 .%
b1111111 .%
b10000000 .%
b10000001 .%
b10000010 .%
b10000011 .%
b10000100 .%
b10000101 .%
b10000110 .%
b10000111 .%
b10001000 .%
b10001001 .%
b10001010 .%
b10001011 .%
b10001100 .%
b10001101 .%
b10001110 .%
b10001111 .%
b10010000 .%
b10010001 .%
b10010010 .%
b10010011 .%
b10010100 .%
b10010101 .%
b10010110 .%
b10010111 .%
b10011000 .%
b10011001 .%
b10011010 .%
b10011011 .%
b10011100 .%
b10011101 .%
b10011110 .%
b10011111 .%
b10100000 .%
b10100001 .%
b10100010 .%
b10100011 .%
b10100100 .%
b10100101 .%
b10100110 .%
b10100111 .%
b10101000 .%
b10101001 .%
b10101010 .%
b10101011 .%
b10101100 .%
b10101101 .%
b10101110 .%
b10101111 .%
b10110000 .%
b10110001 .%
b10110010 .%
b10110011 .%
b10110100 .%
b10110101 .%
b10110110 .%
b10110111 .%
b10111000 .%
b10111001 .%
b10111010 .%
b10111011 .%
b10111100 .%
b10111101 .%
b10111110 .%
b10111111 .%
b11000000 .%
b11000001 .%
b11000010 .%
b11000011 .%
b11000100 .%
b11000101 .%
b11000110 .%
b11000111 .%
b11001000 .%
b11001001 .%
b11001010 .%
b11001011 .%
b11001100 .%
b11001101 .%
b11001110 .%
b11001111 .%
b11010000 .%
b11010001 .%
b11010010 .%
b11010011 .%
b11010100 .%
b11010101 .%
b11010110 .%
b11010111 .%
b11011000 .%
b11011001 .%
b11011010 .%
b11011011 .%
b11011100 .%
b11011101 .%
b11011110 .%
b11011111 .%
b11100000 .%
b11100001 .%
b11100010 .%
b11100011 .%
b11100100 .%
b11100101 .%
b11100110 .%
b11100111 .%
b11101000 .%
b11101001 .%
b11101010 .%
b11101011 .%
b11101100 .%
b11101101 .%
b11101110 .%
b11101111 .%
b11110000 .%
b11110001 .%
b11110010 .%
b11110011 .%
b11110100 .%
b11110101 .%
b11110110 .%
b11110111 .%
b11111000 .%
b11111001 .%
b11111010 .%
b11111011 .%
b11111100 .%
b11111101 .%
b11111110 .%
b11111111 .%
b100000000 .%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
b0 4%
b1 4%
b10 4%
b11 4%
b100 4%
b101 4%
b110 4%
b111 4%
b1000 4%
b1001 4%
b1010 4%
b1011 4%
b1100 4%
b1101 4%
b1110 4%
b1111 4%
b10000 4%
b10001 4%
b10010 4%
b10011 4%
b10100 4%
b10101 4%
b10110 4%
b10111 4%
b11000 4%
b11001 4%
b11010 4%
b11011 4%
b11100 4%
b11101 4%
b11110 4%
b11111 4%
b100000 4%
b100001 4%
b100010 4%
b100011 4%
b100100 4%
b100101 4%
b100110 4%
b100111 4%
b101000 4%
b101001 4%
b101010 4%
b101011 4%
b101100 4%
b101101 4%
b101110 4%
b101111 4%
b110000 4%
b110001 4%
b110010 4%
b110011 4%
b110100 4%
b110101 4%
b110110 4%
b110111 4%
b111000 4%
b111001 4%
b111010 4%
b111011 4%
b111100 4%
b111101 4%
b111110 4%
b111111 4%
b1000000 4%
b1000001 4%
b1000010 4%
b1000011 4%
b1000100 4%
b1000101 4%
b1000110 4%
b1000111 4%
b1001000 4%
b1001001 4%
b1001010 4%
b1001011 4%
b1001100 4%
b1001101 4%
b1001110 4%
b1001111 4%
b1010000 4%
b1010001 4%
b1010010 4%
b1010011 4%
b1010100 4%
b1010101 4%
b1010110 4%
b1010111 4%
b1011000 4%
b1011001 4%
b1011010 4%
b1011011 4%
b1011100 4%
b1011101 4%
b1011110 4%
b1011111 4%
b1100000 4%
b1100001 4%
b1100010 4%
b1100011 4%
b1100100 4%
b1100101 4%
b1100110 4%
b1100111 4%
b1101000 4%
b1101001 4%
b1101010 4%
b1101011 4%
b1101100 4%
b1101101 4%
b1101110 4%
b1101111 4%
b1110000 4%
b1110001 4%
b1110010 4%
b1110011 4%
b1110100 4%
b1110101 4%
b1110110 4%
b1110111 4%
b1111000 4%
b1111001 4%
b1111010 4%
b1111011 4%
b1111100 4%
b1111101 4%
b1111110 4%
b1111111 4%
b10000000 4%
b10000001 4%
b10000010 4%
b10000011 4%
b10000100 4%
b10000101 4%
b10000110 4%
b10000111 4%
b10001000 4%
b10001001 4%
b10001010 4%
b10001011 4%
b10001100 4%
b10001101 4%
b10001110 4%
b10001111 4%
b10010000 4%
b10010001 4%
b10010010 4%
b10010011 4%
b10010100 4%
b10010101 4%
b10010110 4%
b10010111 4%
b10011000 4%
b10011001 4%
b10011010 4%
b10011011 4%
b10011100 4%
b10011101 4%
b10011110 4%
b10011111 4%
b10100000 4%
b10100001 4%
b10100010 4%
b10100011 4%
b10100100 4%
b10100101 4%
b10100110 4%
b10100111 4%
b10101000 4%
b10101001 4%
b10101010 4%
b10101011 4%
b10101100 4%
b10101101 4%
b10101110 4%
b10101111 4%
b10110000 4%
b10110001 4%
b10110010 4%
b10110011 4%
b10110100 4%
b10110101 4%
b10110110 4%
b10110111 4%
b10111000 4%
b10111001 4%
b10111010 4%
b10111011 4%
b10111100 4%
b10111101 4%
b10111110 4%
b10111111 4%
b11000000 4%
b11000001 4%
b11000010 4%
b11000011 4%
b11000100 4%
b11000101 4%
b11000110 4%
b11000111 4%
b11001000 4%
b11001001 4%
b11001010 4%
b11001011 4%
b11001100 4%
b11001101 4%
b11001110 4%
b11001111 4%
b11010000 4%
b11010001 4%
b11010010 4%
b11010011 4%
b11010100 4%
b11010101 4%
b11010110 4%
b11010111 4%
b11011000 4%
b11011001 4%
b11011010 4%
b11011011 4%
b11011100 4%
b11011101 4%
b11011110 4%
b11011111 4%
b11100000 4%
b11100001 4%
b11100010 4%
b11100011 4%
b11100100 4%
b11100101 4%
b11100110 4%
b11100111 4%
b11101000 4%
b11101001 4%
b11101010 4%
b11101011 4%
b11101100 4%
b11101101 4%
b11101110 4%
b11101111 4%
b11110000 4%
b11110001 4%
b11110010 4%
b11110011 4%
b11110100 4%
b11110101 4%
b11110110 4%
b11110111 4%
b11111000 4%
b11111001 4%
b11111010 4%
b11111011 4%
b11111100 4%
b11111101 4%
b11111110 4%
b11111111 4%
b100000000 4%
b0 6%
b1 6%
b10 6%
b11 6%
b100 6%
b101 6%
b110 6%
b111 6%
b1000 6%
b1001 6%
b1010 6%
b1011 6%
b1100 6%
b1101 6%
b1110 6%
b1111 6%
b10000 6%
b10001 6%
b10010 6%
b10011 6%
b10100 6%
b10101 6%
b10110 6%
b10111 6%
b11000 6%
b11001 6%
b11010 6%
b11011 6%
b11100 6%
b11101 6%
b11110 6%
b11111 6%
b100000 6%
b100001 6%
b100010 6%
b100011 6%
b100100 6%
b100101 6%
b100110 6%
b100111 6%
b101000 6%
b101001 6%
b101010 6%
b101011 6%
b101100 6%
b101101 6%
b101110 6%
b101111 6%
b110000 6%
b110001 6%
b110010 6%
b110011 6%
b110100 6%
b110101 6%
b110110 6%
b110111 6%
b111000 6%
b111001 6%
b111010 6%
b111011 6%
b111100 6%
b111101 6%
b111110 6%
b111111 6%
b1000000 6%
b1000001 6%
b1000010 6%
b1000011 6%
b1000100 6%
b1000101 6%
b1000110 6%
b1000111 6%
b1001000 6%
b1001001 6%
b1001010 6%
b1001011 6%
b1001100 6%
b1001101 6%
b1001110 6%
b1001111 6%
b1010000 6%
b1010001 6%
b1010010 6%
b1010011 6%
b1010100 6%
b1010101 6%
b1010110 6%
b1010111 6%
b1011000 6%
b1011001 6%
b1011010 6%
b1011011 6%
b1011100 6%
b1011101 6%
b1011110 6%
b1011111 6%
b1100000 6%
b1100001 6%
b1100010 6%
b1100011 6%
b1100100 6%
b1100101 6%
b1100110 6%
b1100111 6%
b1101000 6%
b1101001 6%
b1101010 6%
b1101011 6%
b1101100 6%
b1101101 6%
b1101110 6%
b1101111 6%
b1110000 6%
b1110001 6%
b1110010 6%
b1110011 6%
b1110100 6%
b1110101 6%
b1110110 6%
b1110111 6%
b1111000 6%
b1111001 6%
b1111010 6%
b1111011 6%
b1111100 6%
b1111101 6%
b1111110 6%
b1111111 6%
b10000000 6%
b10000001 6%
b10000010 6%
b10000011 6%
b10000100 6%
b10000101 6%
b10000110 6%
b10000111 6%
b10001000 6%
b10001001 6%
b10001010 6%
b10001011 6%
b10001100 6%
b10001101 6%
b10001110 6%
b10001111 6%
b10010000 6%
b10010001 6%
b10010010 6%
b10010011 6%
b10010100 6%
b10010101 6%
b10010110 6%
b10010111 6%
b10011000 6%
b10011001 6%
b10011010 6%
b10011011 6%
b10011100 6%
b10011101 6%
b10011110 6%
b10011111 6%
b10100000 6%
b10100001 6%
b10100010 6%
b10100011 6%
b10100100 6%
b10100101 6%
b10100110 6%
b10100111 6%
b10101000 6%
b10101001 6%
b10101010 6%
b10101011 6%
b10101100 6%
b10101101 6%
b10101110 6%
b10101111 6%
b10110000 6%
b10110001 6%
b10110010 6%
b10110011 6%
b10110100 6%
b10110101 6%
b10110110 6%
b10110111 6%
b10111000 6%
b10111001 6%
b10111010 6%
b10111011 6%
b10111100 6%
b10111101 6%
b10111110 6%
b10111111 6%
b11000000 6%
b11000001 6%
b11000010 6%
b11000011 6%
b11000100 6%
b11000101 6%
b11000110 6%
b11000111 6%
b11001000 6%
b11001001 6%
b11001010 6%
b11001011 6%
b11001100 6%
b11001101 6%
b11001110 6%
b11001111 6%
b11010000 6%
b11010001 6%
b11010010 6%
b11010011 6%
b11010100 6%
b11010101 6%
b11010110 6%
b11010111 6%
b11011000 6%
b11011001 6%
b11011010 6%
b11011011 6%
b11011100 6%
b11011101 6%
b11011110 6%
b11011111 6%
b11100000 6%
b11100001 6%
b11100010 6%
b11100011 6%
b11100100 6%
b11100101 6%
b11100110 6%
b11100111 6%
b11101000 6%
b11101001 6%
b11101010 6%
b11101011 6%
b11101100 6%
b11101101 6%
b11101110 6%
b11101111 6%
b11110000 6%
b11110001 6%
b11110010 6%
b11110011 6%
b11110100 6%
b11110101 6%
b11110110 6%
b11110111 6%
b11111000 6%
b11111001 6%
b11111010 6%
b11111011 6%
b11111100 6%
b11111101 6%
b11111110 6%
b11111111 6%
b100000000 6%
b10 #!
#150
0!!
0x+
08
0}
#200
1!!
1x+
18
1}
b0 b#
b1 b#
b10 b#
b11 b#
b100 b#
b101 b#
b110 b#
b111 b#
b1000 b#
b1001 b#
b1010 b#
b1011 b#
b1100 b#
b1101 b#
b1110 b#
b1111 b#
b10000 b#
b10001 b#
b10010 b#
b10011 b#
b10100 b#
b10101 b#
b10110 b#
b10111 b#
b11000 b#
b11001 b#
b11010 b#
b11011 b#
b11100 b#
b11101 b#
b11110 b#
b11111 b#
b100000 b#
b100001 b#
b100010 b#
b100011 b#
b100100 b#
b100101 b#
b100110 b#
b100111 b#
b101000 b#
b101001 b#
b101010 b#
b101011 b#
b101100 b#
b101101 b#
b101110 b#
b101111 b#
b110000 b#
b110001 b#
b110010 b#
b110011 b#
b110100 b#
b110101 b#
b110110 b#
b110111 b#
b111000 b#
b111001 b#
b111010 b#
b111011 b#
b111100 b#
b111101 b#
b111110 b#
b111111 b#
b1000000 b#
b1000001 b#
b1000010 b#
b1000011 b#
b1000100 b#
b1000101 b#
b1000110 b#
b1000111 b#
b1001000 b#
b1001001 b#
b1001010 b#
b1001011 b#
b1001100 b#
b1001101 b#
b1001110 b#
b1001111 b#
b1010000 b#
b1010001 b#
b1010010 b#
b1010011 b#
b1010100 b#
b1010101 b#
b1010110 b#
b1010111 b#
b1011000 b#
b1011001 b#
b1011010 b#
b1011011 b#
b1011100 b#
b1011101 b#
b1011110 b#
b1011111 b#
b1100000 b#
b1100001 b#
b1100010 b#
b1100011 b#
b1100100 b#
b1100101 b#
b1100110 b#
b1100111 b#
b1101000 b#
b1101001 b#
b1101010 b#
b1101011 b#
b1101100 b#
b1101101 b#
b1101110 b#
b1101111 b#
b1110000 b#
b1110001 b#
b1110010 b#
b1110011 b#
b1110100 b#
b1110101 b#
b1110110 b#
b1110111 b#
b1111000 b#
b1111001 b#
b1111010 b#
b1111011 b#
b1111100 b#
b1111101 b#
b1111110 b#
b1111111 b#
b10000000 b#
b10000001 b#
b10000010 b#
b10000011 b#
b10000100 b#
b10000101 b#
b10000110 b#
b10000111 b#
b10001000 b#
b10001001 b#
b10001010 b#
b10001011 b#
b10001100 b#
b10001101 b#
b10001110 b#
b10001111 b#
b10010000 b#
b10010001 b#
b10010010 b#
b10010011 b#
b10010100 b#
b10010101 b#
b10010110 b#
b10010111 b#
b10011000 b#
b10011001 b#
b10011010 b#
b10011011 b#
b10011100 b#
b10011101 b#
b10011110 b#
b10011111 b#
b10100000 b#
b10100001 b#
b10100010 b#
b10100011 b#
b10100100 b#
b10100101 b#
b10100110 b#
b10100111 b#
b10101000 b#
b10101001 b#
b10101010 b#
b10101011 b#
b10101100 b#
b10101101 b#
b10101110 b#
b10101111 b#
b10110000 b#
b10110001 b#
b10110010 b#
b10110011 b#
b10110100 b#
b10110101 b#
b10110110 b#
b10110111 b#
b10111000 b#
b10111001 b#
b10111010 b#
b10111011 b#
b10111100 b#
b10111101 b#
b10111110 b#
b10111111 b#
b11000000 b#
b11000001 b#
b11000010 b#
b11000011 b#
b11000100 b#
b11000101 b#
b11000110 b#
b11000111 b#
b11001000 b#
b11001001 b#
b11001010 b#
b11001011 b#
b11001100 b#
b11001101 b#
b11001110 b#
b11001111 b#
b11010000 b#
b11010001 b#
b11010010 b#
b11010011 b#
b11010100 b#
b11010101 b#
b11010110 b#
b11010111 b#
b11011000 b#
b11011001 b#
b11011010 b#
b11011011 b#
b11011100 b#
b11011101 b#
b11011110 b#
b11011111 b#
b11100000 b#
b11100001 b#
b11100010 b#
b11100011 b#
b11100100 b#
b11100101 b#
b11100110 b#
b11100111 b#
b11101000 b#
b11101001 b#
b11101010 b#
b11101011 b#
b11101100 b#
b11101101 b#
b11101110 b#
b11101111 b#
b11110000 b#
b11110001 b#
b11110010 b#
b11110011 b#
b11110100 b#
b11110101 b#
b11110110 b#
b11110111 b#
b11111000 b#
b11111001 b#
b11111010 b#
b11111011 b#
b11111100 b#
b11111101 b#
b11111110 b#
b11111111 b#
b100000000 b#
b0 e#
b1 e#
b10 e#
b11 e#
b100 e#
b101 e#
b110 e#
b111 e#
b1000 e#
b1001 e#
b1010 e#
b1011 e#
b1100 e#
b1101 e#
b1110 e#
b1111 e#
b10000 e#
b10001 e#
b10010 e#
b10011 e#
b10100 e#
b10101 e#
b10110 e#
b10111 e#
b11000 e#
b11001 e#
b11010 e#
b11011 e#
b11100 e#
b11101 e#
b11110 e#
b11111 e#
b100000 e#
b100001 e#
b100010 e#
b100011 e#
b100100 e#
b100101 e#
b100110 e#
b100111 e#
b101000 e#
b101001 e#
b101010 e#
b101011 e#
b101100 e#
b101101 e#
b101110 e#
b101111 e#
b110000 e#
b110001 e#
b110010 e#
b110011 e#
b110100 e#
b110101 e#
b110110 e#
b110111 e#
b111000 e#
b111001 e#
b111010 e#
b111011 e#
b111100 e#
b111101 e#
b111110 e#
b111111 e#
b1000000 e#
b1000001 e#
b1000010 e#
b1000011 e#
b1000100 e#
b1000101 e#
b1000110 e#
b1000111 e#
b1001000 e#
b1001001 e#
b1001010 e#
b1001011 e#
b1001100 e#
b1001101 e#
b1001110 e#
b1001111 e#
b1010000 e#
b1010001 e#
b1010010 e#
b1010011 e#
b1010100 e#
b1010101 e#
b1010110 e#
b1010111 e#
b1011000 e#
b1011001 e#
b1011010 e#
b1011011 e#
b1011100 e#
b1011101 e#
b1011110 e#
b1011111 e#
b1100000 e#
b1100001 e#
b1100010 e#
b1100011 e#
b1100100 e#
b1100101 e#
b1100110 e#
b1100111 e#
b1101000 e#
b1101001 e#
b1101010 e#
b1101011 e#
b1101100 e#
b1101101 e#
b1101110 e#
b1101111 e#
b1110000 e#
b1110001 e#
b1110010 e#
b1110011 e#
b1110100 e#
b1110101 e#
b1110110 e#
b1110111 e#
b1111000 e#
b1111001 e#
b1111010 e#
b1111011 e#
b1111100 e#
b1111101 e#
b1111110 e#
b1111111 e#
b10000000 e#
b10000001 e#
b10000010 e#
b10000011 e#
b10000100 e#
b10000101 e#
b10000110 e#
b10000111 e#
b10001000 e#
b10001001 e#
b10001010 e#
b10001011 e#
b10001100 e#
b10001101 e#
b10001110 e#
b10001111 e#
b10010000 e#
b10010001 e#
b10010010 e#
b10010011 e#
b10010100 e#
b10010101 e#
b10010110 e#
b10010111 e#
b10011000 e#
b10011001 e#
b10011010 e#
b10011011 e#
b10011100 e#
b10011101 e#
b10011110 e#
b10011111 e#
b10100000 e#
b10100001 e#
b10100010 e#
b10100011 e#
b10100100 e#
b10100101 e#
b10100110 e#
b10100111 e#
b10101000 e#
b10101001 e#
b10101010 e#
b10101011 e#
b10101100 e#
b10101101 e#
b10101110 e#
b10101111 e#
b10110000 e#
b10110001 e#
b10110010 e#
b10110011 e#
b10110100 e#
b10110101 e#
b10110110 e#
b10110111 e#
b10111000 e#
b10111001 e#
b10111010 e#
b10111011 e#
b10111100 e#
b10111101 e#
b10111110 e#
b10111111 e#
b11000000 e#
b11000001 e#
b11000010 e#
b11000011 e#
b11000100 e#
b11000101 e#
b11000110 e#
b11000111 e#
b11001000 e#
b11001001 e#
b11001010 e#
b11001011 e#
b11001100 e#
b11001101 e#
b11001110 e#
b11001111 e#
b11010000 e#
b11010001 e#
b11010010 e#
b11010011 e#
b11010100 e#
b11010101 e#
b11010110 e#
b11010111 e#
b11011000 e#
b11011001 e#
b11011010 e#
b11011011 e#
b11011100 e#
b11011101 e#
b11011110 e#
b11011111 e#
b11100000 e#
b11100001 e#
b11100010 e#
b11100011 e#
b11100100 e#
b11100101 e#
b11100110 e#
b11100111 e#
b11101000 e#
b11101001 e#
b11101010 e#
b11101011 e#
b11101100 e#
b11101101 e#
b11101110 e#
b11101111 e#
b11110000 e#
b11110001 e#
b11110010 e#
b11110011 e#
b11110100 e#
b11110101 e#
b11110110 e#
b11110111 e#
b11111000 e#
b11111001 e#
b11111010 e#
b11111011 e#
b11111100 e#
b11111101 e#
b11111110 e#
b11111111 e#
b100000000 e#
b0 h#
b1 h#
b10 h#
b11 h#
b100 h#
b101 h#
b110 h#
b111 h#
b1000 h#
b1001 h#
b1010 h#
b1011 h#
b1100 h#
b1101 h#
b1110 h#
b1111 h#
b10000 h#
b10001 h#
b10010 h#
b10011 h#
b10100 h#
b10101 h#
b10110 h#
b10111 h#
b11000 h#
b11001 h#
b11010 h#
b11011 h#
b11100 h#
b11101 h#
b11110 h#
b11111 h#
b100000 h#
b100001 h#
b100010 h#
b100011 h#
b100100 h#
b100101 h#
b100110 h#
b100111 h#
b101000 h#
b101001 h#
b101010 h#
b101011 h#
b101100 h#
b101101 h#
b101110 h#
b101111 h#
b110000 h#
b110001 h#
b110010 h#
b110011 h#
b110100 h#
b110101 h#
b110110 h#
b110111 h#
b111000 h#
b111001 h#
b111010 h#
b111011 h#
b111100 h#
b111101 h#
b111110 h#
b111111 h#
b1000000 h#
b1000001 h#
b1000010 h#
b1000011 h#
b1000100 h#
b1000101 h#
b1000110 h#
b1000111 h#
b1001000 h#
b1001001 h#
b1001010 h#
b1001011 h#
b1001100 h#
b1001101 h#
b1001110 h#
b1001111 h#
b1010000 h#
b1010001 h#
b1010010 h#
b1010011 h#
b1010100 h#
b1010101 h#
b1010110 h#
b1010111 h#
b1011000 h#
b1011001 h#
b1011010 h#
b1011011 h#
b1011100 h#
b1011101 h#
b1011110 h#
b1011111 h#
b1100000 h#
b1100001 h#
b1100010 h#
b1100011 h#
b1100100 h#
b1100101 h#
b1100110 h#
b1100111 h#
b1101000 h#
b1101001 h#
b1101010 h#
b1101011 h#
b1101100 h#
b1101101 h#
b1101110 h#
b1101111 h#
b1110000 h#
b1110001 h#
b1110010 h#
b1110011 h#
b1110100 h#
b1110101 h#
b1110110 h#
b1110111 h#
b1111000 h#
b1111001 h#
b1111010 h#
b1111011 h#
b1111100 h#
b1111101 h#
b1111110 h#
b1111111 h#
b10000000 h#
b10000001 h#
b10000010 h#
b10000011 h#
b10000100 h#
b10000101 h#
b10000110 h#
b10000111 h#
b10001000 h#
b10001001 h#
b10001010 h#
b10001011 h#
b10001100 h#
b10001101 h#
b10001110 h#
b10001111 h#
b10010000 h#
b10010001 h#
b10010010 h#
b10010011 h#
b10010100 h#
b10010101 h#
b10010110 h#
b10010111 h#
b10011000 h#
b10011001 h#
b10011010 h#
b10011011 h#
b10011100 h#
b10011101 h#
b10011110 h#
b10011111 h#
b10100000 h#
b10100001 h#
b10100010 h#
b10100011 h#
b10100100 h#
b10100101 h#
b10100110 h#
b10100111 h#
b10101000 h#
b10101001 h#
b10101010 h#
b10101011 h#
b10101100 h#
b10101101 h#
b10101110 h#
b10101111 h#
b10110000 h#
b10110001 h#
b10110010 h#
b10110011 h#
b10110100 h#
b10110101 h#
b10110110 h#
b10110111 h#
b10111000 h#
b10111001 h#
b10111010 h#
b10111011 h#
b10111100 h#
b10111101 h#
b10111110 h#
b10111111 h#
b11000000 h#
b11000001 h#
b11000010 h#
b11000011 h#
b11000100 h#
b11000101 h#
b11000110 h#
b11000111 h#
b11001000 h#
b11001001 h#
b11001010 h#
b11001011 h#
b11001100 h#
b11001101 h#
b11001110 h#
b11001111 h#
b11010000 h#
b11010001 h#
b11010010 h#
b11010011 h#
b11010100 h#
b11010101 h#
b11010110 h#
b11010111 h#
b11011000 h#
b11011001 h#
b11011010 h#
b11011011 h#
b11011100 h#
b11011101 h#
b11011110 h#
b11011111 h#
b11100000 h#
b11100001 h#
b11100010 h#
b11100011 h#
b11100100 h#
b11100101 h#
b11100110 h#
b11100111 h#
b11101000 h#
b11101001 h#
b11101010 h#
b11101011 h#
b11101100 h#
b11101101 h#
b11101110 h#
b11101111 h#
b11110000 h#
b11110001 h#
b11110010 h#
b11110011 h#
b11110100 h#
b11110101 h#
b11110110 h#
b11110111 h#
b11111000 h#
b11111001 h#
b11111010 h#
b11111011 h#
b11111100 h#
b11111101 h#
b11111110 h#
b11111111 h#
b100000000 h#
b0 k#
b1 k#
b10 k#
b11 k#
b100 k#
b101 k#
b110 k#
b111 k#
b1000 k#
b1001 k#
b1010 k#
b1011 k#
b1100 k#
b1101 k#
b1110 k#
b1111 k#
b10000 k#
b10001 k#
b10010 k#
b10011 k#
b10100 k#
b10101 k#
b10110 k#
b10111 k#
b11000 k#
b11001 k#
b11010 k#
b11011 k#
b11100 k#
b11101 k#
b11110 k#
b11111 k#
b100000 k#
b100001 k#
b100010 k#
b100011 k#
b100100 k#
b100101 k#
b100110 k#
b100111 k#
b101000 k#
b101001 k#
b101010 k#
b101011 k#
b101100 k#
b101101 k#
b101110 k#
b101111 k#
b110000 k#
b110001 k#
b110010 k#
b110011 k#
b110100 k#
b110101 k#
b110110 k#
b110111 k#
b111000 k#
b111001 k#
b111010 k#
b111011 k#
b111100 k#
b111101 k#
b111110 k#
b111111 k#
b1000000 k#
b1000001 k#
b1000010 k#
b1000011 k#
b1000100 k#
b1000101 k#
b1000110 k#
b1000111 k#
b1001000 k#
b1001001 k#
b1001010 k#
b1001011 k#
b1001100 k#
b1001101 k#
b1001110 k#
b1001111 k#
b1010000 k#
b1010001 k#
b1010010 k#
b1010011 k#
b1010100 k#
b1010101 k#
b1010110 k#
b1010111 k#
b1011000 k#
b1011001 k#
b1011010 k#
b1011011 k#
b1011100 k#
b1011101 k#
b1011110 k#
b1011111 k#
b1100000 k#
b1100001 k#
b1100010 k#
b1100011 k#
b1100100 k#
b1100101 k#
b1100110 k#
b1100111 k#
b1101000 k#
b1101001 k#
b1101010 k#
b1101011 k#
b1101100 k#
b1101101 k#
b1101110 k#
b1101111 k#
b1110000 k#
b1110001 k#
b1110010 k#
b1110011 k#
b1110100 k#
b1110101 k#
b1110110 k#
b1110111 k#
b1111000 k#
b1111001 k#
b1111010 k#
b1111011 k#
b1111100 k#
b1111101 k#
b1111110 k#
b1111111 k#
b10000000 k#
b10000001 k#
b10000010 k#
b10000011 k#
b10000100 k#
b10000101 k#
b10000110 k#
b10000111 k#
b10001000 k#
b10001001 k#
b10001010 k#
b10001011 k#
b10001100 k#
b10001101 k#
b10001110 k#
b10001111 k#
b10010000 k#
b10010001 k#
b10010010 k#
b10010011 k#
b10010100 k#
b10010101 k#
b10010110 k#
b10010111 k#
b10011000 k#
b10011001 k#
b10011010 k#
b10011011 k#
b10011100 k#
b10011101 k#
b10011110 k#
b10011111 k#
b10100000 k#
b10100001 k#
b10100010 k#
b10100011 k#
b10100100 k#
b10100101 k#
b10100110 k#
b10100111 k#
b10101000 k#
b10101001 k#
b10101010 k#
b10101011 k#
b10101100 k#
b10101101 k#
b10101110 k#
b10101111 k#
b10110000 k#
b10110001 k#
b10110010 k#
b10110011 k#
b10110100 k#
b10110101 k#
b10110110 k#
b10110111 k#
b10111000 k#
b10111001 k#
b10111010 k#
b10111011 k#
b10111100 k#
b10111101 k#
b10111110 k#
b10111111 k#
b11000000 k#
b11000001 k#
b11000010 k#
b11000011 k#
b11000100 k#
b11000101 k#
b11000110 k#
b11000111 k#
b11001000 k#
b11001001 k#
b11001010 k#
b11001011 k#
b11001100 k#
b11001101 k#
b11001110 k#
b11001111 k#
b11010000 k#
b11010001 k#
b11010010 k#
b11010011 k#
b11010100 k#
b11010101 k#
b11010110 k#
b11010111 k#
b11011000 k#
b11011001 k#
b11011010 k#
b11011011 k#
b11011100 k#
b11011101 k#
b11011110 k#
b11011111 k#
b11100000 k#
b11100001 k#
b11100010 k#
b11100011 k#
b11100100 k#
b11100101 k#
b11100110 k#
b11100111 k#
b11101000 k#
b11101001 k#
b11101010 k#
b11101011 k#
b11101100 k#
b11101101 k#
b11101110 k#
b11101111 k#
b11110000 k#
b11110001 k#
b11110010 k#
b11110011 k#
b11110100 k#
b11110101 k#
b11110110 k#
b11110111 k#
b11111000 k#
b11111001 k#
b11111010 k#
b11111011 k#
b11111100 k#
b11111101 k#
b11111110 k#
b11111111 k#
b100000000 k#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 q#
b1 q#
b10 q#
b11 q#
b100 q#
b101 q#
b110 q#
b111 q#
b1000 q#
b1001 q#
b1010 q#
b1011 q#
b1100 q#
b1101 q#
b1110 q#
b1111 q#
b10000 q#
b10001 q#
b10010 q#
b10011 q#
b10100 q#
b10101 q#
b10110 q#
b10111 q#
b11000 q#
b11001 q#
b11010 q#
b11011 q#
b11100 q#
b11101 q#
b11110 q#
b11111 q#
b100000 q#
b100001 q#
b100010 q#
b100011 q#
b100100 q#
b100101 q#
b100110 q#
b100111 q#
b101000 q#
b101001 q#
b101010 q#
b101011 q#
b101100 q#
b101101 q#
b101110 q#
b101111 q#
b110000 q#
b110001 q#
b110010 q#
b110011 q#
b110100 q#
b110101 q#
b110110 q#
b110111 q#
b111000 q#
b111001 q#
b111010 q#
b111011 q#
b111100 q#
b111101 q#
b111110 q#
b111111 q#
b1000000 q#
b1000001 q#
b1000010 q#
b1000011 q#
b1000100 q#
b1000101 q#
b1000110 q#
b1000111 q#
b1001000 q#
b1001001 q#
b1001010 q#
b1001011 q#
b1001100 q#
b1001101 q#
b1001110 q#
b1001111 q#
b1010000 q#
b1010001 q#
b1010010 q#
b1010011 q#
b1010100 q#
b1010101 q#
b1010110 q#
b1010111 q#
b1011000 q#
b1011001 q#
b1011010 q#
b1011011 q#
b1011100 q#
b1011101 q#
b1011110 q#
b1011111 q#
b1100000 q#
b1100001 q#
b1100010 q#
b1100011 q#
b1100100 q#
b1100101 q#
b1100110 q#
b1100111 q#
b1101000 q#
b1101001 q#
b1101010 q#
b1101011 q#
b1101100 q#
b1101101 q#
b1101110 q#
b1101111 q#
b1110000 q#
b1110001 q#
b1110010 q#
b1110011 q#
b1110100 q#
b1110101 q#
b1110110 q#
b1110111 q#
b1111000 q#
b1111001 q#
b1111010 q#
b1111011 q#
b1111100 q#
b1111101 q#
b1111110 q#
b1111111 q#
b10000000 q#
b10000001 q#
b10000010 q#
b10000011 q#
b10000100 q#
b10000101 q#
b10000110 q#
b10000111 q#
b10001000 q#
b10001001 q#
b10001010 q#
b10001011 q#
b10001100 q#
b10001101 q#
b10001110 q#
b10001111 q#
b10010000 q#
b10010001 q#
b10010010 q#
b10010011 q#
b10010100 q#
b10010101 q#
b10010110 q#
b10010111 q#
b10011000 q#
b10011001 q#
b10011010 q#
b10011011 q#
b10011100 q#
b10011101 q#
b10011110 q#
b10011111 q#
b10100000 q#
b10100001 q#
b10100010 q#
b10100011 q#
b10100100 q#
b10100101 q#
b10100110 q#
b10100111 q#
b10101000 q#
b10101001 q#
b10101010 q#
b10101011 q#
b10101100 q#
b10101101 q#
b10101110 q#
b10101111 q#
b10110000 q#
b10110001 q#
b10110010 q#
b10110011 q#
b10110100 q#
b10110101 q#
b10110110 q#
b10110111 q#
b10111000 q#
b10111001 q#
b10111010 q#
b10111011 q#
b10111100 q#
b10111101 q#
b10111110 q#
b10111111 q#
b11000000 q#
b11000001 q#
b11000010 q#
b11000011 q#
b11000100 q#
b11000101 q#
b11000110 q#
b11000111 q#
b11001000 q#
b11001001 q#
b11001010 q#
b11001011 q#
b11001100 q#
b11001101 q#
b11001110 q#
b11001111 q#
b11010000 q#
b11010001 q#
b11010010 q#
b11010011 q#
b11010100 q#
b11010101 q#
b11010110 q#
b11010111 q#
b11011000 q#
b11011001 q#
b11011010 q#
b11011011 q#
b11011100 q#
b11011101 q#
b11011110 q#
b11011111 q#
b11100000 q#
b11100001 q#
b11100010 q#
b11100011 q#
b11100100 q#
b11100101 q#
b11100110 q#
b11100111 q#
b11101000 q#
b11101001 q#
b11101010 q#
b11101011 q#
b11101100 q#
b11101101 q#
b11101110 q#
b11101111 q#
b11110000 q#
b11110001 q#
b11110010 q#
b11110011 q#
b11110100 q#
b11110101 q#
b11110110 q#
b11110111 q#
b11111000 q#
b11111001 q#
b11111010 q#
b11111011 q#
b11111100 q#
b11111101 q#
b11111110 q#
b11111111 q#
b100000000 q#
b0 s#
b1 s#
b10 s#
b11 s#
b100 s#
b101 s#
b110 s#
b111 s#
b1000 s#
b1001 s#
b1010 s#
b1011 s#
b1100 s#
b1101 s#
b1110 s#
b1111 s#
b10000 s#
b10001 s#
b10010 s#
b10011 s#
b10100 s#
b10101 s#
b10110 s#
b10111 s#
b11000 s#
b11001 s#
b11010 s#
b11011 s#
b11100 s#
b11101 s#
b11110 s#
b11111 s#
b100000 s#
b100001 s#
b100010 s#
b100011 s#
b100100 s#
b100101 s#
b100110 s#
b100111 s#
b101000 s#
b101001 s#
b101010 s#
b101011 s#
b101100 s#
b101101 s#
b101110 s#
b101111 s#
b110000 s#
b110001 s#
b110010 s#
b110011 s#
b110100 s#
b110101 s#
b110110 s#
b110111 s#
b111000 s#
b111001 s#
b111010 s#
b111011 s#
b111100 s#
b111101 s#
b111110 s#
b111111 s#
b1000000 s#
b1000001 s#
b1000010 s#
b1000011 s#
b1000100 s#
b1000101 s#
b1000110 s#
b1000111 s#
b1001000 s#
b1001001 s#
b1001010 s#
b1001011 s#
b1001100 s#
b1001101 s#
b1001110 s#
b1001111 s#
b1010000 s#
b1010001 s#
b1010010 s#
b1010011 s#
b1010100 s#
b1010101 s#
b1010110 s#
b1010111 s#
b1011000 s#
b1011001 s#
b1011010 s#
b1011011 s#
b1011100 s#
b1011101 s#
b1011110 s#
b1011111 s#
b1100000 s#
b1100001 s#
b1100010 s#
b1100011 s#
b1100100 s#
b1100101 s#
b1100110 s#
b1100111 s#
b1101000 s#
b1101001 s#
b1101010 s#
b1101011 s#
b1101100 s#
b1101101 s#
b1101110 s#
b1101111 s#
b1110000 s#
b1110001 s#
b1110010 s#
b1110011 s#
b1110100 s#
b1110101 s#
b1110110 s#
b1110111 s#
b1111000 s#
b1111001 s#
b1111010 s#
b1111011 s#
b1111100 s#
b1111101 s#
b1111110 s#
b1111111 s#
b10000000 s#
b10000001 s#
b10000010 s#
b10000011 s#
b10000100 s#
b10000101 s#
b10000110 s#
b10000111 s#
b10001000 s#
b10001001 s#
b10001010 s#
b10001011 s#
b10001100 s#
b10001101 s#
b10001110 s#
b10001111 s#
b10010000 s#
b10010001 s#
b10010010 s#
b10010011 s#
b10010100 s#
b10010101 s#
b10010110 s#
b10010111 s#
b10011000 s#
b10011001 s#
b10011010 s#
b10011011 s#
b10011100 s#
b10011101 s#
b10011110 s#
b10011111 s#
b10100000 s#
b10100001 s#
b10100010 s#
b10100011 s#
b10100100 s#
b10100101 s#
b10100110 s#
b10100111 s#
b10101000 s#
b10101001 s#
b10101010 s#
b10101011 s#
b10101100 s#
b10101101 s#
b10101110 s#
b10101111 s#
b10110000 s#
b10110001 s#
b10110010 s#
b10110011 s#
b10110100 s#
b10110101 s#
b10110110 s#
b10110111 s#
b10111000 s#
b10111001 s#
b10111010 s#
b10111011 s#
b10111100 s#
b10111101 s#
b10111110 s#
b10111111 s#
b11000000 s#
b11000001 s#
b11000010 s#
b11000011 s#
b11000100 s#
b11000101 s#
b11000110 s#
b11000111 s#
b11001000 s#
b11001001 s#
b11001010 s#
b11001011 s#
b11001100 s#
b11001101 s#
b11001110 s#
b11001111 s#
b11010000 s#
b11010001 s#
b11010010 s#
b11010011 s#
b11010100 s#
b11010101 s#
b11010110 s#
b11010111 s#
b11011000 s#
b11011001 s#
b11011010 s#
b11011011 s#
b11011100 s#
b11011101 s#
b11011110 s#
b11011111 s#
b11100000 s#
b11100001 s#
b11100010 s#
b11100011 s#
b11100100 s#
b11100101 s#
b11100110 s#
b11100111 s#
b11101000 s#
b11101001 s#
b11101010 s#
b11101011 s#
b11101100 s#
b11101101 s#
b11101110 s#
b11101111 s#
b11110000 s#
b11110001 s#
b11110010 s#
b11110011 s#
b11110100 s#
b11110101 s#
b11110110 s#
b11110111 s#
b11111000 s#
b11111001 s#
b11111010 s#
b11111011 s#
b11111100 s#
b11111101 s#
b11111110 s#
b11111111 s#
b100000000 s#
b0 %%
b1 %%
b10 %%
b11 %%
b100 %%
b101 %%
b110 %%
b111 %%
b1000 %%
b1001 %%
b1010 %%
b1011 %%
b1100 %%
b1101 %%
b1110 %%
b1111 %%
b10000 %%
b10001 %%
b10010 %%
b10011 %%
b10100 %%
b10101 %%
b10110 %%
b10111 %%
b11000 %%
b11001 %%
b11010 %%
b11011 %%
b11100 %%
b11101 %%
b11110 %%
b11111 %%
b100000 %%
b100001 %%
b100010 %%
b100011 %%
b100100 %%
b100101 %%
b100110 %%
b100111 %%
b101000 %%
b101001 %%
b101010 %%
b101011 %%
b101100 %%
b101101 %%
b101110 %%
b101111 %%
b110000 %%
b110001 %%
b110010 %%
b110011 %%
b110100 %%
b110101 %%
b110110 %%
b110111 %%
b111000 %%
b111001 %%
b111010 %%
b111011 %%
b111100 %%
b111101 %%
b111110 %%
b111111 %%
b1000000 %%
b1000001 %%
b1000010 %%
b1000011 %%
b1000100 %%
b1000101 %%
b1000110 %%
b1000111 %%
b1001000 %%
b1001001 %%
b1001010 %%
b1001011 %%
b1001100 %%
b1001101 %%
b1001110 %%
b1001111 %%
b1010000 %%
b1010001 %%
b1010010 %%
b1010011 %%
b1010100 %%
b1010101 %%
b1010110 %%
b1010111 %%
b1011000 %%
b1011001 %%
b1011010 %%
b1011011 %%
b1011100 %%
b1011101 %%
b1011110 %%
b1011111 %%
b1100000 %%
b1100001 %%
b1100010 %%
b1100011 %%
b1100100 %%
b1100101 %%
b1100110 %%
b1100111 %%
b1101000 %%
b1101001 %%
b1101010 %%
b1101011 %%
b1101100 %%
b1101101 %%
b1101110 %%
b1101111 %%
b1110000 %%
b1110001 %%
b1110010 %%
b1110011 %%
b1110100 %%
b1110101 %%
b1110110 %%
b1110111 %%
b1111000 %%
b1111001 %%
b1111010 %%
b1111011 %%
b1111100 %%
b1111101 %%
b1111110 %%
b1111111 %%
b10000000 %%
b10000001 %%
b10000010 %%
b10000011 %%
b10000100 %%
b10000101 %%
b10000110 %%
b10000111 %%
b10001000 %%
b10001001 %%
b10001010 %%
b10001011 %%
b10001100 %%
b10001101 %%
b10001110 %%
b10001111 %%
b10010000 %%
b10010001 %%
b10010010 %%
b10010011 %%
b10010100 %%
b10010101 %%
b10010110 %%
b10010111 %%
b10011000 %%
b10011001 %%
b10011010 %%
b10011011 %%
b10011100 %%
b10011101 %%
b10011110 %%
b10011111 %%
b10100000 %%
b10100001 %%
b10100010 %%
b10100011 %%
b10100100 %%
b10100101 %%
b10100110 %%
b10100111 %%
b10101000 %%
b10101001 %%
b10101010 %%
b10101011 %%
b10101100 %%
b10101101 %%
b10101110 %%
b10101111 %%
b10110000 %%
b10110001 %%
b10110010 %%
b10110011 %%
b10110100 %%
b10110101 %%
b10110110 %%
b10110111 %%
b10111000 %%
b10111001 %%
b10111010 %%
b10111011 %%
b10111100 %%
b10111101 %%
b10111110 %%
b10111111 %%
b11000000 %%
b11000001 %%
b11000010 %%
b11000011 %%
b11000100 %%
b11000101 %%
b11000110 %%
b11000111 %%
b11001000 %%
b11001001 %%
b11001010 %%
b11001011 %%
b11001100 %%
b11001101 %%
b11001110 %%
b11001111 %%
b11010000 %%
b11010001 %%
b11010010 %%
b11010011 %%
b11010100 %%
b11010101 %%
b11010110 %%
b11010111 %%
b11011000 %%
b11011001 %%
b11011010 %%
b11011011 %%
b11011100 %%
b11011101 %%
b11011110 %%
b11011111 %%
b11100000 %%
b11100001 %%
b11100010 %%
b11100011 %%
b11100100 %%
b11100101 %%
b11100110 %%
b11100111 %%
b11101000 %%
b11101001 %%
b11101010 %%
b11101011 %%
b11101100 %%
b11101101 %%
b11101110 %%
b11101111 %%
b11110000 %%
b11110001 %%
b11110010 %%
b11110011 %%
b11110100 %%
b11110101 %%
b11110110 %%
b11110111 %%
b11111000 %%
b11111001 %%
b11111010 %%
b11111011 %%
b11111100 %%
b11111101 %%
b11111110 %%
b11111111 %%
b100000000 %%
b0 (%
b1 (%
b10 (%
b11 (%
b100 (%
b101 (%
b110 (%
b111 (%
b1000 (%
b1001 (%
b1010 (%
b1011 (%
b1100 (%
b1101 (%
b1110 (%
b1111 (%
b10000 (%
b10001 (%
b10010 (%
b10011 (%
b10100 (%
b10101 (%
b10110 (%
b10111 (%
b11000 (%
b11001 (%
b11010 (%
b11011 (%
b11100 (%
b11101 (%
b11110 (%
b11111 (%
b100000 (%
b100001 (%
b100010 (%
b100011 (%
b100100 (%
b100101 (%
b100110 (%
b100111 (%
b101000 (%
b101001 (%
b101010 (%
b101011 (%
b101100 (%
b101101 (%
b101110 (%
b101111 (%
b110000 (%
b110001 (%
b110010 (%
b110011 (%
b110100 (%
b110101 (%
b110110 (%
b110111 (%
b111000 (%
b111001 (%
b111010 (%
b111011 (%
b111100 (%
b111101 (%
b111110 (%
b111111 (%
b1000000 (%
b1000001 (%
b1000010 (%
b1000011 (%
b1000100 (%
b1000101 (%
b1000110 (%
b1000111 (%
b1001000 (%
b1001001 (%
b1001010 (%
b1001011 (%
b1001100 (%
b1001101 (%
b1001110 (%
b1001111 (%
b1010000 (%
b1010001 (%
b1010010 (%
b1010011 (%
b1010100 (%
b1010101 (%
b1010110 (%
b1010111 (%
b1011000 (%
b1011001 (%
b1011010 (%
b1011011 (%
b1011100 (%
b1011101 (%
b1011110 (%
b1011111 (%
b1100000 (%
b1100001 (%
b1100010 (%
b1100011 (%
b1100100 (%
b1100101 (%
b1100110 (%
b1100111 (%
b1101000 (%
b1101001 (%
b1101010 (%
b1101011 (%
b1101100 (%
b1101101 (%
b1101110 (%
b1101111 (%
b1110000 (%
b1110001 (%
b1110010 (%
b1110011 (%
b1110100 (%
b1110101 (%
b1110110 (%
b1110111 (%
b1111000 (%
b1111001 (%
b1111010 (%
b1111011 (%
b1111100 (%
b1111101 (%
b1111110 (%
b1111111 (%
b10000000 (%
b10000001 (%
b10000010 (%
b10000011 (%
b10000100 (%
b10000101 (%
b10000110 (%
b10000111 (%
b10001000 (%
b10001001 (%
b10001010 (%
b10001011 (%
b10001100 (%
b10001101 (%
b10001110 (%
b10001111 (%
b10010000 (%
b10010001 (%
b10010010 (%
b10010011 (%
b10010100 (%
b10010101 (%
b10010110 (%
b10010111 (%
b10011000 (%
b10011001 (%
b10011010 (%
b10011011 (%
b10011100 (%
b10011101 (%
b10011110 (%
b10011111 (%
b10100000 (%
b10100001 (%
b10100010 (%
b10100011 (%
b10100100 (%
b10100101 (%
b10100110 (%
b10100111 (%
b10101000 (%
b10101001 (%
b10101010 (%
b10101011 (%
b10101100 (%
b10101101 (%
b10101110 (%
b10101111 (%
b10110000 (%
b10110001 (%
b10110010 (%
b10110011 (%
b10110100 (%
b10110101 (%
b10110110 (%
b10110111 (%
b10111000 (%
b10111001 (%
b10111010 (%
b10111011 (%
b10111100 (%
b10111101 (%
b10111110 (%
b10111111 (%
b11000000 (%
b11000001 (%
b11000010 (%
b11000011 (%
b11000100 (%
b11000101 (%
b11000110 (%
b11000111 (%
b11001000 (%
b11001001 (%
b11001010 (%
b11001011 (%
b11001100 (%
b11001101 (%
b11001110 (%
b11001111 (%
b11010000 (%
b11010001 (%
b11010010 (%
b11010011 (%
b11010100 (%
b11010101 (%
b11010110 (%
b11010111 (%
b11011000 (%
b11011001 (%
b11011010 (%
b11011011 (%
b11011100 (%
b11011101 (%
b11011110 (%
b11011111 (%
b11100000 (%
b11100001 (%
b11100010 (%
b11100011 (%
b11100100 (%
b11100101 (%
b11100110 (%
b11100111 (%
b11101000 (%
b11101001 (%
b11101010 (%
b11101011 (%
b11101100 (%
b11101101 (%
b11101110 (%
b11101111 (%
b11110000 (%
b11110001 (%
b11110010 (%
b11110011 (%
b11110100 (%
b11110101 (%
b11110110 (%
b11110111 (%
b11111000 (%
b11111001 (%
b11111010 (%
b11111011 (%
b11111100 (%
b11111101 (%
b11111110 (%
b11111111 (%
b100000000 (%
b0 +%
b1 +%
b10 +%
b11 +%
b100 +%
b101 +%
b110 +%
b111 +%
b1000 +%
b1001 +%
b1010 +%
b1011 +%
b1100 +%
b1101 +%
b1110 +%
b1111 +%
b10000 +%
b10001 +%
b10010 +%
b10011 +%
b10100 +%
b10101 +%
b10110 +%
b10111 +%
b11000 +%
b11001 +%
b11010 +%
b11011 +%
b11100 +%
b11101 +%
b11110 +%
b11111 +%
b100000 +%
b100001 +%
b100010 +%
b100011 +%
b100100 +%
b100101 +%
b100110 +%
b100111 +%
b101000 +%
b101001 +%
b101010 +%
b101011 +%
b101100 +%
b101101 +%
b101110 +%
b101111 +%
b110000 +%
b110001 +%
b110010 +%
b110011 +%
b110100 +%
b110101 +%
b110110 +%
b110111 +%
b111000 +%
b111001 +%
b111010 +%
b111011 +%
b111100 +%
b111101 +%
b111110 +%
b111111 +%
b1000000 +%
b1000001 +%
b1000010 +%
b1000011 +%
b1000100 +%
b1000101 +%
b1000110 +%
b1000111 +%
b1001000 +%
b1001001 +%
b1001010 +%
b1001011 +%
b1001100 +%
b1001101 +%
b1001110 +%
b1001111 +%
b1010000 +%
b1010001 +%
b1010010 +%
b1010011 +%
b1010100 +%
b1010101 +%
b1010110 +%
b1010111 +%
b1011000 +%
b1011001 +%
b1011010 +%
b1011011 +%
b1011100 +%
b1011101 +%
b1011110 +%
b1011111 +%
b1100000 +%
b1100001 +%
b1100010 +%
b1100011 +%
b1100100 +%
b1100101 +%
b1100110 +%
b1100111 +%
b1101000 +%
b1101001 +%
b1101010 +%
b1101011 +%
b1101100 +%
b1101101 +%
b1101110 +%
b1101111 +%
b1110000 +%
b1110001 +%
b1110010 +%
b1110011 +%
b1110100 +%
b1110101 +%
b1110110 +%
b1110111 +%
b1111000 +%
b1111001 +%
b1111010 +%
b1111011 +%
b1111100 +%
b1111101 +%
b1111110 +%
b1111111 +%
b10000000 +%
b10000001 +%
b10000010 +%
b10000011 +%
b10000100 +%
b10000101 +%
b10000110 +%
b10000111 +%
b10001000 +%
b10001001 +%
b10001010 +%
b10001011 +%
b10001100 +%
b10001101 +%
b10001110 +%
b10001111 +%
b10010000 +%
b10010001 +%
b10010010 +%
b10010011 +%
b10010100 +%
b10010101 +%
b10010110 +%
b10010111 +%
b10011000 +%
b10011001 +%
b10011010 +%
b10011011 +%
b10011100 +%
b10011101 +%
b10011110 +%
b10011111 +%
b10100000 +%
b10100001 +%
b10100010 +%
b10100011 +%
b10100100 +%
b10100101 +%
b10100110 +%
b10100111 +%
b10101000 +%
b10101001 +%
b10101010 +%
b10101011 +%
b10101100 +%
b10101101 +%
b10101110 +%
b10101111 +%
b10110000 +%
b10110001 +%
b10110010 +%
b10110011 +%
b10110100 +%
b10110101 +%
b10110110 +%
b10110111 +%
b10111000 +%
b10111001 +%
b10111010 +%
b10111011 +%
b10111100 +%
b10111101 +%
b10111110 +%
b10111111 +%
b11000000 +%
b11000001 +%
b11000010 +%
b11000011 +%
b11000100 +%
b11000101 +%
b11000110 +%
b11000111 +%
b11001000 +%
b11001001 +%
b11001010 +%
b11001011 +%
b11001100 +%
b11001101 +%
b11001110 +%
b11001111 +%
b11010000 +%
b11010001 +%
b11010010 +%
b11010011 +%
b11010100 +%
b11010101 +%
b11010110 +%
b11010111 +%
b11011000 +%
b11011001 +%
b11011010 +%
b11011011 +%
b11011100 +%
b11011101 +%
b11011110 +%
b11011111 +%
b11100000 +%
b11100001 +%
b11100010 +%
b11100011 +%
b11100100 +%
b11100101 +%
b11100110 +%
b11100111 +%
b11101000 +%
b11101001 +%
b11101010 +%
b11101011 +%
b11101100 +%
b11101101 +%
b11101110 +%
b11101111 +%
b11110000 +%
b11110001 +%
b11110010 +%
b11110011 +%
b11110100 +%
b11110101 +%
b11110110 +%
b11110111 +%
b11111000 +%
b11111001 +%
b11111010 +%
b11111011 +%
b11111100 +%
b11111101 +%
b11111110 +%
b11111111 +%
b100000000 +%
b0 .%
b1 .%
b10 .%
b11 .%
b100 .%
b101 .%
b110 .%
b111 .%
b1000 .%
b1001 .%
b1010 .%
b1011 .%
b1100 .%
b1101 .%
b1110 .%
b1111 .%
b10000 .%
b10001 .%
b10010 .%
b10011 .%
b10100 .%
b10101 .%
b10110 .%
b10111 .%
b11000 .%
b11001 .%
b11010 .%
b11011 .%
b11100 .%
b11101 .%
b11110 .%
b11111 .%
b100000 .%
b100001 .%
b100010 .%
b100011 .%
b100100 .%
b100101 .%
b100110 .%
b100111 .%
b101000 .%
b101001 .%
b101010 .%
b101011 .%
b101100 .%
b101101 .%
b101110 .%
b101111 .%
b110000 .%
b110001 .%
b110010 .%
b110011 .%
b110100 .%
b110101 .%
b110110 .%
b110111 .%
b111000 .%
b111001 .%
b111010 .%
b111011 .%
b111100 .%
b111101 .%
b111110 .%
b111111 .%
b1000000 .%
b1000001 .%
b1000010 .%
b1000011 .%
b1000100 .%
b1000101 .%
b1000110 .%
b1000111 .%
b1001000 .%
b1001001 .%
b1001010 .%
b1001011 .%
b1001100 .%
b1001101 .%
b1001110 .%
b1001111 .%
b1010000 .%
b1010001 .%
b1010010 .%
b1010011 .%
b1010100 .%
b1010101 .%
b1010110 .%
b1010111 .%
b1011000 .%
b1011001 .%
b1011010 .%
b1011011 .%
b1011100 .%
b1011101 .%
b1011110 .%
b1011111 .%
b1100000 .%
b1100001 .%
b1100010 .%
b1100011 .%
b1100100 .%
b1100101 .%
b1100110 .%
b1100111 .%
b1101000 .%
b1101001 .%
b1101010 .%
b1101011 .%
b1101100 .%
b1101101 .%
b1101110 .%
b1101111 .%
b1110000 .%
b1110001 .%
b1110010 .%
b1110011 .%
b1110100 .%
b1110101 .%
b1110110 .%
b1110111 .%
b1111000 .%
b1111001 .%
b1111010 .%
b1111011 .%
b1111100 .%
b1111101 .%
b1111110 .%
b1111111 .%
b10000000 .%
b10000001 .%
b10000010 .%
b10000011 .%
b10000100 .%
b10000101 .%
b10000110 .%
b10000111 .%
b10001000 .%
b10001001 .%
b10001010 .%
b10001011 .%
b10001100 .%
b10001101 .%
b10001110 .%
b10001111 .%
b10010000 .%
b10010001 .%
b10010010 .%
b10010011 .%
b10010100 .%
b10010101 .%
b10010110 .%
b10010111 .%
b10011000 .%
b10011001 .%
b10011010 .%
b10011011 .%
b10011100 .%
b10011101 .%
b10011110 .%
b10011111 .%
b10100000 .%
b10100001 .%
b10100010 .%
b10100011 .%
b10100100 .%
b10100101 .%
b10100110 .%
b10100111 .%
b10101000 .%
b10101001 .%
b10101010 .%
b10101011 .%
b10101100 .%
b10101101 .%
b10101110 .%
b10101111 .%
b10110000 .%
b10110001 .%
b10110010 .%
b10110011 .%
b10110100 .%
b10110101 .%
b10110110 .%
b10110111 .%
b10111000 .%
b10111001 .%
b10111010 .%
b10111011 .%
b10111100 .%
b10111101 .%
b10111110 .%
b10111111 .%
b11000000 .%
b11000001 .%
b11000010 .%
b11000011 .%
b11000100 .%
b11000101 .%
b11000110 .%
b11000111 .%
b11001000 .%
b11001001 .%
b11001010 .%
b11001011 .%
b11001100 .%
b11001101 .%
b11001110 .%
b11001111 .%
b11010000 .%
b11010001 .%
b11010010 .%
b11010011 .%
b11010100 .%
b11010101 .%
b11010110 .%
b11010111 .%
b11011000 .%
b11011001 .%
b11011010 .%
b11011011 .%
b11011100 .%
b11011101 .%
b11011110 .%
b11011111 .%
b11100000 .%
b11100001 .%
b11100010 .%
b11100011 .%
b11100100 .%
b11100101 .%
b11100110 .%
b11100111 .%
b11101000 .%
b11101001 .%
b11101010 .%
b11101011 .%
b11101100 .%
b11101101 .%
b11101110 .%
b11101111 .%
b11110000 .%
b11110001 .%
b11110010 .%
b11110011 .%
b11110100 .%
b11110101 .%
b11110110 .%
b11110111 .%
b11111000 .%
b11111001 .%
b11111010 .%
b11111011 .%
b11111100 .%
b11111101 .%
b11111110 .%
b11111111 .%
b100000000 .%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
b0 4%
b1 4%
b10 4%
b11 4%
b100 4%
b101 4%
b110 4%
b111 4%
b1000 4%
b1001 4%
b1010 4%
b1011 4%
b1100 4%
b1101 4%
b1110 4%
b1111 4%
b10000 4%
b10001 4%
b10010 4%
b10011 4%
b10100 4%
b10101 4%
b10110 4%
b10111 4%
b11000 4%
b11001 4%
b11010 4%
b11011 4%
b11100 4%
b11101 4%
b11110 4%
b11111 4%
b100000 4%
b100001 4%
b100010 4%
b100011 4%
b100100 4%
b100101 4%
b100110 4%
b100111 4%
b101000 4%
b101001 4%
b101010 4%
b101011 4%
b101100 4%
b101101 4%
b101110 4%
b101111 4%
b110000 4%
b110001 4%
b110010 4%
b110011 4%
b110100 4%
b110101 4%
b110110 4%
b110111 4%
b111000 4%
b111001 4%
b111010 4%
b111011 4%
b111100 4%
b111101 4%
b111110 4%
b111111 4%
b1000000 4%
b1000001 4%
b1000010 4%
b1000011 4%
b1000100 4%
b1000101 4%
b1000110 4%
b1000111 4%
b1001000 4%
b1001001 4%
b1001010 4%
b1001011 4%
b1001100 4%
b1001101 4%
b1001110 4%
b1001111 4%
b1010000 4%
b1010001 4%
b1010010 4%
b1010011 4%
b1010100 4%
b1010101 4%
b1010110 4%
b1010111 4%
b1011000 4%
b1011001 4%
b1011010 4%
b1011011 4%
b1011100 4%
b1011101 4%
b1011110 4%
b1011111 4%
b1100000 4%
b1100001 4%
b1100010 4%
b1100011 4%
b1100100 4%
b1100101 4%
b1100110 4%
b1100111 4%
b1101000 4%
b1101001 4%
b1101010 4%
b1101011 4%
b1101100 4%
b1101101 4%
b1101110 4%
b1101111 4%
b1110000 4%
b1110001 4%
b1110010 4%
b1110011 4%
b1110100 4%
b1110101 4%
b1110110 4%
b1110111 4%
b1111000 4%
b1111001 4%
b1111010 4%
b1111011 4%
b1111100 4%
b1111101 4%
b1111110 4%
b1111111 4%
b10000000 4%
b10000001 4%
b10000010 4%
b10000011 4%
b10000100 4%
b10000101 4%
b10000110 4%
b10000111 4%
b10001000 4%
b10001001 4%
b10001010 4%
b10001011 4%
b10001100 4%
b10001101 4%
b10001110 4%
b10001111 4%
b10010000 4%
b10010001 4%
b10010010 4%
b10010011 4%
b10010100 4%
b10010101 4%
b10010110 4%
b10010111 4%
b10011000 4%
b10011001 4%
b10011010 4%
b10011011 4%
b10011100 4%
b10011101 4%
b10011110 4%
b10011111 4%
b10100000 4%
b10100001 4%
b10100010 4%
b10100011 4%
b10100100 4%
b10100101 4%
b10100110 4%
b10100111 4%
b10101000 4%
b10101001 4%
b10101010 4%
b10101011 4%
b10101100 4%
b10101101 4%
b10101110 4%
b10101111 4%
b10110000 4%
b10110001 4%
b10110010 4%
b10110011 4%
b10110100 4%
b10110101 4%
b10110110 4%
b10110111 4%
b10111000 4%
b10111001 4%
b10111010 4%
b10111011 4%
b10111100 4%
b10111101 4%
b10111110 4%
b10111111 4%
b11000000 4%
b11000001 4%
b11000010 4%
b11000011 4%
b11000100 4%
b11000101 4%
b11000110 4%
b11000111 4%
b11001000 4%
b11001001 4%
b11001010 4%
b11001011 4%
b11001100 4%
b11001101 4%
b11001110 4%
b11001111 4%
b11010000 4%
b11010001 4%
b11010010 4%
b11010011 4%
b11010100 4%
b11010101 4%
b11010110 4%
b11010111 4%
b11011000 4%
b11011001 4%
b11011010 4%
b11011011 4%
b11011100 4%
b11011101 4%
b11011110 4%
b11011111 4%
b11100000 4%
b11100001 4%
b11100010 4%
b11100011 4%
b11100100 4%
b11100101 4%
b11100110 4%
b11100111 4%
b11101000 4%
b11101001 4%
b11101010 4%
b11101011 4%
b11101100 4%
b11101101 4%
b11101110 4%
b11101111 4%
b11110000 4%
b11110001 4%
b11110010 4%
b11110011 4%
b11110100 4%
b11110101 4%
b11110110 4%
b11110111 4%
b11111000 4%
b11111001 4%
b11111010 4%
b11111011 4%
b11111100 4%
b11111101 4%
b11111110 4%
b11111111 4%
b100000000 4%
b0 6%
b1 6%
b10 6%
b11 6%
b100 6%
b101 6%
b110 6%
b111 6%
b1000 6%
b1001 6%
b1010 6%
b1011 6%
b1100 6%
b1101 6%
b1110 6%
b1111 6%
b10000 6%
b10001 6%
b10010 6%
b10011 6%
b10100 6%
b10101 6%
b10110 6%
b10111 6%
b11000 6%
b11001 6%
b11010 6%
b11011 6%
b11100 6%
b11101 6%
b11110 6%
b11111 6%
b100000 6%
b100001 6%
b100010 6%
b100011 6%
b100100 6%
b100101 6%
b100110 6%
b100111 6%
b101000 6%
b101001 6%
b101010 6%
b101011 6%
b101100 6%
b101101 6%
b101110 6%
b101111 6%
b110000 6%
b110001 6%
b110010 6%
b110011 6%
b110100 6%
b110101 6%
b110110 6%
b110111 6%
b111000 6%
b111001 6%
b111010 6%
b111011 6%
b111100 6%
b111101 6%
b111110 6%
b111111 6%
b1000000 6%
b1000001 6%
b1000010 6%
b1000011 6%
b1000100 6%
b1000101 6%
b1000110 6%
b1000111 6%
b1001000 6%
b1001001 6%
b1001010 6%
b1001011 6%
b1001100 6%
b1001101 6%
b1001110 6%
b1001111 6%
b1010000 6%
b1010001 6%
b1010010 6%
b1010011 6%
b1010100 6%
b1010101 6%
b1010110 6%
b1010111 6%
b1011000 6%
b1011001 6%
b1011010 6%
b1011011 6%
b1011100 6%
b1011101 6%
b1011110 6%
b1011111 6%
b1100000 6%
b1100001 6%
b1100010 6%
b1100011 6%
b1100100 6%
b1100101 6%
b1100110 6%
b1100111 6%
b1101000 6%
b1101001 6%
b1101010 6%
b1101011 6%
b1101100 6%
b1101101 6%
b1101110 6%
b1101111 6%
b1110000 6%
b1110001 6%
b1110010 6%
b1110011 6%
b1110100 6%
b1110101 6%
b1110110 6%
b1110111 6%
b1111000 6%
b1111001 6%
b1111010 6%
b1111011 6%
b1111100 6%
b1111101 6%
b1111110 6%
b1111111 6%
b10000000 6%
b10000001 6%
b10000010 6%
b10000011 6%
b10000100 6%
b10000101 6%
b10000110 6%
b10000111 6%
b10001000 6%
b10001001 6%
b10001010 6%
b10001011 6%
b10001100 6%
b10001101 6%
b10001110 6%
b10001111 6%
b10010000 6%
b10010001 6%
b10010010 6%
b10010011 6%
b10010100 6%
b10010101 6%
b10010110 6%
b10010111 6%
b10011000 6%
b10011001 6%
b10011010 6%
b10011011 6%
b10011100 6%
b10011101 6%
b10011110 6%
b10011111 6%
b10100000 6%
b10100001 6%
b10100010 6%
b10100011 6%
b10100100 6%
b10100101 6%
b10100110 6%
b10100111 6%
b10101000 6%
b10101001 6%
b10101010 6%
b10101011 6%
b10101100 6%
b10101101 6%
b10101110 6%
b10101111 6%
b10110000 6%
b10110001 6%
b10110010 6%
b10110011 6%
b10110100 6%
b10110101 6%
b10110110 6%
b10110111 6%
b10111000 6%
b10111001 6%
b10111010 6%
b10111011 6%
b10111100 6%
b10111101 6%
b10111110 6%
b10111111 6%
b11000000 6%
b11000001 6%
b11000010 6%
b11000011 6%
b11000100 6%
b11000101 6%
b11000110 6%
b11000111 6%
b11001000 6%
b11001001 6%
b11001010 6%
b11001011 6%
b11001100 6%
b11001101 6%
b11001110 6%
b11001111 6%
b11010000 6%
b11010001 6%
b11010010 6%
b11010011 6%
b11010100 6%
b11010101 6%
b11010110 6%
b11010111 6%
b11011000 6%
b11011001 6%
b11011010 6%
b11011011 6%
b11011100 6%
b11011101 6%
b11011110 6%
b11011111 6%
b11100000 6%
b11100001 6%
b11100010 6%
b11100011 6%
b11100100 6%
b11100101 6%
b11100110 6%
b11100111 6%
b11101000 6%
b11101001 6%
b11101010 6%
b11101011 6%
b11101100 6%
b11101101 6%
b11101110 6%
b11101111 6%
b11110000 6%
b11110001 6%
b11110010 6%
b11110011 6%
b11110100 6%
b11110101 6%
b11110110 6%
b11110111 6%
b11111000 6%
b11111001 6%
b11111010 6%
b11111011 6%
b11111100 6%
b11111101 6%
b11111110 6%
b11111111 6%
b100000000 6%
b11 #!
#201
0"!
09
0~
1T#
1u$
1e!
1d!
0y+
1f!
1=+
0=+
#250
0!!
0x+
08
0}
#287
16
b101011100 3
b11000 4
b100 W
b11 S
b1 O
1u
1t
1c+
1b+
1a+
1_+
1]+
1G"
1F"
1z
1w+
1r+
1q+
1f
1e
1d
1b
1`
1K
1=+
b101 H+
1B+
b100 A+
1C+
0=+
1n!
1s!
1S+
1O+
1o!
1p!
1]#
1~$
1X#
1Z#
#300
1!!
1x+
18
1}
1T+
1P+
b100 #!
#301
1J+
1L+
1=+
b0 A+
0B+
0C+
b110 H+
1G+
b101011000 E+
12
0n!
0o!
19"
14"
13"
11"
1/"
0S+
1Q+
0s!
1V#
0X#
1(&
0p!
0]#
0~$
0V#
0Z#
1W&
1^#
1@#
1?#
1g!
1i!
b0 E+
0G+
b101 H+
b110 H+
1G+
b101011000 E+
#350
0!!
0x+
08
0}
#400
1!!
1x+
18
1}
1s&
1''
1&'
1$'
1"'
1:(
19(
17(
15(
1M)
1L)
1J)
1H)
1`*
1_*
1]*
1[*
1&+
0T+
1R+
b101 #!
#401
1K+
0L+
1,&
1z)
1|)
1~)
1!*
1g(
1i(
1k(
1l(
1T'
1V'
1X'
1Y'
1A&
1C&
1E&
1F&
1X&
1_&
1{%
1r&
1m&
1k&
1i&
1e&
1c&
1:%
1M"
1|
0(&
0W&
0{%
0M"
0|
1:"
b0 E+
0G+
1G+
b101011010 E+
16"
1"&
0!&
1'&
1j'
0:"
b0 E+
0G+
b111 H+
1G+
b101011010 E+
1S+
#450
0!!
0x+
08
0}
#500
1!!
1x+
18
1}
0s&
1G'
1B'
1@'
1>'
1:'
18'
1u&
1((
0&+
1%+
1*+
1T+
b110 #!
#501
1L+
10&
1+&
0,&
1k'
1Y&
1;%
1=%
1A%
1C%
1E%
1J%
0X&
1r'
1|%
0r&
0m&
0k&
0i&
0e&
0c&
1'"
1""
1~!
1|!
1x!
1v!
1'(
1%(
1"(
1~'
1}'
1|'
1{'
1z'
1v'
19%
1M"
1|
0'&
0j'
0|%
0M"
0|
1:"
b0 E+
0G+
1C+
1G+
b101011100 E+
06"
15"
1o!
1p!
1V#
1Z#
1[#
1\#
0g!
1#&
0"&
0^#
1J"
0G"
0F"
1E"
1C"
1A"
1="
1;"
1&&
1}(
0i!
0:"
0C+
b0 E+
0G+
b1000 H+
1C+
1G+
b101011100 E+
0S+
0Q+
0O+
1M+
#550
0!!
0x+
08
0}
#600
1!!
1x+
18
1}
0G'
0B'
0@'
0>'
0:'
08'
0u&
1w&
0((
1Z(
1X(
1U(
1S(
1R(
1Q(
1P(
1O(
1K(
1*(
1;)
0%+
1$+
0*+
1)+
1.+
0T+
0R+
0P+
1N+
b111 #!
#601
1I+
0J+
0K+
0L+
14&
1/&
00&
1*&
0+&
1~(
1l'
1K%
1O%
1P%
1Q%
1R%
1S%
1U%
1X%
1Z%
0k'
1Z&
0Y&
0;%
0=%
0A%
0C%
0E%
0J%
1')
1}%
0'(
0%(
0"(
0~'
0}'
0|'
0{'
0z'
0v'
1%"
1}!
1{!
1z!
0x!
1:)
19)
17)
10)
1.)
1-)
18%
1M"
1|
0&&
0}(
0}%
1H"
1B"
1@"
1?"
0="
0M"
0|
1:"
0C+
b0 E+
0G+
1C+
1G+
b101011110 E+
b10 A+
1t!
16"
0V#
1W#
1$&
0#&
1##
1|"
1z"
1x"
1t"
1r"
1%&
12*
0:"
b0 A+
0C+
b0 E+
0G+
b1001 H+
1C+
1G+
b101011110 E+
b10 A+
1S+
#650
0!!
0x+
08
0}
#700
1!!
1x+
18
1}
0w&
0Z(
0X(
0U(
0S(
0R(
0Q(
0P(
0O(
0K(
0*(
1,(
0;)
1m)
1l)
1j)
1c)
1a)
1`)
1=)
1N*
0$+
1#+
0)+
1(+
0.+
1-+
1T+
b1000 #!
#701
1L+
13&
04&
1.&
0/&
1)&
0*&
13*
1!)
1]%
1^%
1`%
1g%
1i%
1j%
0~(
1m'
0l'
0K%
0O%
0P%
0Q%
0R%
0S%
0U%
0X%
0Z%
0Z&
0_&
1:*
1~%
0:)
09)
07)
00)
0.)
0-)
1&"
0%"
1$"
0""
0~!
0}!
0|!
0z!
1y!
1x!
0v!
1L*
1K*
1J*
1I*
1G*
1E*
1D*
1A*
1@*
1?*
1>*
0:%
17%
1M"
1|
0%&
02*
0~%
1I"
0H"
1G"
0E"
0C"
0B"
0A"
0?"
1>"
1="
0;"
0M"
0|
1:"
b0 A+
0C+
b0 E+
0G+
b1010 H+
1C+
b100 A+
09"
0S+
1Q+
06"
05"
04"
03"
01"
0/"
0t!
1s!
1X#
0W#
0$&
1!&
13#
11#
1.#
1,#
1+#
1*#
1)#
1(#
1$#
0@#
0?#
0:"
b0 A+
0C+
b1001 H+
b1010 H+
1C+
b100 A+
#750
0!!
0x+
08
0}
#800
1!!
1x+
18
1}
0''
0&'
0$'
0"'
0:(
09(
07(
05(
0,(
0M)
0L)
0J)
0H)
0m)
0l)
0j)
0c)
0a)
0`)
0=)
1?)
0N*
0`*
0_*
0]*
0[*
1!+
1~*
1}*
1|*
1z*
1x*
1w*
1t*
1s*
1r*
1q*
1P*
0#+
0(+
1'+
0-+
1,+
0T+
1R+
b1001 #!
#801
1K+
0L+
12&
03&
1-&
0.&
0)&
14*
1k%
1l%
1m%
1n%
1q%
1r%
1t%
1v%
1w%
1x%
1y%
0z)
0|)
0~)
0!*
03*
1")
0!)
0]%
0^%
0`%
0g%
0i%
0j%
0g(
0i(
0k(
0l(
0m'
0T'
0V'
0X'
0Y'
0A&
0C&
0E&
0F&
0r'
0L*
0K*
0J*
0I*
0G*
0E*
0D*
0A*
0@*
0?*
0>*
0'"
1%"
1#"
1!"
1}!
1|!
0{!
1w!
1v!
09%
0J"
1H"
1F"
1D"
1B"
1A"
0@"
1<"
1;"
b0 A+
0C+
b1011 H+
1C+
1D+
b110 A+
1S+
1t!
1r!
0X#
1Y#
1C#
1B#
1@#
19#
17#
16#
#850
0!!
0x+
08
0}
#900
1!!
1x+
18
1}
0?)
0!+
0~*
0}*
0|*
0z*
0x*
0w*
0t*
0s*
0r*
0q*
0P*
1R*
0'+
0,+
1++
1T+
b1010 #!
#901
1L+
11&
02&
0-&
15*
04*
0k%
0l%
0m%
0n%
0q%
0r%
0t%
0v%
0w%
0x%
0y%
0")
0')
0&"
0%"
0$"
0#"
0!"
0}!
0|!
0y!
0x!
0w!
0v!
08%
0I"
0H"
0G"
0F"
0D"
0B"
0A"
0>"
0="
0<"
0;"
b0 A+
0C+
0D+
b1100 H+
1B+
1C+
b100 A+
0r!
0S+
0Q+
1O+
0t!
1n!
0[#
0\#
1]#
1~$
1X#
0Y#
1_#
1R#
1Q#
1P#
1O#
1M#
1K#
1J#
1G#
1F#
1E#
1D#
0C#
0B#
0@#
09#
07#
06#
1G"
1F"
1j!
1Q"
1l!
b0 A+
0B+
0C+
b1011 H+
b1100 H+
1B+
1C+
b100 A+
#950
0!!
0x+
08
0}
#1000
1!!
1x+
18
1}
0R*
0++
0T+
0R+
1P+
b1011 #!
#1001
1J+
0K+
0L+
01&
05*
0:*
07%
b0 A+
0B+
0C+
b0 H+
1<+
b100 A+
0n!
0o!
0O+
0M+
11
1O"
0p!
0]#
0~$
0