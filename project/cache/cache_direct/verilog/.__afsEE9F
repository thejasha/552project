$date
	Wed Dec  4 14:18:07 2024
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end

$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end

$scope task end_simulation $end
$upscope $end

$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end

$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module m0 $end
$var parameter 32 $! memtype $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 16 %! DataOut [15:0] $end
$var reg 1 &! Done $end
$var reg 1 '! Stall $end
$var reg 1 (! CacheHit $end
$var reg 1 )! err $end
$var wire 1 *! c0_tag_out [4] $end
$var wire 1 +! c0_tag_out [3] $end
$var wire 1 ,! c0_tag_out [2] $end
$var wire 1 -! c0_tag_out [1] $end
$var wire 1 .! c0_tag_out [0] $end
$var wire 1 /! c1_tag_out [4] $end
$var wire 1 0! c1_tag_out [3] $end
$var wire 1 1! c1_tag_out [2] $end
$var wire 1 2! c1_tag_out [1] $end
$var wire 1 3! c1_tag_out [0] $end
$var wire 1 4! chosen_tag_out [4] $end
$var wire 1 5! chosen_tag_out [3] $end
$var wire 1 6! chosen_tag_out [2] $end
$var wire 1 7! chosen_tag_out [1] $end
$var wire 1 8! chosen_tag_out [0] $end
$var wire 1 9! c0_data_out [15] $end
$var wire 1 :! c0_data_out [14] $end
$var wire 1 ;! c0_data_out [13] $end
$var wire 1 <! c0_data_out [12] $end
$var wire 1 =! c0_data_out [11] $end
$var wire 1 >! c0_data_out [10] $end
$var wire 1 ?! c0_data_out [9] $end
$var wire 1 @! c0_data_out [8] $end
$var wire 1 A! c0_data_out [7] $end
$var wire 1 B! c0_data_out [6] $end
$var wire 1 C! c0_data_out [5] $end
$var wire 1 D! c0_data_out [4] $end
$var wire 1 E! c0_data_out [3] $end
$var wire 1 F! c0_data_out [2] $end
$var wire 1 G! c0_data_out [1] $end
$var wire 1 H! c0_data_out [0] $end
$var wire 1 I! c1_data_out [15] $end
$var wire 1 J! c1_data_out [14] $end
$var wire 1 K! c1_data_out [13] $end
$var wire 1 L! c1_data_out [12] $end
$var wire 1 M! c1_data_out [11] $end
$var wire 1 N! c1_data_out [10] $end
$var wire 1 O! c1_data_out [9] $end
$var wire 1 P! c1_data_out [8] $end
$var wire 1 Q! c1_data_out [7] $end
$var wire 1 R! c1_data_out [6] $end
$var wire 1 S! c1_data_out [5] $end
$var wire 1 T! c1_data_out [4] $end
$var wire 1 U! c1_data_out [3] $end
$var wire 1 V! c1_data_out [2] $end
$var wire 1 W! c1_data_out [1] $end
$var wire 1 X! c1_data_out [0] $end
$var wire 1 Y! chosen_data_out [15] $end
$var wire 1 Z! chosen_data_out [14] $end
$var wire 1 [! chosen_data_out [13] $end
$var wire 1 \! chosen_data_out [12] $end
$var wire 1 ]! chosen_data_out [11] $end
$var wire 1 ^! chosen_data_out [10] $end
$var wire 1 _! chosen_data_out [9] $end
$var wire 1 `! chosen_data_out [8] $end
$var wire 1 a! chosen_data_out [7] $end
$var wire 1 b! chosen_data_out [6] $end
$var wire 1 c! chosen_data_out [5] $end
$var wire 1 d! chosen_data_out [4] $end
$var wire 1 e! chosen_data_out [3] $end
$var wire 1 f! chosen_data_out [2] $end
$var wire 1 g! chosen_data_out [1] $end
$var wire 1 h! chosen_data_out [0] $end
$var wire 1 i! c0_hit $end
$var wire 1 j! c1_hit $end
$var wire 1 k! cache_hit $end
$var wire 1 l! c0_dirty $end
$var wire 1 m! c1_dirty $end
$var wire 1 n! chosen_dirty $end
$var wire 1 o! c0_valid $end
$var wire 1 p! c1_valid $end
$var wire 1 q! chosen_valid $end
$var wire 1 r! enable_signal $end
$var wire 1 s! comp_signal $end
$var wire 1 t! write_signal $end
$var wire 1 u! c0_write_signal $end
$var wire 1 v! c1_write_signal $end
$var wire 1 w! valid_in_signal $end
$var wire 1 x! offset_signal [2] $end
$var wire 1 y! offset_signal [1] $end
$var wire 1 z! offset_signal [0] $end
$var wire 1 {! m_data_out [15] $end
$var wire 1 |! m_data_out [14] $end
$var wire 1 }! m_data_out [13] $end
$var wire 1 ~! m_data_out [12] $end
$var wire 1 !" m_data_out [11] $end
$var wire 1 "" m_data_out [10] $end
$var wire 1 #" m_data_out [9] $end
$var wire 1 $" m_data_out [8] $end
$var wire 1 %" m_data_out [7] $end
$var wire 1 &" m_data_out [6] $end
$var wire 1 '" m_data_out [5] $end
$var wire 1 (" m_data_out [4] $end
$var wire 1 )" m_data_out [3] $end
$var wire 1 *" m_data_out [2] $end
$var wire 1 +" m_data_out [1] $end
$var wire 1 ," m_data_out [0] $end
$var wire 1 -" mem_addr [15] $end
$var wire 1 ." mem_addr [14] $end
$var wire 1 /" mem_addr [13] $end
$var wire 1 0" mem_addr [12] $end
$var wire 1 1" mem_addr [11] $end
$var wire 1 2" mem_addr [10] $end
$var wire 1 3" mem_addr [9] $end
$var wire 1 4" mem_addr [8] $end
$var wire 1 5" mem_addr [7] $end
$var wire 1 6" mem_addr [6] $end
$var wire 1 7" mem_addr [5] $end
$var wire 1 8" mem_addr [4] $end
$var wire 1 9" mem_addr [3] $end
$var wire 1 :" mem_addr [2] $end
$var wire 1 ;" mem_addr [1] $end
$var wire 1 <" mem_addr [0] $end
$var wire 1 =" mem_wr $end
$var wire 1 >" mem_rd $end
$var wire 1 ?" stall_mem $end
$var wire 1 @" cache_data_in [15] $end
$var wire 1 A" cache_data_in [14] $end
$var wire 1 B" cache_data_in [13] $end
$var wire 1 C" cache_data_in [12] $end
$var wire 1 D" cache_data_in [11] $end
$var wire 1 E" cache_data_in [10] $end
$var wire 1 F" cache_data_in [9] $end
$var wire 1 G" cache_data_in [8] $end
$var wire 1 H" cache_data_in [7] $end
$var wire 1 I" cache_data_in [6] $end
$var wire 1 J" cache_data_in [5] $end
$var wire 1 K" cache_data_in [4] $end
$var wire 1 L" cache_data_in [3] $end
$var wire 1 M" cache_data_in [2] $end
$var wire 1 N" cache_data_in [1] $end
$var wire 1 O" cache_data_in [0] $end
$var wire 1 P" err_c0 $end
$var wire 1 Q" err_c1 $end
$var wire 1 R" err_mem $end
$var wire 1 S" err_fsm $end
$var wire 1 T" victimway_in $end
$var wire 1 U" victimway_out $end
$var wire 1 V" victim_line_sel $end
$var wire 1 W" selected_way $end
$var wire 1 X" Done_wire $end
$var wire 1 Y" Stall_wire $end
$var wire 1 Z" CacheHit_wire $end
$var wire 1 [" err_wire $end

$scope module c0 $end
$var parameter 32 \" cache_id $end
$var wire 1 r! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 x! offset [2] $end
$var wire 1 y! offset [1] $end
$var wire 1 z! offset [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 s! comp $end
$var wire 1 u! write $end
$var wire 1 w! valid_in $end
$var wire 1 *! tag_out [4] $end
$var wire 1 +! tag_out [3] $end
$var wire 1 ,! tag_out [2] $end
$var wire 1 -! tag_out [1] $end
$var wire 1 .! tag_out [0] $end
$var wire 1 9! data_out [15] $end
$var wire 1 :! data_out [14] $end
$var wire 1 ;! data_out [13] $end
$var wire 1 <! data_out [12] $end
$var wire 1 =! data_out [11] $end
$var wire 1 >! data_out [10] $end
$var wire 1 ?! data_out [9] $end
$var wire 1 @! data_out [8] $end
$var wire 1 A! data_out [7] $end
$var wire 1 B! data_out [6] $end
$var wire 1 C! data_out [5] $end
$var wire 1 D! data_out [4] $end
$var wire 1 E! data_out [3] $end
$var wire 1 F! data_out [2] $end
$var wire 1 G! data_out [1] $end
$var wire 1 H! data_out [0] $end
$var wire 1 i! hit $end
$var wire 1 l! dirty $end
$var wire 1 o! valid $end
$var wire 1 P" err $end
$var wire 1 ]" ram0_id [4] $end
$var wire 1 ^" ram0_id [3] $end
$var wire 1 _" ram0_id [2] $end
$var wire 1 `" ram0_id [1] $end
$var wire 1 a" ram0_id [0] $end
$var wire 1 b" ram1_id [4] $end
$var wire 1 c" ram1_id [3] $end
$var wire 1 d" ram1_id [2] $end
$var wire 1 e" ram1_id [1] $end
$var wire 1 f" ram1_id [0] $end
$var wire 1 g" ram2_id [4] $end
$var wire 1 h" ram2_id [3] $end
$var wire 1 i" ram2_id [2] $end
$var wire 1 j" ram2_id [1] $end
$var wire 1 k" ram2_id [0] $end
$var wire 1 l" ram3_id [4] $end
$var wire 1 m" ram3_id [3] $end
$var wire 1 n" ram3_id [2] $end
$var wire 1 o" ram3_id [1] $end
$var wire 1 p" ram3_id [0] $end
$var wire 1 q" ram4_id [4] $end
$var wire 1 r" ram4_id [3] $end
$var wire 1 s" ram4_id [2] $end
$var wire 1 t" ram4_id [1] $end
$var wire 1 u" ram4_id [0] $end
$var wire 1 v" ram5_id [4] $end
$var wire 1 w" ram5_id [3] $end
$var wire 1 x" ram5_id [2] $end
$var wire 1 y" ram5_id [1] $end
$var wire 1 z" ram5_id [0] $end
$var wire 1 {" w0 [15] $end
$var wire 1 |" w0 [14] $end
$var wire 1 }" w0 [13] $end
$var wire 1 ~" w0 [12] $end
$var wire 1 !# w0 [11] $end
$var wire 1 "# w0 [10] $end
$var wire 1 ## w0 [9] $end
$var wire 1 $# w0 [8] $end
$var wire 1 %# w0 [7] $end
$var wire 1 &# w0 [6] $end
$var wire 1 '# w0 [5] $end
$var wire 1 (# w0 [4] $end
$var wire 1 )# w0 [3] $end
$var wire 1 *# w0 [2] $end
$var wire 1 +# w0 [1] $end
$var wire 1 ,# w0 [0] $end
$var wire 1 -# w1 [15] $end
$var wire 1 .# w1 [14] $end
$var wire 1 /# w1 [13] $end
$var wire 1 0# w1 [12] $end
$var wire 1 1# w1 [11] $end
$var wire 1 2# w1 [10] $end
$var wire 1 3# w1 [9] $end
$var wire 1 4# w1 [8] $end
$var wire 1 5# w1 [7] $end
$var wire 1 6# w1 [6] $end
$var wire 1 7# w1 [5] $end
$var wire 1 8# w1 [4] $end
$var wire 1 9# w1 [3] $end
$var wire 1 :# w1 [2] $end
$var wire 1 ;# w1 [1] $end
$var wire 1 <# w1 [0] $end
$var wire 1 =# w2 [15] $end
$var wire 1 ># w2 [14] $end
$var wire 1 ?# w2 [13] $end
$var wire 1 @# w2 [12] $end
$var wire 1 A# w2 [11] $end
$var wire 1 B# w2 [10] $end
$var wire 1 C# w2 [9] $end
$var wire 1 D# w2 [8] $end
$var wire 1 E# w2 [7] $end
$var wire 1 F# w2 [6] $end
$var wire 1 G# w2 [5] $end
$var wire 1 H# w2 [4] $end
$var wire 1 I# w2 [3] $end
$var wire 1 J# w2 [2] $end
$var wire 1 K# w2 [1] $end
$var wire 1 L# w2 [0] $end
$var wire 1 M# w3 [15] $end
$var wire 1 N# w3 [14] $end
$var wire 1 O# w3 [13] $end
$var wire 1 P# w3 [12] $end
$var wire 1 Q# w3 [11] $end
$var wire 1 R# w3 [10] $end
$var wire 1 S# w3 [9] $end
$var wire 1 T# w3 [8] $end
$var wire 1 U# w3 [7] $end
$var wire 1 V# w3 [6] $end
$var wire 1 W# w3 [5] $end
$var wire 1 X# w3 [4] $end
$var wire 1 Y# w3 [3] $end
$var wire 1 Z# w3 [2] $end
$var wire 1 [# w3 [1] $end
$var wire 1 \# w3 [0] $end
$var wire 1 ]# go $end
$var wire 1 ^# match $end
$var wire 1 _# wr_word0 $end
$var wire 1 `# wr_word1 $end
$var wire 1 a# wr_word2 $end
$var wire 1 b# wr_word3 $end
$var wire 1 c# wr_dirty $end
$var wire 1 d# wr_tag $end
$var wire 1 e# wr_valid $end
$var wire 1 f# dirty_in $end
$var wire 1 g# dirtybit $end
$var wire 1 h# validbit $end

$scope module mem_w0 $end
$var parameter 32 i# Size $end
$var wire 1 {" data_out [15] $end
$var wire 1 |" data_out [14] $end
$var wire 1 }" data_out [13] $end
$var wire 1 ~" data_out [12] $end
$var wire 1 !# data_out [11] $end
$var wire 1 "# data_out [10] $end
$var wire 1 ## data_out [9] $end
$var wire 1 $# data_out [8] $end
$var wire 1 %# data_out [7] $end
$var wire 1 &# data_out [6] $end
$var wire 1 '# data_out [5] $end
$var wire 1 (# data_out [4] $end
$var wire 1 )# data_out [3] $end
$var wire 1 *# data_out [2] $end
$var wire 1 +# data_out [1] $end
$var wire 1 ,# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 _# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ]" file_id [4] $end
$var wire 1 ^" file_id [3] $end
$var wire 1 _" file_id [2] $end
$var wire 1 `" file_id [1] $end
$var wire 1 a" file_id [0] $end
$var integer 32 j# mcd $end
$var integer 32 k# i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 l# Size $end
$var wire 1 -# data_out [15] $end
$var wire 1 .# data_out [14] $end
$var wire 1 /# data_out [13] $end
$var wire 1 0# data_out [12] $end
$var wire 1 1# data_out [11] $end
$var wire 1 2# data_out [10] $end
$var wire 1 3# data_out [9] $end
$var wire 1 4# data_out [8] $end
$var wire 1 5# data_out [7] $end
$var wire 1 6# data_out [6] $end
$var wire 1 7# data_out [5] $end
$var wire 1 8# data_out [4] $end
$var wire 1 9# data_out [3] $end
$var wire 1 :# data_out [2] $end
$var wire 1 ;# data_out [1] $end
$var wire 1 <# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 `# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 b" file_id [4] $end
$var wire 1 c" file_id [3] $end
$var wire 1 d" file_id [2] $end
$var wire 1 e" file_id [1] $end
$var wire 1 f" file_id [0] $end
$var integer 32 m# mcd $end
$var integer 32 n# i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 o# Size $end
$var wire 1 =# data_out [15] $end
$var wire 1 ># data_out [14] $end
$var wire 1 ?# data_out [13] $end
$var wire 1 @# data_out [12] $end
$var wire 1 A# data_out [11] $end
$var wire 1 B# data_out [10] $end
$var wire 1 C# data_out [9] $end
$var wire 1 D# data_out [8] $end
$var wire 1 E# data_out [7] $end
$var wire 1 F# data_out [6] $end
$var wire 1 G# data_out [5] $end
$var wire 1 H# data_out [4] $end
$var wire 1 I# data_out [3] $end
$var wire 1 J# data_out [2] $end
$var wire 1 K# data_out [1] $end
$var wire 1 L# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 a# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 g" file_id [4] $end
$var wire 1 h" file_id [3] $end
$var wire 1 i" file_id [2] $end
$var wire 1 j" file_id [1] $end
$var wire 1 k" file_id [0] $end
$var integer 32 p# mcd $end
$var integer 32 q# i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 r# Size $end
$var wire 1 M# data_out [15] $end
$var wire 1 N# data_out [14] $end
$var wire 1 O# data_out [13] $end
$var wire 1 P# data_out [12] $end
$var wire 1 Q# data_out [11] $end
$var wire 1 R# data_out [10] $end
$var wire 1 S# data_out [9] $end
$var wire 1 T# data_out [8] $end
$var wire 1 U# data_out [7] $end
$var wire 1 V# data_out [6] $end
$var wire 1 W# data_out [5] $end
$var wire 1 X# data_out [4] $end
$var wire 1 Y# data_out [3] $end
$var wire 1 Z# data_out [2] $end
$var wire 1 [# data_out [1] $end
$var wire 1 \# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 b# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 l" file_id [4] $end
$var wire 1 m" file_id [3] $end
$var wire 1 n" file_id [2] $end
$var wire 1 o" file_id [1] $end
$var wire 1 p" file_id [0] $end
$var integer 32 s# mcd $end
$var integer 32 t# i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 u# Size $end
$var wire 1 *! data_out [4] $end
$var wire 1 +! data_out [3] $end
$var wire 1 ,! data_out [2] $end
$var wire 1 -! data_out [1] $end
$var wire 1 .! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 d# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 q" file_id [4] $end
$var wire 1 r" file_id [3] $end
$var wire 1 s" file_id [2] $end
$var wire 1 t" file_id [1] $end
$var wire 1 u" file_id [0] $end
$var integer 32 v# mcd $end
$var integer 32 w# i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 x# Size $end
$var wire 1 g# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 f# data_in [0] $end
$var wire 1 c# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 v" file_id [4] $end
$var wire 1 w" file_id [3] $end
$var wire 1 x" file_id [2] $end
$var wire 1 y" file_id [1] $end
$var wire 1 z" file_id [0] $end
$var integer 32 y# mcd $end
$var integer 32 z# i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 h# data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 w! data_in $end
$var wire 1 e# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ]" file_id [4] $end
$var wire 1 ^" file_id [3] $end
$var wire 1 _" file_id [2] $end
$var wire 1 `" file_id [1] $end
$var wire 1 a" file_id [0] $end
$var integer 32 {# mcd $end
$var integer 32 |# i $end
$upscope $end
$upscope $end

$scope module c1 $end
$var parameter 32 }# cache_id $end
$var wire 1 r! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 x! offset [2] $end
$var wire 1 y! offset [1] $end
$var wire 1 z! offset [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 s! comp $end
$var wire 1 v! write $end
$var wire 1 w! valid_in $end
$var wire 1 /! tag_out [4] $end
$var wire 1 0! tag_out [3] $end
$var wire 1 1! tag_out [2] $end
$var wire 1 2! tag_out [1] $end
$var wire 1 3! tag_out [0] $end
$var wire 1 I! data_out [15] $end
$var wire 1 J! data_out [14] $end
$var wire 1 K! data_out [13] $end
$var wire 1 L! data_out [12] $end
$var wire 1 M! data_out [11] $end
$var wire 1 N! data_out [10] $end
$var wire 1 O! data_out [9] $end
$var wire 1 P! data_out [8] $end
$var wire 1 Q! data_out [7] $end
$var wire 1 R! data_out [6] $end
$var wire 1 S! data_out [5] $end
$var wire 1 T! data_out [4] $end
$var wire 1 U! data_out [3] $end
$var wire 1 V! data_out [2] $end
$var wire 1 W! data_out [1] $end
$var wire 1 X! data_out [0] $end
$var wire 1 j! hit $end
$var wire 1 m! dirty $end
$var wire 1 p! valid $end
$var wire 1 Q" err $end
$var wire 1 ~# ram0_id [4] $end
$var wire 1 !$ ram0_id [3] $end
$var wire 1 "$ ram0_id [2] $end
$var wire 1 #$ ram0_id [1] $end
$var wire 1 $$ ram0_id [0] $end
$var wire 1 %$ ram1_id [4] $end
$var wire 1 &$ ram1_id [3] $end
$var wire 1 '$ ram1_id [2] $end
$var wire 1 ($ ram1_id [1] $end
$var wire 1 )$ ram1_id [0] $end
$var wire 1 *$ ram2_id [4] $end
$var wire 1 +$ ram2_id [3] $end
$var wire 1 ,$ ram2_id [2] $end
$var wire 1 -$ ram2_id [1] $end
$var wire 1 .$ ram2_id [0] $end
$var wire 1 /$ ram3_id [4] $end
$var wire 1 0$ ram3_id [3] $end
$var wire 1 1$ ram3_id [2] $end
$var wire 1 2$ ram3_id [1] $end
$var wire 1 3$ ram3_id [0] $end
$var wire 1 4$ ram4_id [4] $end
$var wire 1 5$ ram4_id [3] $end
$var wire 1 6$ ram4_id [2] $end
$var wire 1 7$ ram4_id [1] $end
$var wire 1 8$ ram4_id [0] $end
$var wire 1 9$ ram5_id [4] $end
$var wire 1 :$ ram5_id [3] $end
$var wire 1 ;$ ram5_id [2] $end
$var wire 1 <$ ram5_id [1] $end
$var wire 1 =$ ram5_id [0] $end
$var wire 1 >$ w0 [15] $end
$var wire 1 ?$ w0 [14] $end
$var wire 1 @$ w0 [13] $end
$var wire 1 A$ w0 [12] $end
$var wire 1 B$ w0 [11] $end
$var wire 1 C$ w0 [10] $end
$var wire 1 D$ w0 [9] $end
$var wire 1 E$ w0 [8] $end
$var wire 1 F$ w0 [7] $end
$var wire 1 G$ w0 [6] $end
$var wire 1 H$ w0 [5] $end
$var wire 1 I$ w0 [4] $end
$var wire 1 J$ w0 [3] $end
$var wire 1 K$ w0 [2] $end
$var wire 1 L$ w0 [1] $end
$var wire 1 M$ w0 [0] $end
$var wire 1 N$ w1 [15] $end
$var wire 1 O$ w1 [14] $end
$var wire 1 P$ w1 [13] $end
$var wire 1 Q$ w1 [12] $end
$var wire 1 R$ w1 [11] $end
$var wire 1 S$ w1 [10] $end
$var wire 1 T$ w1 [9] $end
$var wire 1 U$ w1 [8] $end
$var wire 1 V$ w1 [7] $end
$var wire 1 W$ w1 [6] $end
$var wire 1 X$ w1 [5] $end
$var wire 1 Y$ w1 [4] $end
$var wire 1 Z$ w1 [3] $end
$var wire 1 [$ w1 [2] $end
$var wire 1 \$ w1 [1] $end
$var wire 1 ]$ w1 [0] $end
$var wire 1 ^$ w2 [15] $end
$var wire 1 _$ w2 [14] $end
$var wire 1 `$ w2 [13] $end
$var wire 1 a$ w2 [12] $end
$var wire 1 b$ w2 [11] $end
$var wire 1 c$ w2 [10] $end
$var wire 1 d$ w2 [9] $end
$var wire 1 e$ w2 [8] $end
$var wire 1 f$ w2 [7] $end
$var wire 1 g$ w2 [6] $end
$var wire 1 h$ w2 [5] $end
$var wire 1 i$ w2 [4] $end
$var wire 1 j$ w2 [3] $end
$var wire 1 k$ w2 [2] $end
$var wire 1 l$ w2 [1] $end
$var wire 1 m$ w2 [0] $end
$var wire 1 n$ w3 [15] $end
$var wire 1 o$ w3 [14] $end
$var wire 1 p$ w3 [13] $end
$var wire 1 q$ w3 [12] $end
$var wire 1 r$ w3 [11] $end
$var wire 1 s$ w3 [10] $end
$var wire 1 t$ w3 [9] $end
$var wire 1 u$ w3 [8] $end
$var wire 1 v$ w3 [7] $end
$var wire 1 w$ w3 [6] $end
$var wire 1 x$ w3 [5] $end
$var wire 1 y$ w3 [4] $end
$var wire 1 z$ w3 [3] $end
$var wire 1 {$ w3 [2] $end
$var wire 1 |$ w3 [1] $end
$var wire 1 }$ w3 [0] $end
$var wire 1 ~$ go $end
$var wire 1 !% match $end
$var wire 1 "% wr_word0 $end
$var wire 1 #% wr_word1 $end
$var wire 1 $% wr_word2 $end
$var wire 1 %% wr_word3 $end
$var wire 1 &% wr_dirty $end
$var wire 1 '% wr_tag $end
$var wire 1 (% wr_valid $end
$var wire 1 )% dirty_in $end
$var wire 1 *% dirtybit $end
$var wire 1 +% validbit $end

$scope module mem_w0 $end
$var parameter 32 ,% Size $end
$var wire 1 >$ data_out [15] $end
$var wire 1 ?$ data_out [14] $end
$var wire 1 @$ data_out [13] $end
$var wire 1 A$ data_out [12] $end
$var wire 1 B$ data_out [11] $end
$var wire 1 C$ data_out [10] $end
$var wire 1 D$ data_out [9] $end
$var wire 1 E$ data_out [8] $end
$var wire 1 F$ data_out [7] $end
$var wire 1 G$ data_out [6] $end
$var wire 1 H$ data_out [5] $end
$var wire 1 I$ data_out [4] $end
$var wire 1 J$ data_out [3] $end
$var wire 1 K$ data_out [2] $end
$var wire 1 L$ data_out [1] $end
$var wire 1 M$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 "% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ~# file_id [4] $end
$var wire 1 !$ file_id [3] $end
$var wire 1 "$ file_id [2] $end
$var wire 1 #$ file_id [1] $end
$var wire 1 $$ file_id [0] $end
$var integer 32 -% mcd $end
$var integer 32 .% i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 /% Size $end
$var wire 1 N$ data_out [15] $end
$var wire 1 O$ data_out [14] $end
$var wire 1 P$ data_out [13] $end
$var wire 1 Q$ data_out [12] $end
$var wire 1 R$ data_out [11] $end
$var wire 1 S$ data_out [10] $end
$var wire 1 T$ data_out [9] $end
$var wire 1 U$ data_out [8] $end
$var wire 1 V$ data_out [7] $end
$var wire 1 W$ data_out [6] $end
$var wire 1 X$ data_out [5] $end
$var wire 1 Y$ data_out [4] $end
$var wire 1 Z$ data_out [3] $end
$var wire 1 [$ data_out [2] $end
$var wire 1 \$ data_out [1] $end
$var wire 1 ]$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 #% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 %$ file_id [4] $end
$var wire 1 &$ file_id [3] $end
$var wire 1 '$ file_id [2] $end
$var wire 1 ($ file_id [1] $end
$var wire 1 )$ file_id [0] $end
$var integer 32 0% mcd $end
$var integer 32 1% i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 2% Size $end
$var wire 1 ^$ data_out [15] $end
$var wire 1 _$ data_out [14] $end
$var wire 1 `$ data_out [13] $end
$var wire 1 a$ data_out [12] $end
$var wire 1 b$ data_out [11] $end
$var wire 1 c$ data_out [10] $end
$var wire 1 d$ data_out [9] $end
$var wire 1 e$ data_out [8] $end
$var wire 1 f$ data_out [7] $end
$var wire 1 g$ data_out [6] $end
$var wire 1 h$ data_out [5] $end
$var wire 1 i$ data_out [4] $end
$var wire 1 j$ data_out [3] $end
$var wire 1 k$ data_out [2] $end
$var wire 1 l$ data_out [1] $end
$var wire 1 m$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 $% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 *$ file_id [4] $end
$var wire 1 +$ file_id [3] $end
$var wire 1 ,$ file_id [2] $end
$var wire 1 -$ file_id [1] $end
$var wire 1 .$ file_id [0] $end
$var integer 32 3% mcd $end
$var integer 32 4% i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 5% Size $end
$var wire 1 n$ data_out [15] $end
$var wire 1 o$ data_out [14] $end
$var wire 1 p$ data_out [13] $end
$var wire 1 q$ data_out [12] $end
$var wire 1 r$ data_out [11] $end
$var wire 1 s$ data_out [10] $end
$var wire 1 t$ data_out [9] $end
$var wire 1 u$ data_out [8] $end
$var wire 1 v$ data_out [7] $end
$var wire 1 w$ data_out [6] $end
$var wire 1 x$ data_out [5] $end
$var wire 1 y$ data_out [4] $end
$var wire 1 z$ data_out [3] $end
$var wire 1 {$ data_out [2] $end
$var wire 1 |$ data_out [1] $end
$var wire 1 }$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 @" data_in [15] $end
$var wire 1 A" data_in [14] $end
$var wire 1 B" data_in [13] $end
$var wire 1 C" data_in [12] $end
$var wire 1 D" data_in [11] $end
$var wire 1 E" data_in [10] $end
$var wire 1 F" data_in [9] $end
$var wire 1 G" data_in [8] $end
$var wire 1 H" data_in [7] $end
$var wire 1 I" data_in [6] $end
$var wire 1 J" data_in [5] $end
$var wire 1 K" data_in [4] $end
$var wire 1 L" data_in [3] $end
$var wire 1 M" data_in [2] $end
$var wire 1 N" data_in [1] $end
$var wire 1 O" data_in [0] $end
$var wire 1 %% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 /$ file_id [4] $end
$var wire 1 0$ file_id [3] $end
$var wire 1 1$ file_id [2] $end
$var wire 1 2$ file_id [1] $end
$var wire 1 3$ file_id [0] $end
$var integer 32 6% mcd $end
$var integer 32 7% i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 8% Size $end
$var wire 1 /! data_out [4] $end
$var wire 1 0! data_out [3] $end
$var wire 1 1! data_out [2] $end
$var wire 1 2! data_out [1] $end
$var wire 1 3! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 '% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 4$ file_id [4] $end
$var wire 1 5$ file_id [3] $end
$var wire 1 6$ file_id [2] $end
$var wire 1 7$ file_id [1] $end
$var wire 1 8$ file_id [0] $end
$var integer 32 9% mcd $end
$var integer 32 :% i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 ;% Size $end
$var wire 1 *% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 )% data_in [0] $end
$var wire 1 &% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 9$ file_id [4] $end
$var wire 1 :$ file_id [3] $end
$var wire 1 ;$ file_id [2] $end
$var wire 1 <$ file_id [1] $end
$var wire 1 =$ file_id [0] $end
$var integer 32 <% mcd $end
$var integer 32 =% i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 +% data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 w! data_in $end
$var wire 1 (% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ~# file_id [4] $end
$var wire 1 !$ file_id [3] $end
$var wire 1 "$ file_id [2] $end
$var wire 1 #$ file_id [1] $end
$var wire 1 $$ file_id [0] $end
$var integer 32 >% mcd $end
$var integer 32 ?% i $end
$upscope $end
$upscope $end

$scope module mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 -" addr [15] $end
$var wire 1 ." addr [14] $end
$var wire 1 /" addr [13] $end
$var wire 1 0" addr [12] $end
$var wire 1 1" addr [11] $end
$var wire 1 2" addr [10] $end
$var wire 1 3" addr [9] $end
$var wire 1 4" addr [8] $end
$var wire 1 5" addr [7] $end
$var wire 1 6" addr [6] $end
$var wire 1 7" addr [5] $end
$var wire 1 8" addr [4] $end
$var wire 1 9" addr [3] $end
$var wire 1 :" addr [2] $end
$var wire 1 ;" addr [1] $end
$var wire 1 <" addr [0] $end
$var wire 1 Y! data_in [15] $end
$var wire 1 Z! data_in [14] $end
$var wire 1 [! data_in [13] $end
$var wire 1 \! data_in [12] $end
$var wire 1 ]! data_in [11] $end
$var wire 1 ^! data_in [10] $end
$var wire 1 _! data_in [9] $end
$var wire 1 `! data_in [8] $end
$var wire 1 a! data_in [7] $end
$var wire 1 b! data_in [6] $end
$var wire 1 c! data_in [5] $end
$var wire 1 d! data_in [4] $end
$var wire 1 e! data_in [3] $end
$var wire 1 f! data_in [2] $end
$var wire 1 g! data_in [1] $end
$var wire 1 h! data_in [0] $end
$var wire 1 =" wr $end
$var wire 1 >" rd $end
$var wire 1 {! data_out [15] $end
$var wire 1 |! data_out [14] $end
$var wire 1 }! data_out [13] $end
$var wire 1 ~! data_out [12] $end
$var wire 1 !" data_out [11] $end
$var wire 1 "" data_out [10] $end
$var wire 1 #" data_out [9] $end
$var wire 1 $" data_out [8] $end
$var wire 1 %" data_out [7] $end
$var wire 1 &" data_out [6] $end
$var wire 1 '" data_out [5] $end
$var wire 1 (" data_out [4] $end
$var wire 1 )" data_out [3] $end
$var wire 1 *" data_out [2] $end
$var wire 1 +" data_out [1] $end
$var wire 1 ," data_out [0] $end
$var wire 1 ?" stall $end
$var wire 1 @% busy [3] $end
$var wire 1 A% busy [2] $end
$var wire 1 B% busy [1] $end
$var wire 1 C% busy [0] $end
$var wire 1 R" err $end
$var wire 1 D% data0_out [15] $end
$var wire 1 E% data0_out [14] $end
$var wire 1 F% data0_out [13] $end
$var wire 1 G% data0_out [12] $end
$var wire 1 H% data0_out [11] $end
$var wire 1 I% data0_out [10] $end
$var wire 1 J% data0_out [9] $end
$var wire 1 K% data0_out [8] $end
$var wire 1 L% data0_out [7] $end
$var wire 1 M% data0_out [6] $end
$var wire 1 N% data0_out [5] $end
$var wire 1 O% data0_out [4] $end
$var wire 1 P% data0_out [3] $end
$var wire 1 Q% data0_out [2] $end
$var wire 1 R% data0_out [1] $end
$var wire 1 S% data0_out [0] $end
$var wire 1 T% data1_out [15] $end
$var wire 1 U% data1_out [14] $end
$var wire 1 V% data1_out [13] $end
$var wire 1 W% data1_out [12] $end
$var wire 1 X% data1_out [11] $end
$var wire 1 Y% data1_out [10] $end
$var wire 1 Z% data1_out [9] $end
$var wire 1 [% data1_out [8] $end
$var wire 1 \% data1_out [7] $end
$var wire 1 ]% data1_out [6] $end
$var wire 1 ^% data1_out [5] $end
$var wire 1 _% data1_out [4] $end
$var wire 1 `% data1_out [3] $end
$var wire 1 a% data1_out [2] $end
$var wire 1 b% data1_out [1] $end
$var wire 1 c% data1_out [0] $end
$var wire 1 d% data2_out [15] $end
$var wire 1 e% data2_out [14] $end
$var wire 1 f% data2_out [13] $end
$var wire 1 g% data2_out [12] $end
$var wire 1 h% data2_out [11] $end
$var wire 1 i% data2_out [10] $end
$var wire 1 j% data2_out [9] $end
$var wire 1 k% data2_out [8] $end
$var wire 1 l% data2_out [7] $end
$var wire 1 m% data2_out [6] $end
$var wire 1 n% data2_out [5] $end
$var wire 1 o% data2_out [4] $end
$var wire 1 p% data2_out [3] $end
$var wire 1 q% data2_out [2] $end
$var wire 1 r% data2_out [1] $end
$var wire 1 s% data2_out [0] $end
$var wire 1 t% data3_out [15] $end
$var wire 1 u% data3_out [14] $end
$var wire 1 v% data3_out [13] $end
$var wire 1 w% data3_out [12] $end
$var wire 1 x% data3_out [11] $end
$var wire 1 y% data3_out [10] $end
$var wire 1 z% data3_out [9] $end
$var wire 1 {% data3_out [8] $end
$var wire 1 |% data3_out [7] $end
$var wire 1 }% data3_out [6] $end
$var wire 1 ~% data3_out [5] $end
$var wire 1 !& data3_out [4] $end
$var wire 1 "& data3_out [3] $end
$var wire 1 #& data3_out [2] $end
$var wire 1 $& data3_out [1] $end
$var wire 1 %& data3_out [0] $end
$var wire 1 && err0 $end
$var wire 1 '& err1 $end
$var wire 1 (& err2 $end
$var wire 1 )& err3 $end
$var wire 1 *& sel0 $end
$var wire 1 +& sel1 $end
$var wire 1 ,& sel2 $end
$var wire 1 -& sel3 $end
$var wire 1 .& en [3] $end
$var wire 1 /& en [2] $end
$var wire 1 0& en [1] $end
$var wire 1 1& en [0] $end
$var wire 1 2& bsy0 [3] $end
$var wire 1 3& bsy0 [2] $end
$var wire 1 4& bsy0 [1] $end
$var wire 1 5& bsy0 [0] $end
$var wire 1 6& bsy1 [3] $end
$var wire 1 7& bsy1 [2] $end
$var wire 1 8& bsy1 [1] $end
$var wire 1 9& bsy1 [0] $end
$var wire 1 :& bsy2 [3] $end
$var wire 1 ;& bsy2 [2] $end
$var wire 1 <& bsy2 [1] $end
$var wire 1 =& bsy2 [0] $end

$scope module m0 $end
$var wire 1 D% data_out [15] $end
$var wire 1 E% data_out [14] $end
$var wire 1 F% data_out [13] $end
$var wire 1 G% data_out [12] $end
$var wire 1 H% data_out [11] $end
$var wire 1 I% data_out [10] $end
$var wire 1 J% data_out [9] $end
$var wire 1 K% data_out [8] $end
$var wire 1 L% data_out [7] $end
$var wire 1 M% data_out [6] $end
$var wire 1 N% data_out [5] $end
$var wire 1 O% data_out [4] $end
$var wire 1 P% data_out [3] $end
$var wire 1 Q% data_out [2] $end
$var wire 1 R% data_out [1] $end
$var wire 1 S% data_out [0] $end
$var wire 1 && err $end
$var wire 1 Y! data_in [15] $end
$var wire 1 Z! data_in [14] $end
$var wire 1 [! data_in [13] $end
$var wire 1 \! data_in [12] $end
$var wire 1 ]! data_in [11] $end
$var wire 1 ^! data_in [10] $end
$var wire 1 _! data_in [9] $end
$var wire 1 `! data_in [8] $end
$var wire 1 a! data_in [7] $end
$var wire 1 b! data_in [6] $end
$var wire 1 c! data_in [5] $end
$var wire 1 d! data_in [4] $end
$var wire 1 e! data_in [3] $end
$var wire 1 f! data_in [2] $end
$var wire 1 g! data_in [1] $end
$var wire 1 h! data_in [0] $end
$var wire 1 -" addr [12] $end
$var wire 1 ." addr [11] $end
$var wire 1 /" addr [10] $end
$var wire 1 0" addr [9] $end
$var wire 1 1" addr [8] $end
$var wire 1 2" addr [7] $end
$var wire 1 3" addr [6] $end
$var wire 1 4" addr [5] $end
$var wire 1 5" addr [4] $end
$var wire 1 6" addr [3] $end
$var wire 1 7" addr [2] $end
$var wire 1 8" addr [1] $end
$var wire 1 9" addr [0] $end
$var wire 1 =" wr $end
$var wire 1 >" rd $end
$var wire 1 1& enable $end
$var wire 1 { create_dump $end
$var wire 1 >& bank_id [1] $end
$var wire 1 ?& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @& loaded $end
$var reg 16 A& largest [15:0] $end
$var wire 1 B& addr_1c [13] $end
$var wire 1 C& addr_1c [12] $end
$var wire 1 D& addr_1c [11] $end
$var wire 1 E& addr_1c [10] $end
$var wire 1 F& addr_1c [9] $end
$var wire 1 G& addr_1c [8] $end
$var wire 1 H& addr_1c [7] $end
$var wire 1 I& addr_1c [6] $end
$var wire 1 J& addr_1c [5] $end
$var wire 1 K& addr_1c [4] $end
$var wire 1 L& addr_1c [3] $end
$var wire 1 M& addr_1c [2] $end
$var wire 1 N& addr_1c [1] $end
$var wire 1 O& addr_1c [0] $end
$var wire 1 P& data_in_1c [15] $end
$var wire 1 Q& data_in_1c [14] $end
$var wire 1 R& data_in_1c [13] $end
$var wire 1 S& data_in_1c [12] $end
$var wire 1 T& data_in_1c [11] $end
$var wire 1 U& data_in_1c [10] $end
$var wire 1 V& data_in_1c [9] $end
$var wire 1 W& data_in_1c [8] $end
$var wire 1 X& data_in_1c [7] $end
$var wire 1 Y& data_in_1c [6] $end
$var wire 1 Z& data_in_1c [5] $end
$var wire 1 [& data_in_1c [4] $end
$var wire 1 \& data_in_1c [3] $end
$var wire 1 ]& data_in_1c [2] $end
$var wire 1 ^& data_in_1c [1] $end
$var wire 1 _& data_in_1c [0] $end
$var wire 1 `& rd0 $end
$var wire 1 a& rd1 $end
$var wire 1 b& rd2 $end
$var wire 1 c& rd3 $end
$var wire 1 d& wr0 $end
$var wire 1 e& wr1 $end
$var wire 1 f& wr2 $end
$var wire 1 g& wr3 $end
$var wire 1 h& busy $end
$var integer 32 i& mcd $end
$var integer 32 j& largeout $end
$var integer 32 k& i $end
$var wire 1 l& data_out_1c [15] $end
$var wire 1 m& data_out_1c [14] $end
$var wire 1 n& data_out_1c [13] $end
$var wire 1 o& data_out_1c [12] $end
$var wire 1 p& data_out_1c [11] $end
$var wire 1 q& data_out_1c [10] $end
$var wire 1 r& data_out_1c [9] $end
$var wire 1 s& data_out_1c [8] $end
$var wire 1 t& data_out_1c [7] $end
$var wire 1 u& data_out_1c [6] $end
$var wire 1 v& data_out_1c [5] $end
$var wire 1 w& data_out_1c [4] $end
$var wire 1 x& data_out_1c [3] $end
$var wire 1 y& data_out_1c [2] $end
$var wire 1 z& data_out_1c [1] $end
$var wire 1 {& data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 a& q $end
$var wire 1 `& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |& state $end
$upscope $end

$scope module ff1 $end
$var wire 1 e& q $end
$var wire 1 d& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }& state $end
$upscope $end

$scope module ff2 $end
$var wire 1 b& q $end
$var wire 1 a& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~& state $end
$upscope $end

$scope module ff3 $end
$var wire 1 f& q $end
$var wire 1 e& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !' state $end
$upscope $end

$scope module ff4 $end
$var wire 1 c& q $end
$var wire 1 b& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "' state $end
$upscope $end

$scope module ff5 $end
$var wire 1 g& q $end
$var wire 1 f& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #' state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 C& q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $' state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 D& q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %' state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 E& q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &' state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 F& q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '' state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 G& q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (' state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 H& q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )' state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 I& q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *' state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 J& q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +' state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 K& q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,' state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 L& q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -' state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 M& q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .' state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 N& q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /' state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 O& q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0' state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 P& q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1' state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 Q& q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2' state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 R& q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3' state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 S& q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4' state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 T& q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5' state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 U& q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6' state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 V& q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7' state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 W& q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 X& q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9' state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 Y& q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :' state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 Z& q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;' state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 [& q $end
$var wire 1 d! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <' state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 \& q $end
$var wire 1 e! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =' state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 ]& q $end
$var wire 1 f! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >' state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 ^& q $end
$var wire 1 g! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?' state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 _& q $end
$var wire 1 h! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @' state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 D% q $end
$var wire 1 l& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A' state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 E% q $end
$var wire 1 m& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B' state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 F% q $end
$var wire 1 n& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C' state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 G% q $end
$var wire 1 o& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D' state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 H% q $end
$var wire 1 p& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E' state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 I% q $end
$var wire 1 q& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F' state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 J% q $end
$var wire 1 r& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G' state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 K% q $end
$var wire 1 s& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H' state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 L% q $end
$var wire 1 t& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I' state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 M% q $end
$var wire 1 u& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 N% q $end
$var wire 1 v& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K' state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 O% q $end
$var wire 1 w& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L' state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 P% q $end
$var wire 1 x& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M' state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 Q% q $end
$var wire 1 y& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N' state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 R% q $end
$var wire 1 z& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O' state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 S% q $end
$var wire 1 {& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P' state $end
$upscope $end
$upscope $end

$scope module m1 $end
$var wire 1 T% data_out [15] $end
$var wire 1 U% data_out [14] $end
$var wire 1 V% data_out [13] $end
$var wire 1 W% data_out [12] $end
$var wire 1 X% data_out [11] $end
$var wire 1 Y% data_out [10] $end
$var wire 1 Z% data_out [9] $end
$var wire 1 [% data_out [8] $end
$var wire 1 \% data_out [7] $end
$var wire 1 ]% data_out [6] $end
$var wire 1 ^% data_out [5] $end
$var wire 1 _% data_out [4] $end
$var wire 1 `% data_out [3] $end
$var wire 1 a% data_out [2] $end
$var wire 1 b% data_out [1] $end
$var wire 1 c% data_out [0] $end
$var wire 1 '& err $end
$var wire 1 Y! data_in [15] $end
$var wire 1 Z! data_in [14] $end
$var wire 1 [! data_in [13] $end
$var wire 1 \! data_in [12] $end
$var wire 1 ]! data_in [11] $end
$var wire 1 ^! data_in [10] $end
$var wire 1 _! data_in [9] $end
$var wire 1 `! data_in [8] $end
$var wire 1 a! data_in [7] $end
$var wire 1 b! data_in [6] $end
$var wire 1 c! data_in [5] $end
$var wire 1 d! data_in [4] $end
$var wire 1 e! data_in [3] $end
$var wire 1 f! data_in [2] $end
$var wire 1 g! data_in [1] $end
$var wire 1 h! data_in [0] $end
$var wire 1 -" addr [12] $end
$var wire 1 ." addr [11] $end
$var wire 1 /" addr [10] $end
$var wire 1 0" addr [9] $end
$var wire 1 1" addr [8] $end
$var wire 1 2" addr [7] $end
$var wire 1 3" addr [6] $end
$var wire 1 4" addr [5] $end
$var wire 1 5" addr [4] $end
$var wire 1 6" addr [3] $end
$var wire 1 7" addr [2] $end
$var wire 1 8" addr [1] $end
$var wire 1 9" addr [0] $end
$var wire 1 =" wr $end
$var wire 1 >" rd $end
$var wire 1 0& enable $end
$var wire 1 { create_dump $end
$var wire 1 Q' bank_id [1] $end
$var wire 1 R' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S' loaded $end
$var reg 16 T' largest [15:0] $end
$var wire 1 U' addr_1c [13] $end
$var wire 1 V' addr_1c [12] $end
$var wire 1 W' addr_1c [11] $end
$var wire 1 X' addr_1c [10] $end
$var wire 1 Y' addr_1c [9] $end
$var wire 1 Z' addr_1c [8] $end
$var wire 1 [' addr_1c [7] $end
$var wire 1 \' addr_1c [6] $end
$var wire 1 ]' addr_1c [5] $end
$var wire 1 ^' addr_1c [4] $end
$var wire 1 _' addr_1c [3] $end
$var wire 1 `' addr_1c [2] $end
$var wire 1 a' addr_1c [1] $end
$var wire 1 b' addr_1c [0] $end
$var wire 1 c' data_in_1c [15] $end
$var wire 1 d' data_in_1c [14] $end
$var wire 1 e' data_in_1c [13] $end
$var wire 1 f' data_in_1c [12] $end
$var wire 1 g' data_in_1c [11] $end
$var wire 1 h' data_in_1c [10] $end
$var wire 1 i' data_in_1c [9] $end
$var wire 1 j' data_in_1c [8] $end
$var wire 1 k' data_in_1c [7] $end
$var wire 1 l' data_in_1c [6] $end
$var wire 1 m' data_in_1c [5] $end
$var wire 1 n' data_in_1c [4] $end
$var wire 1 o' data_in_1c [3] $end
$var wire 1 p' data_in_1c [2] $end
$var wire 1 q' data_in_1c [1] $end
$var wire 1 r' data_in_1c [0] $end
$var wire 1 s' rd0 $end
$var wire 1 t' rd1 $end
$var wire 1 u' rd2 $end
$var wire 1 v' rd3 $end
$var wire 1 w' wr0 $end
$var wire 1 x' wr1 $end
$var wire 1 y' wr2 $end
$var wire 1 z' wr3 $end
$var wire 1 {' busy $end
$var integer 32 |' mcd $end
$var integer 32 }' largeout $end
$var integer 32 ~' i $end
$var wire 1 !( data_out_1c [15] $end
$var wire 1 "( data_out_1c [14] $end
$var wire 1 #( data_out_1c [13] $end
$var wire 1 $( data_out_1c [12] $end
$var wire 1 %( data_out_1c [11] $end
$var wire 1 &( data_out_1c [10] $end
$var wire 1 '( data_out_1c [9] $end
$var wire 1 (( data_out_1c [8] $end
$var wire 1 )( data_out_1c [7] $end
$var wire 1 *( data_out_1c [6] $end
$var wire 1 +( data_out_1c [5] $end
$var wire 1 ,( data_out_1c [4] $end
$var wire 1 -( data_out_1c [3] $end
$var wire 1 .( data_out_1c [2] $end
$var wire 1 /( data_out_1c [1] $end
$var wire 1 0( data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 t' q $end
$var wire 1 s' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1( state $end
$upscope $end

$scope module ff1 $end
$var wire 1 x' q $end
$var wire 1 w' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2( state $end
$upscope $end

$scope module ff2 $end
$var wire 1 u' q $end
$var wire 1 t' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3( state $end
$upscope $end

$scope module ff3 $end
$var wire 1 y' q $end
$var wire 1 x' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4( state $end
$upscope $end

$scope module ff4 $end
$var wire 1 v' q $end
$var wire 1 u' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5( state $end
$upscope $end

$scope module ff5 $end
$var wire 1 z' q $end
$var wire 1 y' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6( state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 V' q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7( state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 W' q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8( state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 X' q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9( state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 Y' q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :( state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 Z' q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;( state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 [' q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <( state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 \' q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =( state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 ]' q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 ^' q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 _' q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 `' q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 a' q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 b' q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 c' q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 d' q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 e' q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F( state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 f' q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G( state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 g' q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 h' q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I( state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 i' q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J( state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 j' q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 k' q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L( state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 l' q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M( state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 m' q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N( state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 n' q $end
$var wire 1 d! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O( state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 o' q $end
$var wire 1 e! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P( state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 p' q $end
$var wire 1 f! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q( state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 q' q $end
$var wire 1 g! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R( state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 r' q $end
$var wire 1 h! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S( state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 T% q $end
$var wire 1 !( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T( state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 U% q $end
$var wire 1 "( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U( state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 V% q $end
$var wire 1 #( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V( state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 W% q $end
$var wire 1 $( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W( state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 X% q $end
$var wire 1 %( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X( state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 Y% q $end
$var wire 1 &( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y( state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 Z% q $end
$var wire 1 '( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z( state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 [% q $end
$var wire 1 (( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [( state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 \% q $end
$var wire 1 )( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \( state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 ]% q $end
$var wire 1 *( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 ^% q $end
$var wire 1 +( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^( state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 _% q $end
$var wire 1 ,( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _( state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 `% q $end
$var wire 1 -( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `( state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 a% q $end
$var wire 1 .( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a( state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 b% q $end
$var wire 1 /( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b( state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 c% q $end
$var wire 1 0( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c( state $end
$upscope $end
$upscope $end

$scope module m2 $end
$var wire 1 d% data_out [15] $end
$var wire 1 e% data_out [14] $end
$var wire 1 f% data_out [13] $end
$var wire 1 g% data_out [12] $end
$var wire 1 h% data_out [11] $end
$var wire 1 i% data_out [10] $end
$var wire 1 j% data_out [9] $end
$var wire 1 k% data_out [8] $end
$var wire 1 l% data_out [7] $end
$var wire 1 m% data_out [6] $end
$var wire 1 n% data_out [5] $end
$var wire 1 o% data_out [4] $end
$var wire 1 p% data_out [3] $end
$var wire 1 q% data_out [2] $end
$var wire 1 r% data_out [1] $end
$var wire 1 s% data_out [0] $end
$var wire 1 (& err $end
$var wire 1 Y! data_in [15] $end
$var wire 1 Z! data_in [14] $end
$var wire 1 [! data_in [13] $end
$var wire 1 \! data_in [12] $end
$var wire 1 ]! data_in [11] $end
$var wire 1 ^! data_in [10] $end
$var wire 1 _! data_in [9] $end
$var wire 1 `! data_in [8] $end
$var wire 1 a! data_in [7] $end
$var wire 1 b! data_in [6] $end
$var wire 1 c! data_in [5] $end
$var wire 1 d! data_in [4] $end
$var wire 1 e! data_in [3] $end
$var wire 1 f! data_in [2] $end
$var wire 1 g! data_in [1] $end
$var wire 1 h! data_in [0] $end
$var wire 1 -" addr [12] $end
$var wire 1 ." addr [11] $end
$var wire 1 /" addr [10] $end
$var wire 1 0" addr [9] $end
$var wire 1 1" addr [8] $end
$var wire 1 2" addr [7] $end
$var wire 1 3" addr [6] $end
$var wire 1 4" addr [5] $end
$var wire 1 5" addr [4] $end
$var wire 1 6" addr [3] $end
$var wire 1 7" addr [2] $end
$var wire 1 8" addr [1] $end
$var wire 1 9" addr [0] $end
$var wire 1 =" wr $end
$var wire 1 >" rd $end
$var wire 1 /& enable $end
$var wire 1 { create_dump $end
$var wire 1 d( bank_id [1] $end
$var wire 1 e( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f( loaded $end
$var reg 16 g( largest [15:0] $end
$var wire 1 h( addr_1c [13] $end
$var wire 1 i( addr_1c [12] $end
$var wire 1 j( addr_1c [11] $end
$var wire 1 k( addr_1c [10] $end
$var wire 1 l( addr_1c [9] $end
$var wire 1 m( addr_1c [8] $end
$var wire 1 n( addr_1c [7] $end
$var wire 1 o( addr_1c [6] $end
$var wire 1 p( addr_1c [5] $end
$var wire 1 q( addr_1c [4] $end
$var wire 1 r( addr_1c [3] $end
$var wire 1 s( addr_1c [2] $end
$var wire 1 t( addr_1c [1] $end
$var wire 1 u( addr_1c [0] $end
$var wire 1 v( data_in_1c [15] $end
$var wire 1 w( data_in_1c [14] $end
$var wire 1 x( data_in_1c [13] $end
$var wire 1 y( data_in_1c [12] $end
$var wire 1 z( data_in_1c [11] $end
$var wire 1 {( data_in_1c [10] $end
$var wire 1 |( data_in_1c [9] $end
$var wire 1 }( data_in_1c [8] $end
$var wire 1 ~( data_in_1c [7] $end
$var wire 1 !) data_in_1c [6] $end
$var wire 1 ") data_in_1c [5] $end
$var wire 1 #) data_in_1c [4] $end
$var wire 1 $) data_in_1c [3] $end
$var wire 1 %) data_in_1c [2] $end
$var wire 1 &) data_in_1c [1] $end
$var wire 1 ') data_in_1c [0] $end
$var wire 1 () rd0 $end
$var wire 1 )) rd1 $end
$var wire 1 *) rd2 $end
$var wire 1 +) rd3 $end
$var wire 1 ,) wr0 $end
$var wire 1 -) wr1 $end
$var wire 1 .) wr2 $end
$var wire 1 /) wr3 $end
$var wire 1 0) busy $end
$var integer 32 1) mcd $end
$var integer 32 2) largeout $end
$var integer 32 3) i $end
$var wire 1 4) data_out_1c [15] $end
$var wire 1 5) data_out_1c [14] $end
$var wire 1 6) data_out_1c [13] $end
$var wire 1 7) data_out_1c [12] $end
$var wire 1 8) data_out_1c [11] $end
$var wire 1 9) data_out_1c [10] $end
$var wire 1 :) data_out_1c [9] $end
$var wire 1 ;) data_out_1c [8] $end
$var wire 1 <) data_out_1c [7] $end
$var wire 1 =) data_out_1c [6] $end
$var wire 1 >) data_out_1c [5] $end
$var wire 1 ?) data_out_1c [4] $end
$var wire 1 @) data_out_1c [3] $end
$var wire 1 A) data_out_1c [2] $end
$var wire 1 B) data_out_1c [1] $end
$var wire 1 C) data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 )) q $end
$var wire 1 () d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D) state $end
$upscope $end

$scope module ff1 $end
$var wire 1 -) q $end
$var wire 1 ,) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E) state $end
$upscope $end

$scope module ff2 $end
$var wire 1 *) q $end
$var wire 1 )) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F) state $end
$upscope $end

$scope module ff3 $end
$var wire 1 .) q $end
$var wire 1 -) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G) state $end
$upscope $end

$scope module ff4 $end
$var wire 1 +) q $end
$var wire 1 *) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H) state $end
$upscope $end

$scope module ff5 $end
$var wire 1 /) q $end
$var wire 1 .) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I) state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 i( q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J) state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 j( q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K) state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 k( q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L) state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 l( q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M) state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 m( q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 n( q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 o( q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 p( q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 q( q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 r( q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 s( q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 t( q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 u( q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 v( q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 w( q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 x( q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 y( q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 z( q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 {( q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \) state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 |( q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]) state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 }( q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 ~( q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _) state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 !) q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `) state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 ") q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a) state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 #) q $end
$var wire 1 d! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b) state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 $) q $end
$var wire 1 e! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c) state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 %) q $end
$var wire 1 f! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d) state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 &) q $end
$var wire 1 g! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e) state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 ') q $end
$var wire 1 h! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f) state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 d% q $end
$var wire 1 4) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g) state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 e% q $end
$var wire 1 5) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h) state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 f% q $end
$var wire 1 6) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i) state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 g% q $end
$var wire 1 7) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j) state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 h% q $end
$var wire 1 8) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k) state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 i% q $end
$var wire 1 9) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l) state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 j% q $end
$var wire 1 :) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m) state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 k% q $end
$var wire 1 ;) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n) state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 l% q $end
$var wire 1 <) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o) state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 m% q $end
$var wire 1 =) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 n% q $end
$var wire 1 >) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q) state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 o% q $end
$var wire 1 ?) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r) state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 p% q $end
$var wire 1 @) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s) state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 q% q $end
$var wire 1 A) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t) state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 r% q $end
$var wire 1 B) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u) state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 s% q $end
$var wire 1 C) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v) state $end
$upscope $end
$upscope $end

$scope module m3 $end
$var wire 1 t% data_out [15] $end
$var wire 1 u% data_out [14] $end
$var wire 1 v% data_out [13] $end
$var wire 1 w% data_out [12] $end
$var wire 1 x% data_out [11] $end
$var wire 1 y% data_out [10] $end
$var wire 1 z% data_out [9] $end
$var wire 1 {% data_out [8] $end
$var wire 1 |% data_out [7] $end
$var wire 1 }% data_out [6] $end
$var wire 1 ~% data_out [5] $end
$var wire 1 !& data_out [4] $end
$var wire 1 "& data_out [3] $end
$var wire 1 #& data_out [2] $end
$var wire 1 $& data_out [1] $end
$var wire 1 %& data_out [0] $end
$var wire 1 )& err $end
$var wire 1 Y! data_in [15] $end
$var wire 1 Z! data_in [14] $end
$var wire 1 [! data_in [13] $end
$var wire 1 \! data_in [12] $end
$var wire 1 ]! data_in [11] $end
$var wire 1 ^! data_in [10] $end
$var wire 1 _! data_in [9] $end
$var wire 1 `! data_in [8] $end
$var wire 1 a! data_in [7] $end
$var wire 1 b! data_in [6] $end
$var wire 1 c! data_in [5] $end
$var wire 1 d! data_in [4] $end
$var wire 1 e! data_in [3] $end
$var wire 1 f! data_in [2] $end
$var wire 1 g! data_in [1] $end
$var wire 1 h! data_in [0] $end
$var wire 1 -" addr [12] $end
$var wire 1 ." addr [11] $end
$var wire 1 /" addr [10] $end
$var wire 1 0" addr [9] $end
$var wire 1 1" addr [8] $end
$var wire 1 2" addr [7] $end
$var wire 1 3" addr [6] $end
$var wire 1 4" addr [5] $end
$var wire 1 5" addr [4] $end
$var wire 1 6" addr [3] $end
$var wire 1 7" addr [2] $end
$var wire 1 8" addr [1] $end
$var wire 1 9" addr [0] $end
$var wire 1 =" wr $end
$var wire 1 >" rd $end
$var wire 1 .& enable $end
$var wire 1 { create_dump $end
$var wire 1 w) bank_id [1] $end
$var wire 1 x) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y) loaded $end
$var reg 16 z) largest [15:0] $end
$var wire 1 {) addr_1c [13] $end
$var wire 1 |) addr_1c [12] $end
$var wire 1 }) addr_1c [11] $end
$var wire 1 ~) addr_1c [10] $end
$var wire 1 !* addr_1c [9] $end
$var wire 1 "* addr_1c [8] $end
$var wire 1 #* addr_1c [7] $end
$var wire 1 $* addr_1c [6] $end
$var wire 1 %* addr_1c [5] $end
$var wire 1 &* addr_1c [4] $end
$var wire 1 '* addr_1c [3] $end
$var wire 1 (* addr_1c [2] $end
$var wire 1 )* addr_1c [1] $end
$var wire 1 ** addr_1c [0] $end
$var wire 1 +* data_in_1c [15] $end
$var wire 1 ,* data_in_1c [14] $end
$var wire 1 -* data_in_1c [13] $end
$var wire 1 .* data_in_1c [12] $end
$var wire 1 /* data_in_1c [11] $end
$var wire 1 0* data_in_1c [10] $end
$var wire 1 1* data_in_1c [9] $end
$var wire 1 2* data_in_1c [8] $end
$var wire 1 3* data_in_1c [7] $end
$var wire 1 4* data_in_1c [6] $end
$var wire 1 5* data_in_1c [5] $end
$var wire 1 6* data_in_1c [4] $end
$var wire 1 7* data_in_1c [3] $end
$var wire 1 8* data_in_1c [2] $end
$var wire 1 9* data_in_1c [1] $end
$var wire 1 :* data_in_1c [0] $end
$var wire 1 ;* rd0 $end
$var wire 1 <* rd1 $end
$var wire 1 =* rd2 $end
$var wire 1 >* rd3 $end
$var wire 1 ?* wr0 $end
$var wire 1 @* wr1 $end
$var wire 1 A* wr2 $end
$var wire 1 B* wr3 $end
$var wire 1 C* busy $end
$var integer 32 D* mcd $end
$var integer 32 E* largeout $end
$var integer 32 F* i $end
$var wire 1 G* data_out_1c [15] $end
$var wire 1 H* data_out_1c [14] $end
$var wire 1 I* data_out_1c [13] $end
$var wire 1 J* data_out_1c [12] $end
$var wire 1 K* data_out_1c [11] $end
$var wire 1 L* data_out_1c [10] $end
$var wire 1 M* data_out_1c [9] $end
$var wire 1 N* data_out_1c [8] $end
$var wire 1 O* data_out_1c [7] $end
$var wire 1 P* data_out_1c [6] $end
$var wire 1 Q* data_out_1c [5] $end
$var wire 1 R* data_out_1c [4] $end
$var wire 1 S* data_out_1c [3] $end
$var wire 1 T* data_out_1c [2] $end
$var wire 1 U* data_out_1c [1] $end
$var wire 1 V* data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 <* q $end
$var wire 1 ;* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end

$scope module ff1 $end
$var wire 1 @* q $end
$var wire 1 ?* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end

$scope module ff2 $end
$var wire 1 =* q $end
$var wire 1 <* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end

$scope module ff3 $end
$var wire 1 A* q $end
$var wire 1 @* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end

$scope module ff4 $end
$var wire 1 >* q $end
$var wire 1 =* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end

$scope module ff5 $end
$var wire 1 B* q $end
$var wire 1 A* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 |) q $end
$var wire 1 -" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 }) q $end
$var wire 1 ." d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^* state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 ~) q $end
$var wire 1 /" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _* state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 !* q $end
$var wire 1 0" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `* state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 "* q $end
$var wire 1 1" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a* state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 #* q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b* state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 $* q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c* state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 %* q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 &* q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 '* q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 (* q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 )* q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 ** q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 +* q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 ,* q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 -* q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l* state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 .* q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m* state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 /* q $end
$var wire 1 ]! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 0* q $end
$var wire 1 ^! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o* state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 1* q $end
$var wire 1 _! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p* state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 2* q $end
$var wire 1 `! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 3* q $end
$var wire 1 a! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r* state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 4* q $end
$var wire 1 b! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s* state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 5* q $end
$var wire 1 c! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t* state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 6* q $end
$var wire 1 d! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u* state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 7* q $end
$var wire 1 e! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v* state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 8* q $end
$var wire 1 f! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w* state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 9* q $end
$var wire 1 g! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x* state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 :* q $end
$var wire 1 h! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y* state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 t% q $end
$var wire 1 G* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z* state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 u% q $end
$var wire 1 H* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {* state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 v% q $end
$var wire 1 I* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |* state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 w% q $end
$var wire 1 J* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }* state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 x% q $end
$var wire 1 K* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 y% q $end
$var wire 1 L* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 z% q $end
$var wire 1 M* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 {% q $end
$var wire 1 N* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 |% q $end
$var wire 1 O* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 }% q $end
$var wire 1 P* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 ~% q $end
$var wire 1 Q* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 !& q $end
$var wire 1 R* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 "& q $end
$var wire 1 S* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 #& q $end
$var wire 1 T* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 $& q $end
$var wire 1 U* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 %& q $end
$var wire 1 V* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end
$upscope $end

$scope module b0[3] $end
$var wire 1 2& q $end
$var wire 1 .& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module b0[2] $end
$var wire 1 3& q $end
$var wire 1 /& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module b0[1] $end
$var wire 1 4& q $end
$var wire 1 0& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module b0[0] $end
$var wire 1 5& q $end
$var wire 1 1& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end

$scope module b1[3] $end
$var wire 1 6& q $end
$var wire 1 2& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end

$scope module b1[2] $end
$var wire 1 7& q $end
$var wire 1 3& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end

$scope module b1[1] $end
$var wire 1 8& q $end
$var wire 1 4& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2+ state $end
$upscope $end

$scope module b1[0] $end
$var wire 1 9& q $end
$var wire 1 5& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3+ state $end
$upscope $end

$scope module b2[3] $end
$var wire 1 :& q $end
$var wire 1 6& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4+ state $end
$upscope $end

$scope module b2[2] $end
$var wire 1 ;& q $end
$var wire 1 7& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5+ state $end
$upscope $end

$scope module b2[1] $end
$var wire 1 <& q $end
$var wire 1 8& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6+ state $end
$upscope $end

$scope module b2[0] $end
$var wire 1 =& q $end
$var wire 1 9& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7+ state $end
$upscope $end
$upscope $end

$scope module cache_controller $end
$var parameter 4 8+ IDLE $end
$var parameter 4 9+ WB0 $end
$var parameter 4 :+ WB1 $end
$var parameter 4 ;+ WB2 $end
$var parameter 4 <+ WB3 $end
$var parameter 4 =+ ALLO0 $end
$var parameter 4 >+ ALLO1 $end
$var parameter 4 ?+ ALLO2 $end
$var parameter 4 @+ ALLO3 $end
$var parameter 4 A+ ALLO4 $end
$var parameter 4 B+ ALLO5 $end
$var parameter 4 C+ COMP $end
$var parameter 4 D+ DONE_ST $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 k! hit $end
$var wire 1 n! dirty $end
$var wire 1 q! valid $end
$var wire 1 ?" stall $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 f offset_in [2] $end
$var wire 1 g offset_in [1] $end
$var wire 1 h offset_in [0] $end
$var wire 1 4! tag_out [4] $end
$var wire 1 5! tag_out [3] $end
$var wire 1 6! tag_out [2] $end
$var wire 1 7! tag_out [1] $end
$var wire 1 8! tag_out [0] $end
$var reg 1 E+ Done $end
$var reg 1 F+ Stall $end
$var reg 1 G+ CacheHit $end
$var reg 1 H+ err $end
$var reg 1 I+ enable $end
$var reg 1 J+ comp $end
$var reg 1 K+ write $end
$var reg 1 L+ valid_in $end
$var reg 1 M+ wr $end
$var reg 1 N+ rd $end
$var reg 3 O+ offset [2:0] $end
$var reg 16 P+ addr [15:0] $end
$var reg 4 Q+ next_state [3:0] $end
$var wire 1 R+ curr_state [3] $end
$var wire 1 S+ curr_state [2] $end
$var wire 1 T+ curr_state [1] $end
$var wire 1 U+ curr_state [0] $end

$scope module state_reg[3] $end
$var wire 1 R+ q $end
$var wire 1 V+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end

$scope module state_reg[2] $end
$var wire 1 S+ q $end
$var wire 1 X+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end

$scope module state_reg[1] $end
$var wire 1 T+ q $end
$var wire 1 Z+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end

$scope module state_reg[0] $end
$var wire 1 U+ q $end
$var wire 1 \+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end
$upscope $end

$scope module victimway_reg $end
$var wire 1 U" q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end
$upscope $end
$upscope $end

$scope module ref $end
$var wire 1 _+ Addr [15] $end
$var wire 1 `+ Addr [14] $end
$var wire 1 a+ Addr [13] $end
$var wire 1 b+ Addr [12] $end
$var wire 1 c+ Addr [11] $end
$var wire 1 d+ Addr [10] $end
$var wire 1 e+ Addr [9] $end
$var wire 1 f+ Addr [8] $end
$var wire 1 g+ Addr [7] $end
$var wire 1 h+ Addr [6] $end
$var wire 1 i+ Addr [5] $end
$var wire 1 j+ Addr [4] $end
$var wire 1 k+ Addr [3] $end
$var wire 1 l+ Addr [2] $end
$var wire 1 m+ Addr [1] $end
$var wire 1 n+ Addr [0] $end
$var wire 1 o+ DataIn [15] $end
$var wire 1 p+ DataIn [14] $end
$var wire 1 q+ DataIn [13] $end
$var wire 1 r+ DataIn [12] $end
$var wire 1 s+ DataIn [11] $end
$var wire 1 t+ DataIn [10] $end
$var wire 1 u+ DataIn [9] $end
$var wire 1 v+ DataIn [8] $end
$var wire 1 w+ DataIn [7] $end
$var wire 1 x+ DataIn [6] $end
$var wire 1 y+ DataIn [5] $end
$var wire 1 z+ DataIn [4] $end
$var wire 1 {+ DataIn [3] $end
$var wire 1 |+ DataIn [2] $end
$var wire 1 }+ DataIn [1] $end
$var wire 1 ~+ DataIn [0] $end
$var wire 1 !, Rd $end
$var wire 1 ", Wr $end
$var wire 1 #, clk $end
$var wire 1 $, rst $end
$var reg 16 %, DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 &, loaded $end
$var integer 32 ', i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b0 4
05
06
b10111000101110001011110010111101110110011001010111001001101001011001100110100101100011011000010111010001101001011011110110111000101111001011110110110101100101011011010010111001100001011001000110010001110010 7
1!!
1"!
b0 %!
0&!
1'!
0(!
1)!
1@&
b1 A&
0|&
0}&
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0~&
0!'
0"'
0#'
1S'
b1 T'
01(
02(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
03(
04(
05(
06(
1f(
b1 g(
0D)
0E)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0F)
0G)
0H)
0I)
1y)
b1 z)
0W*
0X*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0++
0*+
0)+
0(+
0'+
0&+
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0Y*
0Z*
0[*
0\*
0/+
0.+
0-+
0,+
03+
02+
01+
00+
07+
06+
05+
04+
0E+
1F+
0G+
1H+
1I+
0J+
0K+
0L+
0M+
0N+
b0 O+
b0 P+
bx Q+
0]+
0[+
0Y+
0W+
0^+
bx %,
1&,
0N
1R
bx V
b0 X
b1 $!
b1 \"
b10000 i#
b10000 l#
b10000 o#
b10000 r#
b101 u#
b1 x#
b11 }#
b10000 ,%
b10000 /%
b10000 2%
b10000 5%
b101 8%
b1 ;%
b0 8+
b1 9+
b10 :+
b11 ;+
b100 <+
b101 =+
b110 >+
b111 ?+
b1000 @+
b1001 A+
b1010 B+
b1011 C+
b1100 D+
b1 #!
bx j#
b100000000 k#
bx m#
b100000000 n#
bx p#
b100000000 q#
bx s#
b100000000 t#
bx v#
b100000000 w#
bx y#
b100000000 z#
bx {#
b100000000 |#
bx -%
b100000000 .%
bx 0%
b100000000 1%
bx 3%
b100000000 4%
bx 6%
b100000000 7%
bx 9%
b100000000 :%
bx <%
b100000000 =%
bx >%
b100000000 ?%
bx i&
bx j&
b100000000000001 k&
bx |'
bx }'
b100000000000001 ~'
bx 1)
bx 2)
b100000000000001 3)
bx D*
bx E*
b100000000000001 F*
b10000000000000000 ',
b0 O
b0 P
b0 Q
b0 S
b10000000000000000000000000000011 T
bx U
bx W
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
12
18
19
0:
1|
1}
1~
0.!
0-!
0,!
0+!
0*!
03!
02!
01!
00!
0/!
08!
07!
06!
05!
04!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
1r!
0s!
0t!
0u!
0v!
0w!
0z!
0y!
0x!
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0="
0>"
0?"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0P"
0Q"
0R"
1S"
xT"
xU"
0V"
0W"
0a"
0`"
0_"
1^"
0]"
1f"
0e"
0d"
1c"
0b"
0k"
1j"
0i"
1h"
0g"
1p"
1o"
0n"
1m"
0l"
0u"
0t"
1s"
1r"
0q"
1z"
0y"
1x"
1w"
0v"
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0]#
1^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0$$
0#$
0"$
1!$
1~#
1)$
0($
0'$
1&$
1%$
0.$
1-$
0,$
1+$
1*$
13$
12$
01$
10$
1/$
08$
07$
16$
15$
14$
1=$
0<$
1;$
1:$
19$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0~$
1!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0*%
0+%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
0&&
0'&
0(&
0)&
1*&
0+&
0,&
0-&
01&
00&
0/&
0.&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
0B&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
0`&
xa&
xb&
xc&
0d&
xe&
xf&
xg&
xh&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
0U'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
0s'
xt'
xu'
xv'
0w'
xx'
xy'
xz'
x{'
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
0h(
x')
x&)
x%)
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
0()
x))
x*)
x+)
0,)
x-)
x.)
x/)
x0)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x**
x)*
x(*
x'*
x&*
x%*
x$*
x#*
x"*
x!*
x~)
x})
x|)
0{)
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
0;*
x<*
x=*
x>*
0?*
x@*
xA*
xB*
xC*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
x5&
x4&
x3&
x2&
x9&
x8&
x7&
x6&
x=&
x<&
x;&
x:&
0X"
1Y"
0Z"
1["
xU+
xT+
xS+
xR+
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0t+
0s+
0r+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
xC%
xB%
xA%
x@%
1x)
1w)
0e(
1d(
1R'
0Q'
0?&
0>&
x\+
xZ+
xX+
xV+
1#,
1$,
$end
#1
0U"
0R+
0S+
0T+
0U+
0:&
0;&
0<&
0=&
06&
07&
08&
09&
02&
03&
04&
05&
0B*
0>*
0A*
0=*
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0#&
0$&
0%&
0+*
0,*
0-*
0.*
0/*
00*
01*
02*
03*
04*
05*
06*
07*
08*
09*
0:*
0|)
0})
0~)
0!*
0"*
0#*
0$*
0%*
0&*
0'*
0(*
0)*
0**
0@*
0<*
0/)
0+)
0.)
0*)
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0v(
0w(
0x(
0y(
0z(
0{(
0|(
0}(
0~(
0!)
0")
0#)
0$)
0%)
0&)
0')
0i(
0j(
0k(
0l(
0m(
0n(
0o(
0p(
0q(
0r(
0s(
0t(
0u(
0-)
0))
0z'
0v'
0y'
0u'
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0c%
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
0k'
0l'
0m'
0n'
0o'
0p'
0q'
0r'
0V'
0W'
0X'
0Y'
0Z'
0['
0\'
0]'
0^'
0_'
0`'
0a'
0b'
0x'
0t'
0g&
0c&
0f&
0b&
0D%
0E%
0F%
0G%
0H%
0I%
0J%
0K%
0L%
0M%
0N%
0O%
0P%
0Q%
0R%
0S%
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0]&
0^&
0_&
0C&
0D&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0e&
0a&
0h&
0{'
00)
0C*
0T"
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0C%
0B%
0A%
0@%
0H+
b0 Q+
0F+
0S"
0\+
0Z+
0X+
0V+
0Y"
0["
0'!
0)!
02
0|
#50
0!!
0#,
08
0}
#100
1!!
1#,
18
1}
b0 k#
b1 k#
b10 k#
b11 k#
b100 k#
b101 k#
b110 k#
b111 k#
b1000 k#
b1001 k#
b1010 k#
b1011 k#
b1100 k#
b1101 k#
b1110 k#
b1111 k#
b10000 k#
b10001 k#
b10010 k#
b10011 k#
b10100 k#
b10101 k#
b10110 k#
b10111 k#
b11000 k#
b11001 k#
b11010 k#
b11011 k#
b11100 k#
b11101 k#
b11110 k#
b11111 k#
b100000 k#
b100001 k#
b100010 k#
b100011 k#
b100100 k#
b100101 k#
b100110 k#
b100111 k#
b101000 k#
b101001 k#
b101010 k#
b101011 k#
b101100 k#
b101101 k#
b101110 k#
b101111 k#
b110000 k#
b110001 k#
b110010 k#
b110011 k#
b110100 k#
b110101 k#
b110110 k#
b110111 k#
b111000 k#
b111001 k#
b111010 k#
b111011 k#
b111100 k#
b111101 k#
b111110 k#
b111111 k#
b1000000 k#
b1000001 k#
b1000010 k#
b1000011 k#
b1000100 k#
b1000101 k#
b1000110 k#
b1000111 k#
b1001000 k#
b1001001 k#
b1001010 k#
b1001011 k#
b1001100 k#
b1001101 k#
b1001110 k#
b1001111 k#
b1010000 k#
b1010001 k#
b1010010 k#
b1010011 k#
b1010100 k#
b1010101 k#
b1010110 k#
b1010111 k#
b1011000 k#
b1011001 k#
b1011010 k#
b1011011 k#
b1011100 k#
b1011101 k#
b1011110 k#
b1011111 k#
b1100000 k#
b1100001 k#
b1100010 k#
b1100011 k#
b1100100 k#
b1100101 k#
b1100110 k#
b1100111 k#
b1101000 k#
b1101001 k#
b1101010 k#
b1101011 k#
b1101100 k#
b1101101 k#
b1101110 k#
b1101111 k#
b1110000 k#
b1110001 k#
b1110010 k#
b1110011 k#
b1110100 k#
b1110101 k#
b1110110 k#
b1110111 k#
b1111000 k#
b1111001 k#
b1111010 k#
b1111011 k#
b1111100 k#
b1111101 k#
b1111110 k#
b1111111 k#
b10000000 k#
b10000001 k#
b10000010 k#
b10000011 k#
b10000100 k#
b10000101 k#
b10000110 k#
b10000111 k#
b10001000 k#
b10001001 k#
b10001010 k#
b10001011 k#
b10001100 k#
b10001101 k#
b10001110 k#
b10001111 k#
b10010000 k#
b10010001 k#
b10010010 k#
b10010011 k#
b10010100 k#
b10010101 k#
b10010110 k#
b10010111 k#
b10011000 k#
b10011001 k#
b10011010 k#
b10011011 k#
b10011100 k#
b10011101 k#
b10011110 k#
b10011111 k#
b10100000 k#
b10100001 k#
b10100010 k#
b10100011 k#
b10100100 k#
b10100101 k#
b10100110 k#
b10100111 k#
b10101000 k#
b10101001 k#
b10101010 k#
b10101011 k#
b10101100 k#
b10101101 k#
b10101110 k#
b10101111 k#
b10110000 k#
b10110001 k#
b10110010 k#
b10110011 k#
b10110100 k#
b10110101 k#
b10110110 k#
b10110111 k#
b10111000 k#
b10111001 k#
b10111010 k#
b10111011 k#
b10111100 k#
b10111101 k#
b10111110 k#
b10111111 k#
b11000000 k#
b11000001 k#
b11000010 k#
b11000011 k#
b11000100 k#
b11000101 k#
b11000110 k#
b11000111 k#
b11001000 k#
b11001001 k#
b11001010 k#
b11001011 k#
b11001100 k#
b11001101 k#
b11001110 k#
b11001111 k#
b11010000 k#
b11010001 k#
b11010010 k#
b11010011 k#
b11010100 k#
b11010101 k#
b11010110 k#
b11010111 k#
b11011000 k#
b11011001 k#
b11011010 k#
b11011011 k#
b11011100 k#
b11011101 k#
b11011110 k#
b11011111 k#
b11100000 k#
b11100001 k#
b11100010 k#
b11100011 k#
b11100100 k#
b11100101 k#
b11100110 k#
b11100111 k#
b11101000 k#
b11101001 k#
b11101010 k#
b11101011 k#
b11101100 k#
b11101101 k#
b11101110 k#
b11101111 k#
b11110000 k#
b11110001 k#
b11110010 k#
b11110011 k#
b11110100 k#
b11110101 k#
b11110110 k#
b11110111 k#
b11111000 k#
b11111001 k#
b11111010 k#
b11111011 k#
b11111100 k#
b11111101 k#
b11111110 k#
b11111111 k#
b100000000 k#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 q#
b1 q#
b10 q#
b11 q#
b100 q#
b101 q#
b110 q#
b111 q#
b1000 q#
b1001 q#
b1010 q#
b1011 q#
b1100 q#
b1101 q#
b1110 q#
b1111 q#
b10000 q#
b10001 q#
b10010 q#
b10011 q#
b10100 q#
b10101 q#
b10110 q#
b10111 q#
b11000 q#
b11001 q#
b11010 q#
b11011 q#
b11100 q#
b11101 q#
b11110 q#
b11111 q#
b100000 q#
b100001 q#
b100010 q#
b100011 q#
b100100 q#
b100101 q#
b100110 q#
b100111 q#
b101000 q#
b101001 q#
b101010 q#
b101011 q#
b101100 q#
b101101 q#
b101110 q#
b101111 q#
b110000 q#
b110001 q#
b110010 q#
b110011 q#
b110100 q#
b110101 q#
b110110 q#
b110111 q#
b111000 q#
b111001 q#
b111010 q#
b111011 q#
b111100 q#
b111101 q#
b111110 q#
b111111 q#
b1000000 q#
b1000001 q#
b1000010 q#
b1000011 q#
b1000100 q#
b1000101 q#
b1000110 q#
b1000111 q#
b1001000 q#
b1001001 q#
b1001010 q#
b1001011 q#
b1001100 q#
b1001101 q#
b1001110 q#
b1001111 q#
b1010000 q#
b1010001 q#
b1010010 q#
b1010011 q#
b1010100 q#
b1010101 q#
b1010110 q#
b1010111 q#
b1011000 q#
b1011001 q#
b1011010 q#
b1011011 q#
b1011100 q#
b1011101 q#
b1011110 q#
b1011111 q#
b1100000 q#
b1100001 q#
b1100010 q#
b1100011 q#
b1100100 q#
b1100101 q#
b1100110 q#
b1100111 q#
b1101000 q#
b1101001 q#
b1101010 q#
b1101011 q#
b1101100 q#
b1101101 q#
b1101110 q#
b1101111 q#
b1110000 q#
b1110001 q#
b1110010 q#
b1110011 q#
b1110100 q#
b1110101 q#
b1110110 q#
b1110111 q#
b1111000 q#
b1111001 q#
b1111010 q#
b1111011 q#
b1111100 q#
b1111101 q#
b1111110 q#
b1111111 q#
b10000000 q#
b10000001 q#
b10000010 q#
b10000011 q#
b10000100 q#
b10000101 q#
b10000110 q#
b10000111 q#
b10001000 q#
b10001001 q#
b10001010 q#
b10001011 q#
b10001100 q#
b10001101 q#
b10001110 q#
b10001111 q#
b10010000 q#
b10010001 q#
b10010010 q#
b10010011 q#
b10010100 q#
b10010101 q#
b10010110 q#
b10010111 q#
b10011000 q#
b10011001 q#
b10011010 q#
b10011011 q#
b10011100 q#
b10011101 q#
b10011110 q#
b10011111 q#
b10100000 q#
b10100001 q#
b10100010 q#
b10100011 q#
b10100100 q#
b10100101 q#
b10100110 q#
b10100111 q#
b10101000 q#
b10101001 q#
b10101010 q#
b10101011 q#
b10101100 q#
b10101101 q#
b10101110 q#
b10101111 q#
b10110000 q#
b10110001 q#
b10110010 q#
b10110011 q#
b10110100 q#
b10110101 q#
b10110110 q#
b10110111 q#
b10111000 q#
b10111001 q#
b10111010 q#
b10111011 q#
b10111100 q#
b10111101 q#
b10111110 q#
b10111111 q#
b11000000 q#
b11000001 q#
b11000010 q#
b11000011 q#
b11000100 q#
b11000101 q#
b11000110 q#
b11000111 q#
b11001000 q#
b11001001 q#
b11001010 q#
b11001011 q#
b11001100 q#
b11001101 q#
b11001110 q#
b11001111 q#
b11010000 q#
b11010001 q#
b11010010 q#
b11010011 q#
b11010100 q#
b11010101 q#
b11010110 q#
b11010111 q#
b11011000 q#
b11011001 q#
b11011010 q#
b11011011 q#
b11011100 q#
b11011101 q#
b11011110 q#
b11011111 q#
b11100000 q#
b11100001 q#
b11100010 q#
b11100011 q#
b11100100 q#
b11100101 q#
b11100110 q#
b11100111 q#
b11101000 q#
b11101001 q#
b11101010 q#
b11101011 q#
b11101100 q#
b11101101 q#
b11101110 q#
b11101111 q#
b11110000 q#
b11110001 q#
b11110010 q#
b11110011 q#
b11110100 q#
b11110101 q#
b11110110 q#
b11110111 q#
b11111000 q#
b11111001 q#
b11111010 q#
b11111011 q#
b11111100 q#
b11111101 q#
b11111110 q#
b11111111 q#
b100000000 q#
b0 t#
b1 t#
b10 t#
b11 t#
b100 t#
b101 t#
b110 t#
b111 t#
b1000 t#
b1001 t#
b1010 t#
b1011 t#
b1100 t#
b1101 t#
b1110 t#
b1111 t#
b10000 t#
b10001 t#
b10010 t#
b10011 t#
b10100 t#
b10101 t#
b10110 t#
b10111 t#
b11000 t#
b11001 t#
b11010 t#
b11011 t#
b11100 t#
b11101 t#
b11110 t#
b11111 t#
b100000 t#
b100001 t#
b100010 t#
b100011 t#
b100100 t#
b100101 t#
b100110 t#
b100111 t#
b101000 t#
b101001 t#
b101010 t#
b101011 t#
b101100 t#
b101101 t#
b101110 t#
b101111 t#
b110000 t#
b110001 t#
b110010 t#
b110011 t#
b110100 t#
b110101 t#
b110110 t#
b110111 t#
b111000 t#
b111001 t#
b111010 t#
b111011 t#
b111100 t#
b111101 t#
b111110 t#
b111111 t#
b1000000 t#
b1000001 t#
b1000010 t#
b1000011 t#
b1000100 t#
b1000101 t#
b1000110 t#
b1000111 t#
b1001000 t#
b1001001 t#
b1001010 t#
b1001011 t#
b1001100 t#
b1001101 t#
b1001110 t#
b1001111 t#
b1010000 t#
b1010001 t#
b1010010 t#
b1010011 t#
b1010100 t#
b1010101 t#
b1010110 t#
b1010111 t#
b1011000 t#
b1011001 t#
b1011010 t#
b1011011 t#
b1011100 t#
b1011101 t#
b1011110 t#
b1011111 t#
b1100000 t#
b1100001 t#
b1100010 t#
b1100011 t#
b1100100 t#
b1100101 t#
b1100110 t#
b1100111 t#
b1101000 t#
b1101001 t#
b1101010 t#
b1101011 t#
b1101100 t#
b1101101 t#
b1101110 t#
b1101111 t#
b1110000 t#
b1110001 t#
b1110010 t#
b1110011 t#
b1110100 t#
b1110101 t#
b1110110 t#
b1110111 t#
b1111000 t#
b1111001 t#
b1111010 t#
b1111011 t#
b1111100 t#
b1111101 t#
b1111110 t#
b1111111 t#
b10000000 t#
b10000001 t#
b10000010 t#
b10000011 t#
b10000100 t#
b10000101 t#
b10000110 t#
b10000111 t#
b10001000 t#
b10001001 t#
b10001010 t#
b10001011 t#
b10001100 t#
b10001101 t#
b10001110 t#
b10001111 t#
b10010000 t#
b10010001 t#
b10010010 t#
b10010011 t#
b10010100 t#
b10010101 t#
b10010110 t#
b10010111 t#
b10011000 t#
b10011001 t#
b10011010 t#
b10011011 t#
b10011100 t#
b10011101 t#
b10011110 t#
b10011111 t#
b10100000 t#
b10100001 t#
b10100010 t#
b10100011 t#
b10100100 t#
b10100101 t#
b10100110 t#
b10100111 t#
b10101000 t#
b10101001 t#
b10101010 t#
b10101011 t#
b10101100 t#
b10101101 t#
b10101110 t#
b10101111 t#
b10110000 t#
b10110001 t#
b10110010 t#
b10110011 t#
b10110100 t#
b10110101 t#
b10110110 t#
b10110111 t#
b10111000 t#
b10111001 t#
b10111010 t#
b10111011 t#
b10111100 t#
b10111101 t#
b10111110 t#
b10111111 t#
b11000000 t#
b11000001 t#
b11000010 t#
b11000011 t#
b11000100 t#
b11000101 t#
b11000110 t#
b11000111 t#
b11001000 t#
b11001001 t#
b11001010 t#
b11001011 t#
b11001100 t#
b11001101 t#
b11001110 t#
b11001111 t#
b11010000 t#
b11010001 t#
b11010010 t#
b11010011 t#
b11010100 t#
b11010101 t#
b11010110 t#
b11010111 t#
b11011000 t#
b11011001 t#
b11011010 t#
b11011011 t#
b11011100 t#
b11011101 t#
b11011110 t#
b11011111 t#
b11100000 t#
b11100001 t#
b11100010 t#
b11100011 t#
b11100100 t#
b11100101 t#
b11100110 t#
b11100111 t#
b11101000 t#
b11101001 t#
b11101010 t#
b11101011 t#
b11101100 t#
b11101101 t#
b11101110 t#
b11101111 t#
b11110000 t#
b11110001 t#
b11110010 t#
b11110011 t#
b11110100 t#
b11110101 t#
b11110110 t#
b11110111 t#
b11111000 t#
b11111001 t#
b11111010 t#
b11111011 t#
b11111100 t#
b11111101 t#
b11111110 t#
b11111111 t#
b100000000 t#
b0 w#
b1 w#
b10 w#
b11 w#
b100 w#
b101 w#
b110 w#
b111 w#
b1000 w#
b1001 w#
b1010 w#
b1011 w#
b1100 w#
b1101 w#
b1110 w#
b1111 w#
b10000 w#
b10001 w#
b10010 w#
b10011 w#
b10100 w#
b10101 w#
b10110 w#
b10111 w#
b11000 w#
b11001 w#
b11010 w#
b11011 w#
b11100 w#
b11101 w#
b11110 w#
b11111 w#
b100000 w#
b100001 w#
b100010 w#
b100011 w#
b100100 w#
b100101 w#
b100110 w#
b100111 w#
b101000 w#
b101001 w#
b101010 w#
b101011 w#
b101100 w#
b101101 w#
b101110 w#
b101111 w#
b110000 w#
b110001 w#
b110010 w#
b110011 w#
b110100 w#
b110101 w#
b110110 w#
b110111 w#
b111000 w#
b111001 w#
b111010 w#
b111011 w#
b111100 w#
b111101 w#
b111110 w#
b111111 w#
b1000000 w#
b1000001 w#
b1000010 w#
b1000011 w#
b1000100 w#
b1000101 w#
b1000110 w#
b1000111 w#
b1001000 w#
b1001001 w#
b1001010 w#
b1001011 w#
b1001100 w#
b1001101 w#
b1001110 w#
b1001111 w#
b1010000 w#
b1010001 w#
b1010010 w#
b1010011 w#
b1010100 w#
b1010101 w#
b1010110 w#
b1010111 w#
b1011000 w#
b1011001 w#
b1011010 w#
b1011011 w#
b1011100 w#
b1011101 w#
b1011110 w#
b1011111 w#
b1100000 w#
b1100001 w#
b1100010 w#
b1100011 w#
b1100100 w#
b1100101 w#
b1100110 w#
b1100111 w#
b1101000 w#
b1101001 w#
b1101010 w#
b1101011 w#
b1101100 w#
b1101101 w#
b1101110 w#
b1101111 w#
b1110000 w#
b1110001 w#
b1110010 w#
b1110011 w#
b1110100 w#
b1110101 w#
b1110110 w#
b1110111 w#
b1111000 w#
b1111001 w#
b1111010 w#
b1111011 w#
b1111100 w#
b1111101 w#
b1111110 w#
b1111111 w#
b10000000 w#
b10000001 w#
b10000010 w#
b10000011 w#
b10000100 w#
b10000101 w#
b10000110 w#
b10000111 w#
b10001000 w#
b10001001 w#
b10001010 w#
b10001011 w#
b10001100 w#
b10001101 w#
b10001110 w#
b10001111 w#
b10010000 w#
b10010001 w#
b10010010 w#
b10010011 w#
b10010100 w#
b10010101 w#
b10010110 w#
b10010111 w#
b10011000 w#
b10011001 w#
b10011010 w#
b10011011 w#
b10011100 w#
b10011101 w#
b10011110 w#
b10011111 w#
b10100000 w#
b10100001 w#
b10100010 w#
b10100011 w#
b10100100 w#
b10100101 w#
b10100110 w#
b10100111 w#
b10101000 w#
b10101001 w#
b10101010 w#
b10101011 w#
b10101100 w#
b10101101 w#
b10101110 w#
b10101111 w#
b10110000 w#
b10110001 w#
b10110010 w#
b10110011 w#
b10110100 w#
b10110101 w#
b10110110 w#
b10110111 w#
b10111000 w#
b10111001 w#
b10111010 w#
b10111011 w#
b10111100 w#
b10111101 w#
b10111110 w#
b10111111 w#
b11000000 w#
b11000001 w#
b11000010 w#
b11000011 w#
b11000100 w#
b11000101 w#
b11000110 w#
b11000111 w#
b11001000 w#
b11001001 w#
b11001010 w#
b11001011 w#
b11001100 w#
b11001101 w#
b11001110 w#
b11001111 w#
b11010000 w#
b11010001 w#
b11010010 w#
b11010011 w#
b11010100 w#
b11010101 w#
b11010110 w#
b11010111 w#
b11011000 w#
b11011001 w#
b11011010 w#
b11011011 w#
b11011100 w#
b11011101 w#
b11011110 w#
b11011111 w#
b11100000 w#
b11100001 w#
b11100010 w#
b11100011 w#
b11100100 w#
b11100101 w#
b11100110 w#
b11100111 w#
b11101000 w#
b11101001 w#
b11101010 w#
b11101011 w#
b11101100 w#
b11101101 w#
b11101110 w#
b11101111 w#
b11110000 w#
b11110001 w#
b11110010 w#
b11110011 w#
b11110100 w#
b11110101 w#
b11110110 w#
b11110111 w#
b11111000 w#
b11111001 w#
b11111010 w#
b11111011 w#
b11111100 w#
b11111101 w#
b11111110 w#
b11111111 w#
b100000000 w#
b0 z#
b1 z#
b10 z#
b11 z#
b100 z#
b101 z#
b110 z#
b111 z#
b1000 z#
b1001 z#
b1010 z#
b1011 z#
b1100 z#
b1101 z#
b1110 z#
b1111 z#
b10000 z#
b10001 z#
b10010 z#
b10011 z#
b10100 z#
b10101 z#
b10110 z#
b10111 z#
b11000 z#
b11001 z#
b11010 z#
b11011 z#
b11100 z#
b11101 z#
b11110 z#
b11111 z#
b100000 z#
b100001 z#
b100010 z#
b100011 z#
b100100 z#
b100101 z#
b100110 z#
b100111 z#
b101000 z#
b101001 z#
b101010 z#
b101011 z#
b101100 z#
b101101 z#
b101110 z#
b101111 z#
b110000 z#
b110001 z#
b110010 z#
b110011 z#
b110100 z#
b110101 z#
b110110 z#
b110111 z#
b111000 z#
b111001 z#
b111010 z#
b111011 z#
b111100 z#
b111101 z#
b111110 z#
b111111 z#
b1000000 z#
b1000001 z#
b1000010 z#
b1000011 z#
b1000100 z#
b1000101 z#
b1000110 z#
b1000111 z#
b1001000 z#
b1001001 z#
b1001010 z#
b1001011 z#
b1001100 z#
b1001101 z#
b1001110 z#
b1001111 z#
b1010000 z#
b1010001 z#
b1010010 z#
b1010011 z#
b1010100 z#
b1010101 z#
b1010110 z#
b1010111 z#
b1011000 z#
b1011001 z#
b1011010 z#
b1011011 z#
b1011100 z#
b1011101 z#
b1011110 z#
b1011111 z#
b1100000 z#
b1100001 z#
b1100010 z#
b1100011 z#
b1100100 z#
b1100101 z#
b1100110 z#
b1100111 z#
b1101000 z#
b1101001 z#
b1101010 z#
b1101011 z#
b1101100 z#
b1101101 z#
b1101110 z#
b1101111 z#
b1110000 z#
b1110001 z#
b1110010 z#
b1110011 z#
b1110100 z#
b1110101 z#
b1110110 z#
b1110111 z#
b1111000 z#
b1111001 z#
b1111010 z#
b1111011 z#
b1111100 z#
b1111101 z#
b1111110 z#
b1111111 z#
b10000000 z#
b10000001 z#
b10000010 z#
b10000011 z#
b10000100 z#
b10000101 z#
b10000110 z#
b10000111 z#
b10001000 z#
b10001001 z#
b10001010 z#
b10001011 z#
b10001100 z#
b10001101 z#
b10001110 z#
b10001111 z#
b10010000 z#
b10010001 z#
b10010010 z#
b10010011 z#
b10010100 z#
b10010101 z#
b10010110 z#
b10010111 z#
b10011000 z#
b10011001 z#
b10011010 z#
b10011011 z#
b10011100 z#
b10011101 z#
b10011110 z#
b10011111 z#
b10100000 z#
b10100001 z#
b10100010 z#
b10100011 z#
b10100100 z#
b10100101 z#
b10100110 z#
b10100111 z#
b10101000 z#
b10101001 z#
b10101010 z#
b10101011 z#
b10101100 z#
b10101101 z#
b10101110 z#
b10101111 z#
b10110000 z#
b10110001 z#
b10110010 z#
b10110011 z#
b10110100 z#
b10110101 z#
b10110110 z#
b10110111 z#
b10111000 z#
b10111001 z#
b10111010 z#
b10111011 z#
b10111100 z#
b10111101 z#
b10111110 z#
b10111111 z#
b11000000 z#
b11000001 z#
b11000010 z#
b11000011 z#
b11000100 z#
b11000101 z#
b11000110 z#
b11000111 z#
b11001000 z#
b11001001 z#
b11001010 z#
b11001011 z#
b11001100 z#
b11001101 z#
b11001110 z#
b11001111 z#
b11010000 z#
b11010001 z#
b11010010 z#
b11010011 z#
b11010100 z#
b11010101 z#
b11010110 z#
b11010111 z#
b11011000 z#
b11011001 z#
b11011010 z#
b11011011 z#
b11011100 z#
b11011101 z#
b11011110 z#
b11011111 z#
b11100000 z#
b11100001 z#
b11100010 z#
b11100011 z#
b11100100 z#
b11100101 z#
b11100110 z#
b11100111 z#
b11101000 z#
b11101001 z#
b11101010 z#
b11101011 z#
b11101100 z#
b11101101 z#
b11101110 z#
b11101111 z#
b11110000 z#
b11110001 z#
b11110010 z#
b11110011 z#
b11110100 z#
b11110101 z#
b11110110 z#
b11110111 z#
b11111000 z#
b11111001 z#
b11111010 z#
b11111011 z#
b11111100 z#
b11111101 z#
b11111110 z#
b11111111 z#
b100000000 z#
b0 |#
b1 |#
b10 |#
b11 |#
b100 |#
b101 |#
b110 |#
b111 |#
b1000 |#
b1001 |#
b1010 |#
b1011 |#
b1100 |#
b1101 |#
b1110 |#
b1111 |#
b10000 |#
b10001 |#
b10010 |#
b10011 |#
b10100 |#
b10101 |#
b10110 |#
b10111 |#
b11000 |#
b11001 |#
b11010 |#
b11011 |#
b11100 |#
b11101 |#
b11110 |#
b11111 |#
b100000 |#
b100001 |#
b100010 |#
b100011 |#
b100100 |#
b100101 |#
b100110 |#
b100111 |#
b101000 |#
b101001 |#
b101010 |#
b101011 |#
b101100 |#
b101101 |#
b101110 |#
b101111 |#
b110000 |#
b110001 |#
b110010 |#
b110011 |#
b110100 |#
b110101 |#
b110110 |#
b110111 |#
b111000 |#
b111001 |#
b111010 |#
b111011 |#
b111100 |#
b111101 |#
b111110 |#
b111111 |#
b1000000 |#
b1000001 |#
b1000010 |#
b1000011 |#
b1000100 |#
b1000101 |#
b1000110 |#
b1000111 |#
b1001000 |#
b1001001 |#
b1001010 |#
b1001011 |#
b1001100 |#
b1001101 |#
b1001110 |#
b1001111 |#
b1010000 |#
b1010001 |#
b1010010 |#
b1010011 |#
b1010100 |#
b1010101 |#
b1010110 |#
b1010111 |#
b1011000 |#
b1011001 |#
b1011010 |#
b1011011 |#
b1011100 |#
b1011101 |#
b1011110 |#
b1011111 |#
b1100000 |#
b1100001 |#
b1100010 |#
b1100011 |#
b1100100 |#
b1100101 |#
b1100110 |#
b1100111 |#
b1101000 |#
b1101001 |#
b1101010 |#
b1101011 |#
b1101100 |#
b1101101 |#
b1101110 |#
b1101111 |#
b1110000 |#
b1110001 |#
b1110010 |#
b1110011 |#
b1110100 |#
b1110101 |#
b1110110 |#
b1110111 |#
b1111000 |#
b1111001 |#
b1111010 |#
b1111011 |#
b1111100 |#
b1111101 |#
b1111110 |#
b1111111 |#
b10000000 |#
b10000001 |#
b10000010 |#
b10000011 |#
b10000100 |#
b10000101 |#
b10000110 |#
b10000111 |#
b10001000 |#
b10001001 |#
b10001010 |#
b10001011 |#
b10001100 |#
b10001101 |#
b10001110 |#
b10001111 |#
b10010000 |#
b10010001 |#
b10010010 |#
b10010011 |#
b10010100 |#
b10010101 |#
b10010110 |#
b10010111 |#
b10011000 |#
b10011001 |#
b10011010 |#
b10011011 |#
b10011100 |#
b10011101 |#
b10011110 |#
b10011111 |#
b10100000 |#
b10100001 |#
b10100010 |#
b10100011 |#
b10100100 |#
b10100101 |#
b10100110 |#
b10100111 |#
b10101000 |#
b10101001 |#
b10101010 |#
b10101011 |#
b10101100 |#
b10101101 |#
b10101110 |#
b10101111 |#
b10110000 |#
b10110001 |#
b10110010 |#
b10110011 |#
b10110100 |#
b10110101 |#
b10110110 |#
b10110111 |#
b10111000 |#
b10111001 |#
b10111010 |#
b10111011 |#
b10111100 |#
b10111101 |#
b10111110 |#
b10111111 |#
b11000000 |#
b11000001 |#
b11000010 |#
b11000011 |#
b11000100 |#
b11000101 |#
b11000110 |#
b11000111 |#
b11001000 |#
b11001001 |#
b11001010 |#
b11001011 |#
b11001100 |#
b11001101 |#
b11001110 |#
b11001111 |#
b11010000 |#
b11010001 |#
b11010010 |#
b11010011 |#
b11010100 |#
b11010101 |#
b11010110 |#
b11010111 |#
b11011000 |#
b11011001 |#
b11011010 |#
b11011011 |#
b11011100 |#
b11011101 |#
b11011110 |#
b11011111 |#
b11100000 |#
b11100001 |#
b11100010 |#
b11100011 |#
b11100100 |#
b11100101 |#
b11100110 |#
b11100111 |#
b11101000 |#
b11101001 |#
b11101010 |#
b11101011 |#
b11101100 |#
b11101101 |#
b11101110 |#
b11101111 |#
b11110000 |#
b11110001 |#
b11110010 |#
b11110011 |#
b11110100 |#
b11110101 |#
b11110110 |#
b11110111 |#
b11111000 |#
b11111001 |#
b11111010 |#
b11111011 |#
b11111100 |#
b11111101 |#
b11111110 |#
b11111111 |#
b100000000 |#
b0 .%
b1 .%
b10 .%
b11 .%
b100 .%
b101 .%
b110 .%
b111 .%
b1000 .%
b1001 .%
b1010 .%
b1011 .%
b1100 .%
b1101 .%
b1110 .%
b1111 .%
b10000 .%
b10001 .%
b10010 .%
b10011 .%
b10100 .%
b10101 .%
b10110 .%
b10111 .%
b11000 .%
b11001 .%
b11010 .%
b11011 .%
b11100 .%
b11101 .%
b11110 .%
b11111 .%
b100000 .%
b100001 .%
b100010 .%
b100011 .%
b100100 .%
b100101 .%
b100110 .%
b100111 .%
b101000 .%
b101001 .%
b101010 .%
b101011 .%
b101100 .%
b101101 .%
b101110 .%
b101111 .%
b110000 .%
b110001 .%
b110010 .%
b110011 .%
b110100 .%
b110101 .%
b110110 .%
b110111 .%
b111000 .%
b111001 .%
b111010 .%
b111011 .%
b111100 .%
b111101 .%
b111110 .%
b111111 .%
b1000000 .%
b1000001 .%
b1000010 .%
b1000011 .%
b1000100 .%
b1000101 .%
b1000110 .%
b1000111 .%
b1001000 .%
b1001001 .%
b1001010 .%
b1001011 .%
b1001100 .%
b1001101 .%
b1001110 .%
b1001111 .%
b1010000 .%
b1010001 .%
b1010010 .%
b1010011 .%
b1010100 .%
b1010101 .%
b1010110 .%
b1010111 .%
b1011000 .%
b1011001 .%
b1011010 .%
b1011011 .%
b1011100 .%
b1011101 .%
b1011110 .%
b1011111 .%
b1100000 .%
b1100001 .%
b1100010 .%
b1100011 .%
b1100100 .%
b1100101 .%
b1100110 .%
b1100111 .%
b1101000 .%
b1101001 .%
b1101010 .%
b1101011 .%
b1101100 .%
b1101101 .%
b1101110 .%
b1101111 .%
b1110000 .%
b1110001 .%
b1110010 .%
b1110011 .%
b1110100 .%
b1110101 .%
b1110110 .%
b1110111 .%
b1111000 .%
b1111001 .%
b1111010 .%
b1111011 .%
b1111100 .%
b1111101 .%
b1111110 .%
b1111111 .%
b10000000 .%
b10000001 .%
b10000010 .%
b10000011 .%
b10000100 .%
b10000101 .%
b10000110 .%
b10000111 .%
b10001000 .%
b10001001 .%
b10001010 .%
b10001011 .%
b10001100 .%
b10001101 .%
b10001110 .%
b10001111 .%
b10010000 .%
b10010001 .%
b10010010 .%
b10010011 .%
b10010100 .%
b10010101 .%
b10010110 .%
b10010111 .%
b10011000 .%
b10011001 .%
b10011010 .%
b10011011 .%
b10011100 .%
b10011101 .%
b10011110 .%
b10011111 .%
b10100000 .%
b10100001 .%
b10100010 .%
b10100011 .%
b10100100 .%
b10100101 .%
b10100110 .%
b10100111 .%
b10101000 .%
b10101001 .%
b10101010 .%
b10101011 .%
b10101100 .%
b10101101 .%
b10101110 .%
b10101111 .%
b10110000 .%
b10110001 .%
b10110010 .%
b10110011 .%
b10110100 .%
b10110101 .%
b10110110 .%
b10110111 .%
b10111000 .%
b10111001 .%
b10111010 .%
b10111011 .%
b10111100 .%
b10111101 .%
b10111110 .%
b10111111 .%
b11000000 .%
b11000001 .%
b11000010 .%
b11000011 .%
b11000100 .%
b11000101 .%
b11000110 .%
b11000111 .%
b11001000 .%
b11001001 .%
b11001010 .%
b11001011 .%
b11001100 .%
b11001101 .%
b11001110 .%
b11001111 .%
b11010000 .%
b11010001 .%
b11010010 .%
b11010011 .%
b11010100 .%
b11010101 .%
b11010110 .%
b11010111 .%
b11011000 .%
b11011001 .%
b11011010 .%
b11011011 .%
b11011100 .%
b11011101 .%
b11011110 .%
b11011111 .%
b11100000 .%
b11100001 .%
b11100010 .%
b11100011 .%
b11100100 .%
b11100101 .%
b11100110 .%
b11100111 .%
b11101000 .%
b11101001 .%
b11101010 .%
b11101011 .%
b11101100 .%
b11101101 .%
b11101110 .%
b11101111 .%
b11110000 .%
b11110001 .%
b11110010 .%
b11110011 .%
b11110100 .%
b11110101 .%
b11110110 .%
b11110111 .%
b11111000 .%
b11111001 .%
b11111010 .%
b11111011 .%
b11111100 .%
b11111101 .%
b11111110 .%
b11111111 .%
b100000000 .%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
b0 4%
b1 4%
b10 4%
b11 4%
b100 4%
b101 4%
b110 4%
b111 4%
b1000 4%
b1001 4%
b1010 4%
b1011 4%
b1100 4%
b1101 4%
b1110 4%
b1111 4%
b10000 4%
b10001 4%
b10010 4%
b10011 4%
b10100 4%
b10101 4%
b10110 4%
b10111 4%
b11000 4%
b11001 4%
b11010 4%
b11011 4%
b11100 4%
b11101 4%
b11110 4%
b11111 4%
b100000 4%
b100001 4%
b100010 4%
b100011 4%
b100100 4%
b100101 4%
b100110 4%
b100111 4%
b101000 4%
b101001 4%
b101010 4%
b101011 4%
b101100 4%
b101101 4%
b101110 4%
b101111 4%
b110000 4%
b110001 4%
b110010 4%
b110011 4%
b110100 4%
b110101 4%
b110110 4%
b110111 4%
b111000 4%
b111001 4%
b111010 4%
b111011 4%
b111100 4%
b111101 4%
b111110 4%
b111111 4%
b1000000 4%
b1000001 4%
b1000010 4%
b1000011 4%
b1000100 4%
b1000101 4%
b1000110 4%
b1000111 4%
b1001000 4%
b1001001 4%
b1001010 4%
b1001011 4%
b1001100 4%
b1001101 4%
b1001110 4%
b1001111 4%
b1010000 4%
b1010001 4%
b1010010 4%
b1010011 4%
b1010100 4%
b1010101 4%
b1010110 4%
b1010111 4%
b1011000 4%
b1011001 4%
b1011010 4%
b1011011 4%
b1011100 4%
b1011101 4%
b1011110 4%
b1011111 4%
b1100000 4%
b1100001 4%
b1100010 4%
b1100011 4%
b1100100 4%
b1100101 4%
b1100110 4%
b1100111 4%
b1101000 4%
b1101001 4%
b1101010 4%
b1101011 4%
b1101100 4%
b1101101 4%
b1101110 4%
b1101111 4%
b1110000 4%
b1110001 4%
b1110010 4%
b1110011 4%
b1110100 4%
b1110101 4%
b1110110 4%
b1110111 4%
b1111000 4%
b1111001 4%
b1111010 4%
b1111011 4%
b1111100 4%
b1111101 4%
b1111110 4%
b1111111 4%
b10000000 4%
b10000001 4%
b10000010 4%
b10000011 4%
b10000100 4%
b10000101 4%
b10000110 4%
b10000111 4%
b10001000 4%
b10001001 4%
b10001010 4%
b10001011 4%
b10001100 4%
b10001101 4%
b10001110 4%
b10001111 4%
b10010000 4%
b10010001 4%
b10010010 4%
b10010011 4%
b10010100 4%
b10010101 4%
b10010110 4%
b10010111 4%
b10011000 4%
b10011001 4%
b10011010 4%
b10011011 4%
b10011100 4%
b10011101 4%
b10011110 4%
b10011111 4%
b10100000 4%
b10100001 4%
b10100010 4%
b10100011 4%
b10100100 4%
b10100101 4%
b10100110 4%
b10100111 4%
b10101000 4%
b10101001 4%
b10101010 4%
b10101011 4%
b10101100 4%
b10101101 4%
b10101110 4%
b10101111 4%
b10110000 4%
b10110001 4%
b10110010 4%
b10110011 4%
b10110100 4%
b10110101 4%
b10110110 4%
b10110111 4%
b10111000 4%
b10111001 4%
b10111010 4%
b10111011 4%
b10111100 4%
b10111101 4%
b10111110 4%
b10111111 4%
b11000000 4%
b11000001 4%
b11000010 4%
b11000011 4%
b11000100 4%
b11000101 4%
b11000110 4%
b11000111 4%
b11001000 4%
b11001001 4%
b11001010 4%
b11001011 4%
b11001100 4%
b11001101 4%
b11001110 4%
b11001111 4%
b11010000 4%
b11010001 4%
b11010010 4%
b11010011 4%
b11010100 4%
b11010101 4%
b11010110 4%
b11010111 4%
b11011000 4%
b11011001 4%
b11011010 4%
b11011011 4%
b11011100 4%
b11011101 4%
b11011110 4%
b11011111 4%
b11100000 4%
b11100001 4%
b11100010 4%
b11100011 4%
b11100100 4%
b11100101 4%
b11100110 4%
b11100111 4%
b11101000 4%
b11101001 4%
b11101010 4%
b11101011 4%
b11101100 4%
b11101101 4%
b11101110 4%
b11101111 4%
b11110000 4%
b11110001 4%
b11110010 4%
b11110011 4%
b11110100 4%
b11110101 4%
b11110110 4%
b11110111 4%
b11111000 4%
b11111001 4%
b11111010 4%
b11111011 4%
b11111100 4%
b11111101 4%
b11111110 4%
b11111111 4%
b100000000 4%
b0 7%
b1 7%
b10 7%
b11 7%
b100 7%
b101 7%
b110 7%
b111 7%
b1000 7%
b1001 7%
b1010 7%
b1011 7%
b1100 7%
b1101 7%
b1110 7%
b1111 7%
b10000 7%
b10001 7%
b10010 7%
b10011 7%
b10100 7%
b10101 7%
b10110 7%
b10111 7%
b11000 7%
b11001 7%
b11010 7%
b11011 7%
b11100 7%
b11101 7%
b11110 7%
b11111 7%
b100000 7%
b100001 7%
b100010 7%
b100011 7%
b100100 7%
b100101 7%
b100110 7%
b100111 7%
b101000 7%
b101001 7%
b101010 7%
b101011 7%
b101100 7%
b101101 7%
b101110 7%
b101111 7%
b110000 7%
b110001 7%
b110010 7%
b110011 7%
b110100 7%
b110101 7%
b110110 7%
b110111 7%
b111000 7%
b111001 7%
b111010 7%
b111011 7%
b111100 7%
b111101 7%
b111110 7%
b111111 7%
b1000000 7%
b1000001 7%
b1000010 7%
b1000011 7%
b1000100 7%
b1000101 7%
b1000110 7%
b1000111 7%
b1001000 7%
b1001001 7%
b1001010 7%
b1001011 7%
b1001100 7%
b1001101 7%
b1001110 7%
b1001111 7%
b1010000 7%
b1010001 7%
b1010010 7%
b1010011 7%
b1010100 7%
b1010101 7%
b1010110 7%
b1010111 7%
b1011000 7%
b1011001 7%
b1011010 7%
b1011011 7%
b1011100 7%
b1011101 7%
b1011110 7%
b1011111 7%
b1100000 7%
b1100001 7%
b1100010 7%
b1100011 7%
b1100100 7%
b1100101 7%
b1100110 7%
b1100111 7%
b1101000 7%
b1101001 7%
b1101010 7%
b1101011 7%
b1101100 7%
b1101101 7%
b1101110 7%
b1101111 7%
b1110000 7%
b1110001 7%
b1110010 7%
b1110011 7%
b1110100 7%
b1110101 7%
b1110110 7%
b1110111 7%
b1111000 7%
b1111001 7%
b1111010 7%
b1111011 7%
b1111100 7%
b1111101 7%
b1111110 7%
b1111111 7%
b10000000 7%
b10000001 7%
b10000010 7%
b10000011 7%
b10000100 7%
b10000101 7%
b10000110 7%
b10000111 7%
b10001000 7%
b10001001 7%
b10001010 7%
b10001011 7%
b10001100 7%
b10001101 7%
b10001110 7%
b10001111 7%
b10010000 7%
b10010001 7%
b10010010 7%
b10010011 7%
b10010100 7%
b10010101 7%
b10010110 7%
b10010111 7%
b10011000 7%
b10011001 7%
b10011010 7%
b10011011 7%
b10011100 7%
b10011101 7%
b10011110 7%
b10011111 7%
b10100000 7%
b10100001 7%
b10100010 7%
b10100011 7%
b10100100 7%
b10100101 7%
b10100110 7%
b10100111 7%
b10101000 7%
b10101001 7%
b10101010 7%
b10101011 7%
b10101100 7%
b10101101 7%
b10101110 7%
b10101111 7%
b10110000 7%
b10110001 7%
b10110010 7%
b10110011 7%
b10110100 7%
b10110101 7%
b10110110 7%
b10110111 7%
b10111000 7%
b10111001 7%
b10111010 7%
b10111011 7%
b10111100 7%
b10111101 7%
b10111110 7%
b10111111 7%
b11000000 7%
b11000001 7%
b11000010 7%
b11000011 7%
b11000100 7%
b11000101 7%
b11000110 7%
b11000111 7%
b11001000 7%
b11001001 7%
b11001010 7%
b11001011 7%
b11001100 7%
b11001101 7%
b11001110 7%
b11001111 7%
b11010000 7%
b11010001 7%
b11010010 7%
b11010011 7%
b11010100 7%
b11010101 7%
b11010110 7%
b11010111 7%
b11011000 7%
b11011001 7%
b11011010 7%
b11011011 7%
b11011100 7%
b11011101 7%
b11011110 7%
b11011111 7%
b11100000 7%
b11100001 7%
b11100010 7%
b11100011 7%
b11100100 7%
b11100101 7%
b11100110 7%
b11100111 7%
b11101000 7%
b11101001 7%
b11101010 7%
b11101011 7%
b11101100 7%
b11101101 7%
b11101110 7%
b11101111 7%
b11110000 7%
b11110001 7%
b11110010 7%
b11110011 7%
b11110100 7%
b11110101 7%
b11110110 7%
b11110111 7%
b11111000 7%
b11111001 7%
b11111010 7%
b11111011 7%
b11111100 7%
b11111101 7%
b11111110 7%
b11111111 7%
b100000000 7%
b0 :%
b1 :%
b10 :%
b11 :%
b100 :%
b101 :%
b110 :%
b111 :%
b1000 :%
b1001 :%
b1010 :%
b1011 :%
b1100 :%
b1101 :%
b1110 :%
b1111 :%
b10000 :%
b10001 :%
b10010 :%
b10011 :%
b10100 :%
b10101 :%
b10110 :%
b10111 :%
b11000 :%
b11001 :%
b11010 :%
b11011 :%
b11100 :%
b11101 :%
b11110 :%
b11111 :%
b100000 :%
b100001 :%
b100010 :%
b100011 :%
b100100 :%
b100101 :%
b100110 :%
b100111 :%
b101000 :%
b101001 :%
b101010 :%
b101011 :%
b101100 :%
b101101 :%
b101110 :%
b101111 :%
b110000 :%
b110001 :%
b110010 :%
b110011 :%
b110100 :%
b110101 :%
b110110 :%
b110111 :%
b111000 :%
b111001 :%
b111010 :%
b111011 :%
b111100 :%
b111101 :%
b111110 :%
b111111 :%
b1000000 :%
b1000001 :%
b1000010 :%
b1000011 :%
b1000100 :%
b1000101 :%
b1000110 :%
b1000111 :%
b1001000 :%
b1001001 :%
b1001010 :%
b1001011 :%
b1001100 :%
b1001101 :%
b1001110 :%
b1001111 :%
b1010000 :%
b1010001 :%
b1010010 :%
b1010011 :%
b1010100 :%
b1010101 :%
b1010110 :%
b1010111 :%
b1011000 :%
b1011001 :%
b1011010 :%
b1011011 :%
b1011100 :%
b1011101 :%
b1011110 :%
b1011111 :%
b1100000 :%
b1100001 :%
b1100010 :%
b1100011 :%
b1100100 :%
b1100101 :%
b1100110 :%
b1100111 :%
b1101000 :%
b1101001 :%
b1101010 :%
b1101011 :%
b1101100 :%
b1101101 :%
b1101110 :%
b1101111 :%
b1110000 :%
b1110001 :%
b1110010 :%
b1110011 :%
b1110100 :%
b1110101 :%
b1110110 :%
b1110111 :%
b1111000 :%
b1111001 :%
b1111010 :%
b1111011 :%
b1111100 :%
b1111101 :%
b1111110 :%
b1111111 :%
b10000000 :%
b10000001 :%
b10000010 :%
b10000011 :%
b10000100 :%
b10000101 :%
b10000110 :%
b10000111 :%
b10001000 :%
b10001001 :%
b10001010 :%
b10001011 :%
b10001100 :%
b10001101 :%
b10001110 :%
b10001111 :%
b10010000 :%
b10010001 :%
b10010010 :%
b10010011 :%
b10010100 :%
b10010101 :%
b10010110 :%
b10010111 :%
b10011000 :%
b10011001 :%
b10011010 :%
b10011011 :%
b10011100 :%
b10011101 :%
b10011110 :%
b10011111 :%
b10100000 :%
b10100001 :%
b10100010 :%
b10100011 :%
b10100100 :%
b10100101 :%
b10100110 :%
b10100111 :%
b10101000 :%
b10101001 :%
b10101010 :%
b10101011 :%
b10101100 :%
b10101101 :%
b10101110 :%
b10101111 :%
b10110000 :%
b10110001 :%
b10110010 :%
b10110011 :%
b10110100 :%
b10110101 :%
b10110110 :%
b10110111 :%
b10111000 :%
b10111001 :%
b10111010 :%
b10111011 :%
b10111100 :%
b10111101 :%
b10111110 :%
b10111111 :%
b11000000 :%
b11000001 :%
b11000010 :%
b11000011 :%
b11000100 :%
b11000101 :%
b11000110 :%
b11000111 :%
b11001000 :%
b11001001 :%
b11001010 :%
b11001011 :%
b11001100 :%
b11001101 :%
b11001110 :%
b11001111 :%
b11010000 :%
b11010001 :%
b11010010 :%
b11010011 :%
b11010100 :%
b11010101 :%
b11010110 :%
b11010111 :%
b11011000 :%
b11011001 :%
b11011010 :%
b11011011 :%
b11011100 :%
b11011101 :%
b11011110 :%
b11011111 :%
b11100000 :%
b11100001 :%
b11100010 :%
b11100011 :%
b11100100 :%
b11100101 :%
b11100110 :%
b11100111 :%
b11101000 :%
b11101001 :%
b11101010 :%
b11101011 :%
b11101100 :%
b11101101 :%
b11101110 :%
b11101111 :%
b11110000 :%
b11110001 :%
b11110010 :%
b11110011 :%
b11110100 :%
b11110101 :%
b11110110 :%
b11110111 :%
b11111000 :%
b11111001 :%
b11111010 :%
b11111011 :%
b11111100 :%
b11111101 :%
b11111110 :%
b11111111 :%
b100000000 :%
b0 =%
b1 =%
b10 =%
b11 =%
b100 =%
b101 =%
b110 =%
b111 =%
b1000 =%
b1001 =%
b1010 =%
b1011 =%
b1100 =%
b1101 =%
b1110 =%
b1111 =%
b10000 =%
b10001 =%
b10010 =%
b10011 =%
b10100 =%
b10101 =%
b10110 =%
b10111 =%
b11000 =%
b11001 =%
b11010 =%
b11011 =%
b11100 =%
b11101 =%
b11110 =%
b11111 =%
b100000 =%
b100001 =%
b100010 =%
b100011 =%
b100100 =%
b100101 =%
b100110 =%
b100111 =%
b101000 =%
b101001 =%
b101010 =%
b101011 =%
b101100 =%
b101101 =%
b101110 =%
b101111 =%
b110000 =%
b110001 =%
b110010 =%
b110011 =%
b110100 =%
b110101 =%
b110110 =%
b110111 =%
b111000 =%
b111001 =%
b111010 =%
b111011 =%
b111100 =%
b111101 =%
b111110 =%
b111111 =%
b1000000 =%
b1000001 =%
b1000010 =%
b1000011 =%
b1000100 =%
b1000101 =%
b1000110 =%
b1000111 =%
b1001000 =%
b1001001 =%
b1001010 =%
b1001011 =%
b1001100 =%
b1001101 =%
b1001110 =%
b1001111 =%
b1010000 =%
b1010001 =%
b1010010 =%
b1010011 =%
b1010100 =%
b1010101 =%
b1010110 =%
b1010111 =%
b1011000 =%
b1011001 =%
b1011010 =%
b1011011 =%
b1011100 =%
b1011101 =%
b1011110 =%
b1011111 =%
b1100000 =%
b1100001 =%
b1100010 =%
b1100011 =%
b1100100 =%
b1100101 =%
b1100110 =%
b1100111 =%
b1101000 =%
b1101001 =%
b1101010 =%
b1101011 =%
b1101100 =%
b1101101 =%
b1101110 =%
b1101111 =%
b1110000 =%
b1110001 =%
b1110010 =%
b1110011 =%
b1110100 =%
b1110101 =%
b1110110 =%
b1110111 =%
b1111000 =%
b1111001 =%
b1111010 =%
b1111011 =%
b1111100 =%
b1111101 =%
b1111110 =%
b1111111 =%
b10000000 =%
b10000001 =%
b10000010 =%
b10000011 =%
b10000100 =%
b10000101 =%
b10000110 =%
b10000111 =%
b10001000 =%
b10001001 =%
b10001010 =%
b10001011 =%
b10001100 =%
b10001101 =%
b10001110 =%
b10001111 =%
b10010000 =%
b10010001 =%
b10010010 =%
b10010011 =%
b10010100 =%
b10010101 =%
b10010110 =%
b10010111 =%
b10011000 =%
b10011001 =%
b10011010 =%
b10011011 =%
b10011100 =%
b10011101 =%
b10011110 =%
b10011111 =%
b10100000 =%
b10100001 =%
b10100010 =%
b10100011 =%
b10100100 =%
b10100101 =%
b10100110 =%
b10100111 =%
b10101000 =%
b10101001 =%
b10101010 =%
b10101011 =%
b10101100 =%
b10101101 =%
b10101110 =%
b10101111 =%
b10110000 =%
b10110001 =%
b10110010 =%
b10110011 =%
b10110100 =%
b10110101 =%
b10110110 =%
b10110111 =%
b10111000 =%
b10111001 =%
b10111010 =%
b10111011 =%
b10111100 =%
b10111101 =%
b10111110 =%
b10111111 =%
b11000000 =%
b11000001 =%
b11000010 =%
b11000011 =%
b11000100 =%
b11000101 =%
b11000110 =%
b11000111 =%
b11001000 =%
b11001001 =%
b11001010 =%
b11001011 =%
b11001100 =%
b11001101 =%
b11001110 =%
b11001111 =%
b11010000 =%
b11010001 =%
b11010010 =%
b11010011 =%
b11010100 =%
b11010101 =%
b11010110 =%
b11010111 =%
b11011000 =%
b11011001 =%
b11011010 =%
b11011011 =%
b11011100 =%
b11011101 =%
b11011110 =%
b11011111 =%
b11100000 =%
b11100001 =%
b11100010 =%
b11100011 =%
b11100100 =%
b11100101 =%
b11100110 =%
b11100111 =%
b11101000 =%
b11101001 =%
b11101010 =%
b11101011 =%
b11101100 =%
b11101101 =%
b11101110 =%
b11101111 =%
b11110000 =%
b11110001 =%
b11110010 =%
b11110011 =%
b11110100 =%
b11110101 =%
b11110110 =%
b11110111 =%
b11111000 =%
b11111001 =%
b11111010 =%
b11111011 =%
b11111100 =%
b11111101 =%
b11111110 =%
b11111111 =%
b100000000 =%
b0 ?%
b1 ?%
b10 ?%
b11 ?%
b100 ?%
b101 ?%
b110 ?%
b111 ?%
b1000 ?%
b1001 ?%
b1010 ?%
b1011 ?%
b1100 ?%
b1101 ?%
b1110 ?%
b1111 ?%
b10000 ?%
b10001 ?%
b10010 ?%
b10011 ?%
b10100 ?%
b10101 ?%
b10110 ?%
b10111 ?%
b11000 ?%
b11001 ?%
b11010 ?%
b11011 ?%
b11100 ?%
b11101 ?%
b11110 ?%
b11111 ?%
b100000 ?%
b100001 ?%
b100010 ?%
b100011 ?%
b100100 ?%
b100101 ?%
b100110 ?%
b100111 ?%
b101000 ?%
b101001 ?%
b101010 ?%
b101011 ?%
b101100 ?%
b101101 ?%
b101110 ?%
b101111 ?%
b110000 ?%
b110001 ?%
b110010 ?%
b110011 ?%
b110100 ?%
b110101 ?%
b110110 ?%
b110111 ?%
b111000 ?%
b111001 ?%
b111010 ?%
b111011 ?%
b111100 ?%
b111101 ?%
b111110 ?%
b111111 ?%
b1000000 ?%
b1000001 ?%
b1000010 ?%
b1000011 ?%
b1000100 ?%
b1000101 ?%
b1000110 ?%
b1000111 ?%
b1001000 ?%
b1001001 ?%
b1001010 ?%
b1001011 ?%
b1001100 ?%
b1001101 ?%
b1001110 ?%
b1001111 ?%
b1010000 ?%
b1010001 ?%
b1010010 ?%
b1010011 ?%
b1010100 ?%
b1010101 ?%
b1010110 ?%
b1010111 ?%
b1011000 ?%
b1011001 ?%
b1011010 ?%
b1011011 ?%
b1011100 ?%
b1011101 ?%
b1011110 ?%
b1011111 ?%
b1100000 ?%
b1100001 ?%
b1100010 ?%
b1100011 ?%
b1100100 ?%
b1100101 ?%
b1100110 ?%
b1100111 ?%
b1101000 ?%
b1101001 ?%
b1101010 ?%
b1101011 ?%
b1101100 ?%
b1101101 ?%
b1101110 ?%
b1101111 ?%
b1110000 ?%
b1110001 ?%
b1110010 ?%
b1110011 ?%
b1110100 ?%
b1110101 ?%
b1110110 ?%
b1110111 ?%
b1111000 ?%
b1111001 ?%
b1111010 ?%
b1111011 ?%
b1111100 ?%
b1111101 ?%
b1111110 ?%
b1111111 ?%
b10000000 ?%
b10000001 ?%
b10000010 ?%
b10000011 ?%
b10000100 ?%
b10000101 ?%
b10000110 ?%
b10000111 ?%
b10001000 ?%
b10001001 ?%
b10001010 ?%
b10001011 ?%
b10001100 ?%
b10001101 ?%
b10001110 ?%
b10001111 ?%
b10010000 ?%
b10010001 ?%
b10010010 ?%
b10010011 ?%
b10010100 ?%
b10010101 ?%
b10010110 ?%
b10010111 ?%
b10011000 ?%
b10011001 ?%
b10011010 ?%
b10011011 ?%
b10011100 ?%
b10011101 ?%
b10011110 ?%
b10011111 ?%
b10100000 ?%
b10100001 ?%
b10100010 ?%
b10100011 ?%
b10100100 ?%
b10100101 ?%
b10100110 ?%
b10100111 ?%
b10101000 ?%
b10101001 ?%
b10101010 ?%
b10101011 ?%
b10101100 ?%
b10101101 ?%
b10101110 ?%
b10101111 ?%
b10110000 ?%
b10110001 ?%
b10110010 ?%
b10110011 ?%
b10110100 ?%
b10110101 ?%
b10110110 ?%
b10110111 ?%
b10111000 ?%
b10111001 ?%
b10111010 ?%
b10111011 ?%
b10111100 ?%
b10111101 ?%
b10111110 ?%
b10111111 ?%
b11000000 ?%
b11000001 ?%
b11000010 ?%
b11000011 ?%
b11000100 ?%
b11000101 ?%
b11000110 ?%
b11000111 ?%
b11001000 ?%
b11001001 ?%
b11001010 ?%
b11001011 ?%
b11001100 ?%
b11001101 ?%
b11001110 ?%
b11001111 ?%
b11010000 ?%
b11010001 ?%
b11010010 ?%
b11010011 ?%
b11010100 ?%
b11010101 ?%
b11010110 ?%
b11010111 ?%
b11011000 ?%
b11011001 ?%
b11011010 ?%
b11011011 ?%
b11011100 ?%
b11011101 ?%
b11011110 ?%
b11011111 ?%
b11100000 ?%
b11100001 ?%
b11100010 ?%
b11100011 ?%
b11100100 ?%
b11100101 ?%
b11100110 ?%
b11100111 ?%
b11101000 ?%
b11101001 ?%
b11101010 ?%
b11101011 ?%
b11101100 ?%
b11101101 ?%
b11101110 ?%
b11101111 ?%
b11110000 ?%
b11110001 ?%
b11110010 ?%
b11110011 ?%
b11110100 ?%
b11110101 ?%
b11110110 ?%
b11110111 ?%
b11111000 ?%
b11111001 ?%
b11111010 ?%
b11111011 ?%
b11111100 ?%
b11111101 ?%
b11111110 ?%
b11111111 ?%
b100000000 ?%
b10 #!
#150
0!!
0#,
08
0}
#200
1!!
1#,
18
1}
b0 k#
b1 k#
b10 k#
b11 k#
b100 k#
b101 k#
b110 k#
b111 k#
b1000 k#
b1001 k#
b1010 k#
b1011 k#
b1100 k#
b1101 k#
b1110 k#
b1111 k#
b10000 k#
b10001 k#
b10010 k#
b10011 k#
b10100 k#
b10101 k#
b10110 k#
b10111 k#
b11000 k#
b11001 k#
b11010 k#
b11011 k#
b11100 k#
b11101 k#
b11110 k#
b11111 k#
b100000 k#
b100001 k#
b100010 k#
b100011 k#
b100100 k#
b100101 k#
b100110 k#
b100111 k#
b101000 k#
b101001 k#
b101010 k#
b101011 k#
b101100 k#
b101101 k#
b101110 k#
b101111 k#
b110000 k#
b110001 k#
b110010 k#
b110011 k#
b110100 k#
b110101 k#
b110110 k#
b110111 k#
b111000 k#
b111001 k#
b111010 k#
b111011 k#
b111100 k#
b111101 k#
b111110 k#
b111111 k#
b1000000 k#
b1000001 k#
b1000010 k#
b1000011 k#
b1000100 k#
b1000101 k#
b1000110 k#
b1000111 k#
b1001000 k#
b1001001 k#
b1001010 k#
b1001011 k#
b1001100 k#
b1001101 k#
b1001110 k#
b1001111 k#
b1010000 k#
b1010001 k#
b1010010 k#
b1010011 k#
b1010100 k#
b1010101 k#
b1010110 k#
b1010111 k#
b1011000 k#
b1011001 k#
b1011010 k#
b1011011 k#
b1011100 k#
b1011101 k#
b1011110 k#
b1011111 k#
b1100000 k#
b1100001 k#
b1100010 k#
b1100011 k#
b1100100 k#
b1100101 k#
b1100110 k#
b1100111 k#
b1101000 k#
b1101001 k#
b1101010 k#
b1101011 k#
b1101100 k#
b1101101 k#
b1101110 k#
b1101111 k#
b1110000 k#
b1110001 k#
b1110010 k#
b1110011 k#
b1110100 k#
b1110101 k#
b1110110 k#
b1110111 k#
b1111000 k#
b1111001 k#
b1111010 k#
b1111011 k#
b1111100 k#
b1111101 k#
b1111110 k#
b1111111 k#
b10000000 k#
b10000001 k#
b10000010 k#
b10000011 k#
b10000100 k#
b10000101 k#
b10000110 k#
b10000111 k#
b10001000 k#
b10001001 k#
b10001010 k#
b10001011 k#
b10001100 k#
b10001101 k#
b10001110 k#
b10001111 k#
b10010000 k#
b10010001 k#
b10010010 k#
b10010011 k#
b10010100 k#
b10010101 k#
b10010110 k#
b10010111 k#
b10011000 k#
b10011001 k#
b10011010 k#
b10011011 k#
b10011100 k#
b10011101 k#
b10011110 k#
b10011111 k#
b10100000 k#
b10100001 k#
b10100010 k#
b10100011 k#
b10100100 k#
b10100101 k#
b10100110 k#
b10100111 k#
b10101000 k#
b10101001 k#
b10101010 k#
b10101011 k#
b10101100 k#
b10101101 k#
b10101110 k#
b10101111 k#
b10110000 k#
b10110001 k#
b10110010 k#
b10110011 k#
b10110100 k#
b10110101 k#
b10110110 k#
b10110111 k#
b10111000 k#
b10111001 k#
b10111010 k#
b10111011 k#
b10111100 k#
b10111101 k#
b10111110 k#
b10111111 k#
b11000000 k#
b11000001 k#
b11000010 k#
b11000011 k#
b11000100 k#
b11000101 k#
b11000110 k#
b11000111 k#
b11001000 k#
b11001001 k#
b11001010 k#
b11001011 k#
b11001100 k#
b11001101 k#
b11001110 k#
b11001111 k#
b11010000 k#
b11010001 k#
b11010010 k#
b11010011 k#
b11010100 k#
b11010101 k#
b11010110 k#
b11010111 k#
b11011000 k#
b11011001 k#
b11011010 k#
b11011011 k#
b11011100 k#
b11011101 k#
b11011110 k#
b11011111 k#
b11100000 k#
b11100001 k#
b11100010 k#
b11100011 k#
b11100100 k#
b11100101 k#
b11100110 k#
b11100111 k#
b11101000 k#
b11101001 k#
b11101010 k#
b11101011 k#
b11101100 k#
b11101101 k#
b11101110 k#
b11101111 k#
b11110000 k#
b11110001 k#
b11110010 k#
b11110011 k#
b11110100 k#
b11110101 k#
b11110110 k#
b11110111 k#
b11111000 k#
b11111001 k#
b11111010 k#
b11111011 k#
b11111100 k#
b11111101 k#
b11111110 k#
b11111111 k#
b100000000 k#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 q#
b1 q#
b10 q#
b11 q#
b100 q#
b101 q#
b110 q#
b111 q#
b1000 q#
b1001 q#
b1010 q#
b1011 q#
b1100 q#
b1101 q#
b1110 q#
b1111 q#
b10000 q#
b10001 q#
b10010 q#
b10011 q#
b10100 q#
b10101 q#
b10110 q#
b10111 q#
b11000 q#
b11001 q#
b11010 q#
b11011 q#
b11100 q#
b11101 q#
b11110 q#
b11111 q#
b100000 q#
b100001 q#
b100010 q#
b100011 q#
b100100 q#
b100101 q#
b100110 q#
b100111 q#
b101000 q#
b101001 q#
b101010 q#
b101011 q#
b101100 q#
b101101 q#
b101110 q#
b101111 q#
b110000 q#
b110001 q#
b110010 q#
b110011 q#
b110100 q#
b110101 q#
b110110 q#
b110111 q#
b111000 q#
b111001 q#
b111010 q#
b111011 q#
b111100 q#
b111101 q#
b111110 q#
b111111 q#
b1000000 q#
b1000001 q#
b1000010 q#
b1000011 q#
b1000100 q#
b1000101 q#
b1000110 q#
b1000111 q#
b1001000 q#
b1001001 q#
b1001010 q#
b1001011 q#
b1001100 q#
b1001101 q#
b1001110 q#
b1001111 q#
b1010000 q#
b1010001 q#
b1010010 q#
b1010011 q#
b1010100 q#
b1010101 q#
b1010110 q#
b1010111 q#
b1011000 q#
b1011001 q#
b1011010 q#
b1011011 q#
b1011100 q#
b1011101 q#
b1011110 q#
b1011111 q#
b1100000 q#
b1100001 q#
b1100010 q#
b1100011 q#
b1100100 q#
b1100101 q#
b1100110 q#
b1100111 q#
b1101000 q#
b1101001 q#
b1101010 q#
b1101011 q#
b1101100 q#
b1101101 q#
b1101110 q#
b1101111 q#
b1110000 q#
b1110001 q#
b1110010 q#
b1110011 q#
b1110100 q#
b1110101 q#
b1110110 q#
b1110111 q#
b1111000 q#
b1111001 q#
b1111010 q#
b1111011 q#
b1111100 q#
b1111101 q#
b1111110 q#
b1111111 q#
b10000000 q#
b10000001 q#
b10000010 q#
b10000011 q#
b10000100 q#
b10000101 q#
b10000110 q#
b10000111 q#
b10001000 q#
b10001001 q#
b10001010 q#
b10001011 q#
b10001100 q#
b10001101 q#
b10001110 q#
b10001111 q#
b10010000 q#
b10010001 q#
b10010010 q#
b10010011 q#
b10010100 q#
b10010101 q#
b10010110 q#
b10010111 q#
b10011000 q#
b10011001 q#
b10011010 q#
b10011011 q#
b10011100 q#
b10011101 q#
b10011110 q#
b10011111 q#
b10100000 q#
b10100001 q#
b10100010 q#
b10100011 q#
b10100100 q#
b10100101 q#
b10100110 q#
b10100111 q#
b10101000 q#
b10101001 q#
b10101010 q#
b10101011 q#
b10101100 q#
b10101101 q#
b10101110 q#
b10101111 q#
b10110000 q#
b10110001 q#
b10110010 q#
b10110011 q#
b10110100 q#
b10110101 q#
b10110110 q#
b10110111 q#
b10111000 q#
b10111001 q#
b10111010 q#
b10111011 q#
b10111100 q#
b10111101 q#
b10111110 q#
b10111111 q#
b11000000 q#
b11000001 q#
b11000010 q#
b11000011 q#
b11000100 q#
b11000101 q#
b11000110 q#
b11000111 q#
b11001000 q#
b11001001 q#
b11001010 q#
b11001011 q#
b11001100 q#
b11001101 q#
b11001110 q#
b11001111 q#
b11010000 q#
b11010001 q#
b11010010 q#
b11010011 q#
b11010100 q#
b11010101 q#
b11010110 q#
b11010111 q#
b11011000 q#
b11011001 q#
b11011010 q#
b11011011 q#
b11011100 q#
b11011101 q#
b11011110 q#
b11011111 q#
b11100000 q#
b11100001 q#
b11100010 q#
b11100011 q#
b11100100 q#
b11100101 q#
b11100110 q#
b11100111 q#
b11101000 q#
b11101001 q#
b11101010 q#
b11101011 q#
b11101100 q#
b11101101 q#
b11101110 q#
b11101111 q#
b11110000 q#
b11110001 q#
b11110010 q#
b11110011 q#
b11110100 q#
b11110101 q#
b11110110 q#
b11110111 q#
b11111000 q#
b11111001 q#
b11111010 q#
b11111011 q#
b11111100 q#
b11111101 q#
b11111110 q#
b11111111 q#
b100000000 q#
b0 t#
b1 t#
b10 t#
b11 t#
b100 t#
b101 t#
b110 t#
b111 t#
b1000 t#
b1001 t#
b1010 t#
b1011 t#
b1100 t#
b1101 t#
b1110 t#
b1111 t#
b10000 t#
b10001 t#
b10010 t#
b10011 t#
b10100 t#
b10101 t#
b10110 t#
b10111 t#
b11000 t#
b11001 t#
b11010 t#
b11011 t#
b11100 t#
b11101 t#
b11110 t#
b11111 t#
b100000 t#
b100001 t#
b100010 t#
b100011 t#
b100100 t#
b100101 t#
b100110 t#
b100111 t#
b101000 t#
b101001 t#
b101010 t#
b101011 t#
b101100 t#
b101101 t#
b101110 t#
b101111 t#
b110000 t#
b110001 t#
b110010 t#
b110011 t#
b110100 t#
b110101 t#
b110110 t#
b110111 t#
b111000 t#
b111001 t#
b111010 t#
b111011 t#
b111100 t#
b111101 t#
b111110 t#
b111111 t#
b1000000 t#
b1000001 t#
b1000010 t#
b1000011 t#
b1000100 t#
b1000101 t#
b1000110 t#
b1000111 t#
b1001000 t#
b1001001 t#
b1001010 t#
b1001011 t#
b1001100 t#
b1001101 t#
b1001110 t#
b1001111 t#
b1010000 t#
b1010001 t#
b1010010 t#
b1010011 t#
b1010100 t#
b1010101 t#
b1010110 t#
b1010111 t#
b1011000 t#
b1011001 t#
b1011010 t#
b1011011 t#
b1011100 t#
b1011101 t#
b1011110 t#
b1011111 t#
b1100000 t#
b1100001 t#
b1100010 t#
b1100011 t#
b1100100 t#
b1100101 t#
b1100110 t#
b1100111 t#
b1101000 t#
b1101001 t#
b1101010 t#
b1101011 t#
b1101100 t#
b1101101 t#
b1101110 t#
b1101111 t#
b1110000 t#
b1110001 t#
b1110010 t#
b1110011 t#
b1110100 t#
b1110101 t#
b1110110 t#
b1110111 t#
b1111000 t#
b1111001 t#
b1111010 t#
b1111011 t#
b1111100 t#
b1111101 t#
b1111110 t#
b1111111 t#
b10000000 t#
b10000001 t#
b10000010 t#
b10000011 t#
b10000100 t#
b10000101 t#
b10000110 t#
b10000111 t#
b10001000 t#
b10001001 t#
b10001010 t#
b10001011 t#
b10001100 t#
b10001101 t#
b10001110 t#
b10001111 t#
b10010000 t#
b10010001 t#
b10010010 t#
b10010011 t#
b10010100 t#
b10010101 t#
b10010110 t#
b10010111 t#
b10011000 t#
b10011001 t#
b10011010 t#
b10011011 t#
b10011100 t#
b10011101 t#
b10011110 t#
b10011111 t#
b10100000 t#
b10100001 t#
b10100010 t#
b10100011 t#
b10100100 t#
b10100101 t#
b10100110 t#
b10100111 t#
b10101000 t#
b10101001 t#
b10101010 t#
b10101011 t#
b10101100 t#
b10101101 t#
b10101110 t#
b10101111 t#
b10110000 t#
b10110001 t#
b10110010 t#
b10110011 t#
b10110100 t#
b10110101 t#
b10110110 t#
b10110111 t#
b10111000 t#
b10111001 t#
b10111010 t#
b10111011 t#
b10111100 t#
b10111101 t#
b10111110 t#
b10111111 t#
b11000000 t#
b11000001 t#
b11000010 t#
b11000011 t#
b11000100 t#
b11000101 t#
b11000110 t#
b11000111 t#
b11001000 t#
b11001001 t#
b11001010 t#
b11001011 t#
b11001100 t#
b11001101 t#
b11001110 t#
b11001111 t#
b11010000 t#
b11010001 t#
b11010010 t#
b11010011 t#
b11010100 t#
b11010101 t#
b11010110 t#
b11010111 t#
b11011000 t#
b11011001 t#
b11011010 t#
b11011011 t#
b11011100 t#
b11011101 t#
b11011110 t#
b11011111 t#
b11100000 t#
b11100001 t#
b11100010 t#
b11100011 t#
b11100100 t#
b11100101 t#
b11100110 t#
b11100111 t#
b11101000 t#
b11101001 t#
b11101010 t#
b11101011 t#
b11101100 t#
b11101101 t#
b11101110 t#
b11101111 t#
b11110000 t#
b11110001 t#
b11110010 t#
b11110011 t#
b11110100 t#
b11110101 t#
b11110110 t#
b11110111 t#
b11111000 t#
b11111001 t#
b11111010 t#
b11111011 t#
b11111100 t#
b11111101 t#
b11111110 t#
b11111111 t#
b100000000 t#
b0 w#
b1 w#
b10 w#
b11 w#
b100 w#
b101 w#
b110 w#
b111 w#
b1000 w#
b1001 w#
b1010 w#
b1011 w#
b1100 w#
b1101 w#
b1110 w#
b1111 w#
b10000 w#
b10001 w#
b10010 w#
b10011 w#
b10100 w#
b10101 w#
b10110 w#
b10111 w#
b11000 w#
b11001 w#
b11010 w#
b11011 w#
b11100 w#
b11101 w#
b11110 w#
b11111 w#
b100000 w#
b100001 w#
b100010 w#
b100011 w#
b100100 w#
b100101 w#
b100110 w#
b100111 w#
b101000 w#
b101001 w#
b101010 w#
b101011 w#
b101100 w#
b101101 w#
b101110 w#
b101111 w#
b110000 w#
b110001 w#
b110010 w#
b110011 w#
b110100 w#
b110101 w#
b110110 w#
b110111 w#
b111000 w#
b111001 w#
b111010 w#
b111011 w#
b111100 w#
b111101 w#
b111110 w#
b111111 w#
b1000000 w#
b1000001 w#
b1000010 w#
b1000011 w#
b1000100 w#
b1000101 w#
b1000110 w#
b1000111 w#
b1001000 w#
b1001001 w#
b1001010 w#
b1001011 w#
b1001100 w#
b1001101 w#
b1001110 w#
b1001111 w#
b1010000 w#
b1010001 w#
b1010010 w#
b1010011 w#
b1010100 w#
b1010101 w#
b1010110 w#
b1010111 w#
b1011000 w#
b1011001 w#
b1011010 w#
b1011011 w#
b1011100 w#
b1011101 w#
b1011110 w#
b1011111 w#
b1100000 w#
b1100001 w#
b1100010 w#
b1100011 w#
b1100100 w#
b1100101 w#
b1100110 w#
b1100111 w#
b1101000 w#
b1101001 w#
b1101010 w#
b1101011 w#
b1101100 w#
b1101101 w#
b1101110 w#
b1101111 w#
b1110000 w#
b1110001 w#
b1110010 w#
b1110011 w#
b1110100 w#
b1110101 w#
b1110110 w#
b1110111 w#
b1111000 w#
b1111001 w#
b1111010 w#
b1111011 w#
b1111100 w#
b1111101 w#
b1111110 w#
b1111111 w#
b10000000 w#
b10000001 w#
b10000010 w#
b10000011 w#
b10000100 w#
b10000101 w#
b10000110 w#
b10000111 w#
b10001000 w#
b10001001 w#
b10001010 w#
b10001011 w#
b10001100 w#
b10001101 w#
b10001110 w#
b10001111 w#
b10010000 w#
b10010001 w#
b10010010 w#
b10010011 w#
b10010100 w#
b10010101 w#
b10010110 w#
b10010111 w#
b10011000 w#
b10011001 w#
b10011010 w#
b10011011 w#
b10011100 w#
b10011101 w#
b10011110 w#
b10011111 w#
b10100000 w#
b10100001 w#
b10100010 w#
b10100011 w#
b10100100 w#
b10100101 w#
b10100110 w#
b10100111 w#
b10101000 w#
b10101001 w#
b10101010 w#
b10101011 w#
b10101100 w#
b10101101 w#
b10101110 w#
b10101111 w#
b10110000 w#
b10110001 w#
b10110010 w#
b10110011 w#
b10110100 w#
b10110101 w#
b10110110 w#
b10110111 w#
b10111000 w#
b10111001 w#
b10111010 w#
b10111011 w#
b10111100 w#
b10111101 w#
b10111110 w#
b10111111 w#
b11000000 w#
b11000001 w#
b11000010 w#
b11000011 w#
b11000100 w#
b11000101 w#
b11000110 w#
b11000111 w#
b11001000 w#
b11001001 w#
b11001010 w#
b11001011 w#
b11001100 w#
b11001101 w#
b11001110 w#
b11001111 w#
b11010000 w#
b11010001 w#
b11010010 w#
b11010011 w#
b11010100 w#
b11010101 w#
b11010110 w#
b11010111 w#
b11011000 w#
b11011001 w#
b11011010 w#
b11011011 w#
b11011100 w#
b11011101 w#
b11011110 w#
b11011111 w#
b11100000 w#
b11100001 w#
b11100010 w#
b11100011 w#
b11100100 w#
b11100101 w#
b11100110 w#
b11100111 w#
b11101000 w#
b11101001 w#
b11101010 w#
b11101011 w#
b11101100 w#
b11101101 w#
b11101110 w#
b11101111 w#
b11110000 w#
b11110001 w#
b11110010 w#
b11110011 w#
b11110100 w#
b11110101 w#
b11110110 w#
b11110111 w#
b11111000 w#
b11111001 w#
b11111010 w#
b11111011 w#
b11111100 w#
b11111101 w#
b11111110 w#
b11111111 w#
b100000000 w#
b0 z#
b1 z#
b10 z#
b11 z#
b100 z#
b101 z#
b110 z#
b111 z#
b1000 z#
b1001 z#
b1010 z#
b1011 z#
b1100 z#
b1101 z#
b1110 z#
b1111 z#
b10000 z#
b10001 z#
b10010 z#
b10011 z#
b10100 z#
b10101 z#
b10110 z#
b10111 z#
b11000 z#
b11001 z#
b11010 z#
b11011 z#
b11100 z#
b11101 z#
b11110 z#
b11111 z#
b100000 z#
b100001 z#
b100010 z#
b100011 z#
b100100 z#
b100101 z#
b100110 z#
b100111 z#
b101000 z#
b101001 z#
b101010 z#
b101011 z#
b101100 z#
b101101 z#
b101110 z#
b101111 z#
b110000 z#
b110001 z#
b110010 z#
b110011 z#
b110100 z#
b110101 z#
b110110 z#
b110111 z#
b111000 z#
b111001 z#
b111010 z#
b111011 z#
b111100 z#
b111101 z#
b111110 z#
b111111 z#
b1000000 z#
b1000001 z#
b1000010 z#
b1000011 z#
b1000100 z#
b1000101 z#
b1000110 z#
b1000111 z#
b1001000 z#
b1001001 z#
b1001010 z#
b1001011 z#
b1001100 z#
b1001101 z#
b1001110 z#
b1001111 z#
b1010000 z#
b1010001 z#
b1010010 z#
b1010011 z#
b1010100 z#
b1010101 z#
b1010110 z#
b1010111 z#
b1011000 z#
b1011001 z#
b1011010 z#
b1011011 z#
b1011100 z#
b1011101 z#
b1011110 z#
b1011111 z#
b1100000 z#
b1100001 z#
b1100010 z#
b1100011 z#
b1100100 z#
b1100101 z#
b1100110 z#
b1100111 z#
b1101000 z#
b1101001 z#
b1101010 z#
b1101011 z#
b1101100 z#
b1101101 z#
b1101110 z#
b1101111 z#
b1110000 z#
b1110001 z#
b1110010 z#
b1110011 z#
b1110100 z#
b1110101 z#
b1110110 z#
b1110111 z#
b1111000 z#
b1111001 z#
b1111010 z#
b1111011 z#
b1111100 z#
b1111101 z#
b1111110 z#
b1111111 z#
b10000000 z#
b10000001 z#
b10000010 z#
b10000011 z#
b10000100 z#
b10000101 z#
b10000110 z#
b10000111 z#
b10001000 z#
b10001001 z#
b10001010 z#
b10001011 z#
b10001100 z#
b10001101 z#
b10001110 z#
b10001111 z#
b10010000 z#
b10010001 z#
b10010010 z#
b10010011 z#
b10010100 z#
b10010101 z#
b10010110 z#
b10010111 z#
b10011000 z#
b10011001 z#
b10011010 z#
b10011011 z#
b10011100 z#
b10011101 z#
b10011110 z#
b10011111 z#
b10100000 z#
b10100001 z#
b10100010 z#
b10100011 z#
b10100100 z#
b10100101 z#
b10100110 z#
b10100111 z#
b10101000 z#
b10101001 z#
b10101010 z#
b10101011 z#
b10101100 z#
b10101101 z#
b10101110 z#
b10101111 z#
b10110000 z#
b10110001 z#
b10110010 z#
b10110011 z#
b10110100 z#
b10110101 z#
b10110110 z#
b10110111 z#
b10111000 z#
b10111001 z#
b10111010 z#
b10111011 z#
b10111100 z#
b10111101 z#
b10111110 z#
b10111111 z#
b11000000 z#
b11000001 z#
b11000010 z#
b11000011 z#
b11000100 z#
b11000101 z#
b11000110 z#
b11000111 z#
b11001000 z#
b11001001 z#
b11001010 z#
b11001011 z#
b11001100 z#
b11001101 z#
b11001110 z#
b11001111 z#
b11010000 z#
b11010001 z#
b11010010 z#
b11010011 z#
b11010100 z#
b11010101 z#
b11010110 z#
b11010111 z#
b11011000 z#
b11011001 z#
b11011010 z#
b11011011 z#
b11011100 z#
b11011101 z#
b11011110 z#
b11011111 z#
b11100000 z#
b11100001 z#
b11100010 z#
b11100011 z#
b11100100 z#
b11100101 z#
b11100110 z#
b11100111 z#
b11101000 z#
b11101001 z#
b11101010 z#
b11101011 z#
b11101100 z#
b11101101 z#
b11101110 z#
b11101111 z#
b11110000 z#
b11110001 z#
b11110010 z#
b11110011 z#
b11110100 z#
b11110101 z#
b11110110 z#
b11110111 z#
b11111000 z#
b11111001 z#
b11111010 z#
b11111011 z#
b11111100 z#
b11111101 z#
b11111110 z#
b11111111 z#
b100000000 z#
b0 |#
b1 |#
b10 |#
b11 |#
b100 |#
b101 |#
b110 |#
b111 |#
b1000 |#
b1001 |#
b1010 |#
b1011 |#
b1100 |#
b1101 |#
b1110 |#
b1111 |#
b10000 |#
b10001 |#
b10010 |#
b10011 |#
b10100 |#
b10101 |#
b10110 |#
b10111 |#
b11000 |#
b11001 |#
b11010 |#
b11011 |#
b11100 |#
b11101 |#
b11110 |#
b11111 |#
b100000 |#
b100001 |#
b100010 |#
b100011 |#
b100100 |#
b100101 |#
b100110 |#
b100111 |#
b101000 |#
b101001 |#
b101010 |#
b101011 |#
b101100 |#
b101101 |#
b101110 |#
b101111 |#
b110000 |#
b110001 |#
b110010 |#
b110011 |#
b110100 |#
b110101 |#
b110110 |#
b110111 |#
b111000 |#
b111001 |#
b111010 |#
b111011 |#
b111100 |#
b111101 |#
b111110 |#
b111111 |#
b1000000 |#
b1000001 |#
b1000010 |#
b1000011 |#
b1000100 |#
b1000101 |#
b1000110 |#
b1000111 |#
b1001000 |#
b1001001 |#
b1001010 |#
b1001011 |#
b1001100 |#
b1001101 |#
b1001110 |#
b1001111 |#
b1010000 |#
b1010001 |#
b1010010 |#
b1010011 |#
b1010100 |#
b1010101 |#
b1010110 |#
b1010111 |#
b1011000 |#
b1011001 |#
b1011010 |#
b1011011 |#
b1011100 |#
b1011101 |#
b1011110 |#
b1011111 |#
b1100000 |#
b1100001 |#
b1100010 |#
b1100011 |#
b1100100 |#
b1100101 |#
b1100110 |#
b1100111 |#
b1101000 |#
b1101001 |#
b1101010 |#
b1101011 |#
b1101100 |#
b1101101 |#
b1101110 |#
b1101111 |#
b1110000 |#
b1110001 |#
b1110010 |#
b1110011 |#
b1110100 |#
b1110101 |#
b1110110 |#
b1110111 |#
b1111000 |#
b1111001 |#
b1111010 |#
b1111011 |#
b1111100 |#
b1111101 |#
b1111110 |#
b1111111 |#
b10000000 |#
b10000001 |#
b10000010 |#
b10000011 |#
b10000100 |#
b10000101 |#
b10000110 |#
b10000111 |#
b10001000 |#
b10001001 |#
b10001010 |#
b10001011 |#
b10001100 |#
b10001101 |#
b10001110 |#
b10001111 |#
b10010000 |#
b10010001 |#
b10010010 |#
b10010011 |#
b10010100 |#
b10010101 |#
b10010110 |#
b10010111 |#
b10011000 |#
b10011001 |#
b10011010 |#
b10011011 |#
b10011100 |#
b10011101 |#
b10011110 |#
b10011111 |#
b10100000 |#
b10100001 |#
b10100010 |#
b10100011 |#
b10100100 |#
b10100101 |#
b10100110 |#
b10100111 |#
b10101000 |#
b10101001 |#
b10101010 |#
b10101011 |#
b10101100 |#
b10101101 |#
b10101110 |#
b10101111 |#
b10110000 |#
b10110001 |#
b10110010 |#
b10110011 |#
b10110100 |#
b10110101 |#
b10110110 |#
b10110111 |#
b10111000 |#
b10111001 |#
b10111010 |#
b10111011 |#
b10111100 |#
b10111101 |#
b10111110 |#
b10111111 |#
b11000000 |#
b11000001 |#
b11000010 |#
b11000011 |#
b11000100 |#
b11000101 |#
b11000110 |#
b11000111 |#
b11001000 |#
b11001001 |#
b11001010 |#
b11001011 |#
b11001100 |#
b11001101 |#
b11001110 |#
b11001111 |#
b11010000 |#
b11010001 |#
b11010010 |#
b11010011 |#
b11010100 |#
b11010101 |#
b11010110 |#
b11010111 |#
b11011000 |#
b11011001 |#
b11011010 |#
b11011011 |#
b11011100 |#
b11011101 |#
b11011110 |#
b11011111 |#
b11100000 |#
b11100001 |#
b11100010 |#
b11100011 |#
b11100100 |#
b11100101 |#
b11100110 |#
b11100111 |#
b11101000 |#
b11101001 |#
b11101010 |#
b11101011 |#
b11101100 |#
b11101101 |#
b11101110 |#
b11101111 |#
b11110000 |#
b11110001 |#
b11110010 |#
b11110011 |#
b11110100 |#
b11110101 |#
b11110110 |#
b11110111 |#
b11111000 |#
b11111001 |#
b11111010 |#
b11111011 |#
b11111100 |#
b11111101 |#
b11111110 |#
b11111111 |#
b100000000 |#
b0 .%
b1 .%
b10 .%
b11 .%
b100 .%
b101 .%
b110 .%
b111 .%
b1000 .%
b1001 .%
b1010 .%
b1011 .%
b1100 .%
b1101 .%
b1110 .%
b1111 .%
b10000 .%
b10001 .%
b10010 .%
b10011 .%
b10100 .%
b10101 .%
b10110 .%
b10111 .%
b11000 .%
b11001 .%
b11010 .%
b11011 .%
b11100 .%
b11101 .%
b11110 .%
b11111 .%
b100000 .%
b100001 .%
b100010 .%
b100011 .%
b100100 .%
b100101 .%
b100110 .%
b100111 .%
b101000 .%
b101001 .%
b101010 .%
b101011 .%
b101100 .%
b101101 .%
b101110 .%
b101111 .%
b110000 .%
b110001 .%
b110010 .%
b110011 .%
b110100 .%
b110101 .%
b110110 .%
b110111 .%
b111000 .%
b111001 .%
b111010 .%
b111011 .%
b111100 .%
b111101 .%
b111110 .%
b111111 .%
b1000000 .%
b1000001 .%
b1000010 .%
b1000011 .%
b1000100 .%
b1000101 .%
b1000110 .%
b1000111 .%
b1001000 .%
b1001001 .%
b1001010 .%
b1001011 .%
b1001100 .%
b1001101 .%
b1001110 .%
b1001111 .%
b1010000 .%
b1010001 .%
b1010010 .%
b1010011 .%
b1010100 .%
b1010101 .%
b1010110 .%
b1010111 .%
b1011000 .%
b1011001 .%
b1011010 .%
b1011011 .%
b1011100 .%
b1011101 .%
b1011110 .%
b1011111 .%
b1100000 .%
b1100001 .%
b1100010 .%
b1100011 .%
b1100100 .%
b1100101 .%
b1100110 .%
b1100111 .%
b1101000 .%
b1101001 .%
b1101010 .%
b1101011 .%
b1101100 .%
b1101101 .%
b1101110 .%
b1101111 .%
b1110000 .%
b1110001 .%
b1110010 .%
b1110011 .%
b1110100 .%
b1110101 .%
b1110110 .%
b1110111 .%
b1111000 .%
b1111001 .%
b1111010 .%
b1111011 .%
b1111100 .%
b1111101 .%
b1111110 .%
b1111111 .%
b10000000 .%
b10000001 .%
b10000010 .%
b10000011 .%
b10000100 .%
b10000101 .%
b10000110 .%
b10000111 .%
b10001000 .%
b10001001 .%
b10001010 .%
b10001011 .%
b10001100 .%
b10001101 .%
b10001110 .%
b10001111 .%
b10010000 .%
b10010001 .%
b10010010 .%
b10010011 .%
b10010100 .%
b10010101 .%
b10010110 .%
b10010111 .%
b10011000 .%
b10011001 .%
b10011010 .%
b10011011 .%
b10011100 .%
b10011101 .%
b10011110 .%
b10011111 .%
b10100000 .%
b10100001 .%
b10100010 .%
b10100011 .%
b10100100 .%
b10100101 .%
b10100110 .%
b10100111 .%
b10101000 .%
b10101001 .%
b10101010 .%
b10101011 .%
b10101100 .%
b10101101 .%
b10101110 .%
b10101111 .%
b10110000 .%
b10110001 .%
b10110010 .%
b10110011 .%
b10110100 .%
b10110101 .%
b10110110 .%
b10110111 .%
b10111000 .%
b10111001 .%
b10111010 .%
b10111011 .%
b10111100 .%
b10111101 .%
b10111110 .%
b10111111 .%
b11000000 .%
b11000001 .%
b11000010 .%
b11000011 .%
b11000100 .%
b11000101 .%
b11000110 .%
b11000111 .%
b11001000 .%
b11001001 .%
b11001010 .%
b11001011 .%
b11001100 .%
b11001101 .%
b11001110 .%
b11001111 .%
b11010000 .%
b11010001 .%
b11010010 .%
b11010011 .%
b11010100 .%
b11010101 .%
b11010110 .%
b11010111 .%
b11011000 .%
b11011001 .%
b11011010 .%
b11011011 .%
b11011100 .%
b11011101 .%
b11011110 .%
b11011111 .%
b11100000 .%
b11100001 .%
b11100010 .%
b11100011 .%
b11100100 .%
b11100101 .%
b11100110 .%
b11100111 .%
b11101000 .%
b11101001 .%
b11101010 .%
b11101011 .%
b11101100 .%
b11101101 .%
b11101110 .%
b11101111 .%
b11110000 .%
b11110001 .%
b11110010 .%
b11110011 .%
b11110100 .%
b11110101 .%
b11110110 .%
b11110111 .%
b11111000 .%
b11111001 .%
b11111010 .%
b11111011 .%
b11111100 .%
b11111101 .%
b11111110 .%
b11111111 .%
b100000000 .%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
b0 4%
b1 4%
b10 4%
b11 4%
b100 4%
b101 4%
b110 4%
b111 4%
b1000 4%
b1001 4%
b1010 4%
b1011 4%
b1100 4%
b1101 4%
b1110 4%
b1111 4%
b10000 4%
b10001 4%
b10010 4%
b10011 4%
b10100 4%
b10101 4%
b10110 4%
b10111 4%
b11000 4%
b11001 4%
b11010 4%
b11011 4%
b11100 4%
b11101 4%
b11110 4%
b11111 4%
b100000 4%
b100001 4%
b100010 4%
b100011 4%
b100100 4%
b100101 4%
b100110 4%
b100111 4%
b101000 4%
b101001 4%
b101010 4%
b101011 4%
b101100 4%
b101101 4%
b101110 4%
b101111 4%
b110000 4%
b110001 4%
b110010 4%
b110011 4%
b110100 4%
b110101 4%
b110110 4%
b110111 4%
b111000 4%
b111001 4%
b111010 4%
b111011 4%
b111100 4%
b111101 4%
b111110 4%
b111111 4%
b1000000 4%
b1000001 4%
b1000010 4%
b1000011 4%
b1000100 4%
b1000101 4%
b1000110 4%
b1000111 4%
b1001000 4%
b1001001 4%
b1001010 4%
b1001011 4%
b1001100 4%
b1001101 4%
b1001110 4%
b1001111 4%
b1010000 4%
b1010001 4%
b1010010 4%
b1010011 4%
b1010100 4%
b1010101 4%
b1010110 4%
b1010111 4%
b1011000 4%
b1011001 4%
b1011010 4%
b1011011 4%
b1011100 4%
b1011101 4%
b1011110 4%
b1011111 4%
b1100000 4%
b1100001 4%
b1100010 4%
b1100011 4%
b1100100 4%
b1100101 4%
b1100110 4%
b1100111 4%
b1101000 4%
b1101001 4%
b1101010 4%
b1101011 4%
b1101100 4%
b1101101 4%
b1101110 4%
b1101111 4%
b1110000 4%
b1110001 4%
b1110010 4%
b1110011 4%
b1110100 4%
b1110101 4%
b1110110 4%
b1110111 4%
b1111000 4%
b1111001 4%
b1111010 4%
b1111011 4%
b1111100 4%
b1111101 4%
b1111110 4%
b1111111 4%
b10000000 4%
b10000001 4%
b10000010 4%
b10000011 4%
b10000100 4%
b10000101 4%
b10000110 4%
b10000111 4%
b10001000 4%
b10001001 4%
b10001010 4%
b10001011 4%
b10001100 4%
b10001101 4%
b10001110 4%
b10001111 4%
b10010000 4%
b10010001 4%
b10010010 4%
b10010011 4%
b10010100 4%
b10010101 4%
b10010110 4%
b10010111 4%
b10011000 4%
b10011001 4%
b10011010 4%
b10011011 4%
b10011100 4%
b10011101 4%
b10011110 4%
b10011111 4%
b10100000 4%
b10100001 4%
b10100010 4%
b10100011 4%
b10100100 4%
b10100101 4%
b10100110 4%
b10100111 4%
b10101000 4%
b10101001 4%
b10101010 4%
b10101011 4%
b10101100 4%
b10101101 4%
b10101110 4%
b10101111 4%
b10110000 4%
b10110001 4%
b10110010 4%
b10110011 4%
b10110100 4%
b10110101 4%
b10110110 4%
b10110111 4%
b10111000 4%
b10111001 4%
b10111010 4%
b10111011 4%
b10111100 4%
b10111101 4%
b10111110 4%
b10111111 4%
b11000000 4%
b11000001 4%
b11000010 4%
b11000011 4%
b11000100 4%
b11000101 4%
b11000110 4%
b11000111 4%
b11001000 4%
b11001001 4%
b11001010 4%
b11001011 4%
b11001100 4%
b11001101 4%
b11001110 4%
b11001111 4%
b11010000 4%
b11010001 4%
b11010010 4%
b11010011 4%
b11010100 4%
b11010101 4%
b11010110 4%
b11010111 4%
b11011000 4%
b11011001 4%
b11011010 4%
b11011011 4%
b11011100 4%
b11011101 4%
b11011110 4%
b11011111 4%
b11100000 4%
b11100001 4%
b11100010 4%
b11100011 4%
b11100100 4%
b11100101 4%
b11100110 4%
b11100111 4%
b11101000 4%
b11101001 4%
b11101010 4%
b11101011 4%
b11101100 4%
b11101101 4%
b11101110 4%
b11101111 4%
b11110000 4%
b11110001 4%
b11110010 4%
b11110011 4%
b11110100 4%
b11110101 4%
b11110110 4%
b11110111 4%
b11111000 4%
b11111001 4%
b11111010 4%
b11111011 4%
b11111100 4%
b11111101 4%
b11111110 4%
b11111111 4%
b100000000 4%
b0 7%
b1 7%
b10 7%
b11 7%
b100 7%
b101 7%
b110 7%
b111 7%
b1000 7%
b1001 7%
b1010 7%
b1011 7%
b1100 7%
b1101 7%
b1110 7%
b1111 7%
b10000 7%
b10001 7%
b10010 7%
b10011 7%
b10100 7%
b10101 7%
b10110 7%
b10111 7%
b11000 7%
b11001 7%
b11010 7%
b11011 7%
b11100 7%
b11101 7%
b11110 7%
b11111 7%
b100000 7%
b100001 7%
b100010 7%
b100011 7%
b100100 7%
b100101 7%
b100110 7%
b100111 7%
b101000 7%
b101001 7%
b101010 7%
b101011 7%
b101100 7%
b101101 7%
b101110 7%
b101111 7%
b110000 7%
b110001 7%
b110010 7%
b110011 7%
b110100 7%
b110101 7%
b110110 7%
b110111 7%
b111000 7%
b111001 7%
b111010 7%
b111011 7%
b111100 7%
b111101 7%
b111110 7%
b111111 7%
b1000000 7%
b1000001 7%
b1000010 7%
b1000011 7%
b1000100 7%
b1000101 7%
b1000110 7%
b1000111 7%
b1001000 7%
b1001001 7%
b1001010 7%
b1001011 7%
b1001100 7%
b1001101 7%
b1001110 7%
b1001111 7%
b1010000 7%
b1010001 7%
b1010010 7%
b1010011 7%
b1010100 7%
b1010101 7%
b1010110 7%
b1010111 7%
b1011000 7%
b1011001 7%
b1011010 7%
b1011011 7%
b1011100 7%
b1011101 7%
b1011110 7%
b1011111 7%
b1100000 7%
b1100001 7%
b1100010 7%
b1100011 7%
b1100100 7%
b1100101 7%
b1100110 7%
b1100111 7%
b1101000 7%
b1101001 7%
b1101010 7%
b1101011 7%
b1101100 7%
b1101101 7%
b1101110 7%
b1101111 7%
b1110000 7%
b1110001 7%
b1110010 7%
b1110011 7%
b1110100 7%
b1110101 7%
b1110110 7%
b1110111 7%
b1111000 7%
b1111001 7%
b1111010 7%
b1111011 7%
b1111100 7%
b1111101 7%
b1111110 7%
b1111111 7%
b10000000 7%
b10000001 7%
b10000010 7%
b10000011 7%
b10000100 7%
b10000101 7%
b10000110 7%
b10000111 7%
b10001000 7%
b10001001 7%
b10001010 7%
b10001011 7%
b10001100 7%
b10001101 7%
b10001110 7%
b10001111 7%
b10010000 7%
b10010001 7%
b10010010 7%
b10010011 7%
b10010100 7%
b10010101 7%
b10010110 7%
b10010111 7%
b10011000 7%
b10011001 7%
b10011010 7%
b10011011 7%
b10011100 7%
b10011101 7%
b10011110 7%
b10011111 7%
b10100000 7%
b10100001 7%
b10100010 7%
b10100011 7%
b10100100 7%
b10100101 7%
b10100110 7%
b10100111 7%
b10101000 7%
b10101001 7%
b10101010 7%
b10101011 7%
b10101100 7%
b10101101 7%
b10101110 7%
b10101111 7%
b10110000 7%
b10110001 7%
b10110010 7%
b10110011 7%
b10110100 7%
b10110101 7%
b10110110 7%
b10110111 7%
b10111000 7%
b10111001 7%
b10111010 7%
b10111011 7%
b10111100 7%
b10111101 7%
b10111110 7%
b10111111 7%
b11000000 7%
b11000001 7%
b11000010 7%
b11000011 7%
b11000100 7%
b11000101 7%
b11000110 7%
b11000111 7%
b11001000 7%
b11001001 7%
b11001010 7%
b11001011 7%
b11001100 7%
b11001101 7%
b11001110 7%
b11001111 7%
b11010000 7%
b11010001 7%
b11010010 7%
b11010011 7%
b11010100 7%
b11010101 7%
b11010110 7%
b11010111 7%
b11011000 7%
b11011001 7%
b11011010 7%
b11011011 7%
b11011100 7%
b11011101 7%
b11011110 7%
b11011111 7%
b11100000 7%
b11100001 7%
b11100010 7%
b11100011 7%
b11100100 7%
b11100101 7%
b11100110 7%
b11100111 7%
b11101000 7%
b11101001 7%
b11101010 7%
b11101011 7%
b11101100 7%
b11101101 7%
b11101110 7%
b11101111 7%
b11110000 7%
b11110001 7%
b11110010 7%
b11110011 7%
b11110100 7%
b11110101 7%
b11110110 7%
b11110111 7%
b11111000 7%
b11111001 7%
b11111010 7%
b11111011 7%
b11111100 7%
b11111101 7%
b11111110 7%
b11111111 7%
b100000000 7%
b0 :%
b1 :%
b10 :%
b11 :%
b100 :%
b101 :%
b110 :%
b111 :%
b1000 :%
b1001 :%
b1010 :%
b1011 :%
b1100 :%
b1101 :%
b1110 :%
b1111 :%
b10000 :%
b10001 :%
b10010 :%
b10011 :%
b10100 :%
b10101 :%
b10110 :%
b10111 :%
b11000 :%
b11001 :%
b11010 :%
b11011 :%
b11100 :%
b11101 :%
b11110 :%
b11111 :%
b100000 :%
b100001 :%
b100010 :%
b100011 :%
b100100 :%
b100101 :%
b100110 :%
b100111 :%
b101000 :%
b101001 :%
b101010 :%
b101011 :%
b101100 :%
b101101 :%
b101110 :%
b101111 :%
b110000 :%
b110001 :%
b110010 :%
b110011 :%
b110100 :%
b110101 :%
b110110 :%
b110111 :%
b111000 :%
b111001 :%
b111010 :%
b111011 :%
b111100 :%
b111101 :%
b111110 :%
b111111 :%
b1000000 :%
b1000001 :%
b1000010 :%
b1000011 :%
b1000100 :%
b1000101 :%
b1000110 :%
b1000111 :%
b1001000 :%
b1001001 :%
b1001010 :%
b1001011 :%
b1001100 :%
b1001101 :%
b1001110 :%
b1001111 :%
b1010000 :%
b1010001 :%
b1010010 :%
b1010011 :%
b1010100 :%
b1010101 :%
b1010110 :%
b1010111 :%
b1011000 :%
b1011001 :%
b1011010 :%
b1011011 :%
b1011100 :%
b1011101 :%
b1011110 :%
b1011111 :%
b1100000 :%
b1100001 :%
b1100010 :%
b1100011 :%
b1100100 :%
b1100101 :%
b1100110 :%
b1100111 :%
b1101000 :%
b1101001 :%
b1101010 :%
b1101011 :%
b1101100 :%
b1101101 :%
b1101110 :%
b1101111 :%
b1110000 :%
b1110001 :%
b1110010 :%
b1110011 :%
b1110100 :%
b1110101 :%
b1110110 :%
b1110111 :%
b1111000 :%
b1111001 :%
b1111010 :%
b1111011 :%
b1111100 :%
b1111101 :%
b1111110 :%
b1111111 :%
b10000000 :%
b10000001 :%
b10000010 :%
b10000011 :%
b10000100 :%
b10000101 :%
b10000110 :%
b10000111 :%
b10001000 :%
b10001001 :%
b10001010 :%
b10001011 :%
b10001100 :%
b10001101 :%
b10001110 :%
b10001111 :%
b10010000 :%
b10010001 :%
b10010010 :%
b10010011 :%
b10010100 :%
b10010101 :%
b10010110 :%
b10010111 :%
b10011000 :%
b10011001 :%
b10011010 :%
b10011011 :%
b10011100 :%
b10011101 :%
b10011110 :%
b10011111 :%
b10100000 :%
b10100001 :%
b10100010 :%
b10100011 :%
b10100100 :%
b10100101 :%
b10100110 :%
b10100111 :%
b10101000 :%
b10101001 :%
b10101010 :%
b10101011 :%
b10101100 :%
b10101101 :%
b10101110 :%
b10101111 :%
b10110000 :%
b10110001 :%
b10110010 :%
b10110011 :%
b10110100 :%
b10110101 :%
b10110110 :%
b10110111 :%
b10111000 :%
b10111001 :%
b10111010 :%
b10111011 :%
b10111100 :%
b10111101 :%
b10111110 :%
b10111111 :%
b11000000 :%
b11000001 :%
b11000010 :%
b11000011 :%
b11000100 :%
b11000101 :%
b11000110 :%
b11000111 :%
b11001000 :%
b11001001 :%
b11001010 :%
b11001011 :%
b11001100 :%
b11001101 :%
b11001110 :%
b11001111 :%
b11010000 :%
b11010001 :%
b11010010 :%
b11010011 :%
b11010100 :%
b11010101 :%
b11010110 :%
b11010111 :%
b11011000 :%
b11011001 :%
b11011010 :%
b11011011 :%
b11011100 :%
b11011101 :%
b11011110 :%
b11011111 :%
b11100000 :%
b11100001 :%
b11100010 :%
b11100011 :%
b11100100 :%
b11100101 :%
b11100110 :%
b11100111 :%
b11101000 :%
b11101001 :%
b11101010 :%
b11101011 :%
b11101100 :%
b11101101 :%
b11101110 :%
b11101111 :%
b11110000 :%
b11110001 :%
b11110010 :%
b11110011 :%
b11110100 :%
b11110101 :%
b11110110 :%
b11110111 :%
b11111000 :%
b11111001 :%
b11111010 :%
b11111011 :%
b11111100 :%
b11111101 :%
b11111110 :%
b11111111 :%
b100000000 :%
b0 =%
b1 =%
b10 =%
b11 =%
b100 =%
b101 =%
b110 =%
b111 =%
b1000 =%
b1001 =%
b1010 =%
b1011 =%
b1100 =%
b1101 =%
b1110 =%
b1111 =%
b10000 =%
b10001 =%
b10010 =%
b10011 =%
b10100 =%
b10101 =%
b10110 =%
b10111 =%
b11000 =%
b11001 =%
b11010 =%
b11011 =%
b11100 =%
b11101 =%
b11110 =%
b11111 =%
b100000 =%
b100001 =%
b100010 =%
b100011 =%
b100100 =%
b100101 =%
b100110 =%
b100111 =%
b101000 =%
b101001 =%
b101010 =%
b101011 =%
b101100 =%
b101101 =%
b101110 =%
b101111 =%
b110000 =%
b110001 =%
b110010 =%
b110011 =%
b110100 =%
b110101 =%
b110110 =%
b110111 =%
b111000 =%
b111001 =%
b111010 =%
b111011 =%
b111100 =%
b111101 =%
b111110 =%
b111111 =%
b1000000 =%
b1000001 =%
b1000010 =%
b1000011 =%
b1000100 =%
b1000101 =%
b1000110 =%
b1000111 =%
b1001000 =%
b1001001 =%
b1001010 =%
b1001011 =%
b1001100 =%
b1001101 =%
b1001110 =%
b1001111 =%
b1010000 =%
b1010001 =%
b1010010 =%
b1010011 =%
b1010100 =%
b1010101 =%
b1010110 =%
b1010111 =%
b1011000 =%
b1011001 =%
b1011010 =%
b1011011 =%
b1011100 =%
b1011101 =%
b1011110 =%
b1011111 =%
b1100000 =%
b1100001 =%
b1100010 =%
b1100011 =%
b1100100 =%
b1100101 =%
b1100110 =%
b1100111 =%
b1101000 =%
b1101001 =%
b1101010 =%
b1101011 =%
b1101100 =%
b1101101 =%
b1101110 =%
b1101111 =%
b1110000 =%
b1110001 =%
b1110010 =%
b1110011 =%
b1110100 =%
b1110101 =%
b1110110 =%
b1110111 =%
b1111000 =%
b1111001 =%
b1111010 =%
b1111011 =%
b1111100 =%
b1111101 =%
b1111110 =%
b1111111 =%
b10000000 =%
b10000001 =%
b10000010 =%
b10000011 =%
b10000100 =%
b10000101 =%
b10000110 =%
b10000111 =%
b10001000 =%
b10001001 =%
b10001010 =%
b10001011 =%
b10001100 =%
b10001101 =%
b10001110 =%
b10001111 =%
b10010000 =%
b10010001 =%
b10010010 =%
b10010011 =%
b10010100 =%
b10010101 =%
b10010110 =%
b10010111 =%
b10011000 =%
b10011001 =%
b10011010 =%
b10011011 =%
b10011100 =%
b10011101 =%
b10011110 =%
b10011111 =%
b10100000 =%
b10100001 =%
b10100010 =%
b10100011 =%
b10100100 =%
b10100101 =%
b10100110 =%
b10100111 =%
b10101000 =%
b10101001 =%
b10101010 =%
b10101011 =%
b10101100 =%
b10101101 =%
b10101110 =%
b10101111 =%
b10110000 =%
b10110001 =%
b10110010 =%
b10110011 =%
b10110100 =%
b10110101 =%
b10110110 =%
b10110111 =%
b10111000 =%
b10111001 =%
b10111010 =%
b10111011 =%
b10111100 =%
b10111101 =%
b10111110 =%
b10111111 =%
b11000000 =%
b11000001 =%
b11000010 =%
b11000011 =%
b11000100 =%
b11000101 =%
b11000110 =%
b11000111 =%
b11001000 =%
b11001001 =%
b11001010 =%
b11001011 =%
b11001100 =%
b11001101 =%
b11001110 =%
b11001111 =%
b11010000 =%
b11010001 =%
b11010010 =%
b11010011 =%
b11010100 =%
b11010101 =%
b11010110 =%
b11010111 =%
b11011000 =%
b11011001 =%
b11011010 =%
b11011011 =%
b11011100 =%
b11011101 =%
b11011110 =%
b11011111 =%
b11100000 =%
b11100001 =%
b11100010 =%
b11100011 =%
b11100100 =%
b11100101 =%
b11100110 =%
b11100111 =%
b11101000 =%
b11101001 =%
b11101010 =%
b11101011 =%
b11101100 =%
b11101101 =%
b11101110 =%
b11101111 =%
b11110000 =%
b11110001 =%
b11110010 =%
b11110011 =%
b11110100 =%
b11110101 =%
b11110110 =%
b11110111 =%
b11111000 =%
b11111001 =%
b11111010 =%
b11111011 =%
b11111100 =%
b11111101 =%
b11111110 =%
b11111111 =%
b100000000 =%
b0 ?%
b1 ?%
b10 ?%
b11 ?%
b100 ?%
b101 ?%
b110 ?%
b111 ?%
b1000 ?%
b1001 ?%
b1010 ?%
b1011 ?%
b1100 ?%
b1101 ?%
b1110 ?%
b1111 ?%
b10000 ?%
b10001 ?%
b10010 ?%
b10011 ?%
b10100 ?%
b10101 ?%
b10110 ?%
b10111 ?%
b11000 ?%
b11001 ?%
b11010 ?%
b11011 ?%
b11100 ?%
b11101 ?%
b11110 ?%
b11111 ?%
b100000 ?%
b100001 ?%
b100010 ?%
b100011 ?%
b100100 ?%
b100101 ?%
b100110 ?%
b100111 ?%
b101000 ?%
b101001 ?%
b101010 ?%
b101011 ?%
b101100 ?%
b101101 ?%
b101110 ?%
b101111 ?%
b110000 ?%
b110001 ?%
b110010 ?%
b110011 ?%
b110100 ?%
b110101 ?%
b110110 ?%
b110111 ?%
b111000 ?%
b111001 ?%
b111010 ?%
b111011 ?%
b111100 ?%
b111101 ?%
b111110 ?%
b111111 ?%
b1000000 ?%
b1000001 ?%
b1000010 ?%
b1000011 ?%
b1000100 ?%
b1000101 ?%
b1000110 ?%
b1000111 ?%
b1001000 ?%
b1001001 ?%
b1001010 ?%
b1001011 ?%
b1001100 ?%
b1001101 ?%
b1001110 ?%
b1001111 ?%
b1010000 ?%
b1010001 ?%
b1010010 ?%
b1010011 ?%
b1010100 ?%
b1010101 ?%
b1010110 ?%
b1010111 ?%
b1011000 ?%
b1011001 ?%
b1011010 ?%
b1011011 ?%
b1011100 ?%
b1011101 ?%
b1011110 ?%
b1011111 ?%
b1100000 ?%
b1100001 ?%
b1100010 ?%
b1100011 ?%
b1100100 ?%
b1100101 ?%
b1100110 ?%
b1100111 ?%
b1101000 ?%
b1101001 ?%
b1101010 ?%
b1101011 ?%
b1101100 ?%
b1101101 ?%
b1101110 ?%
b1101111 ?%
b1110000 ?%
b1110001 ?%
b1110010 ?%
b1110011 ?%
b1110100 ?%
b1110101 ?%
b1110110 ?%
b1110111 ?%
b1111000 ?%
b1111001 ?%
b1111010 ?%
b1111011 ?%
b1111100 ?%
b1111101 ?%
b1111110 ?%
b1111111 ?%
b10000000 ?%
b10000001 ?%
b10000010 ?%
b10000011 ?%
b10000100 ?%
b10000101 ?%
b10000110 ?%
b10000111 ?%
b10001000 ?%
b10001001 ?%
b10001010 ?%
b10001011 ?%
b10001100 ?%
b10001101 ?%
b10001110 ?%
b10001111 ?%
b10010000 ?%
b10010001 ?%
b10010010 ?%
b10010011 ?%
b10010100 ?%
b10010101 ?%
b10010110 ?%
b10010111 ?%
b10011000 ?%
b10011001 ?%
b10011010 ?%
b10011011 ?%
b10011100 ?%
b10011101 ?%
b10011110 ?%
b10011111 ?%
b10100000 ?%
b10100001 ?%
b10100010 ?%
b10100011 ?%
b10100100 ?%
b10100101 ?%
b10100110 ?%
b10100111 ?%
b10101000 ?%
b10101001 ?%
b10101010 ?%
b10101011 ?%
b10101100 ?%
b10101101 ?%
b10101110 ?%
b10101111 ?%
b10110000 ?%
b10110001 ?%
b10110010 ?%
b10110011 ?%
b10110100 ?%
b10110101 ?%
b10110110 ?%
b10110111 ?%
b10111000 ?%
b10111001 ?%
b10111010 ?%
b10111011 ?%
b10111100 ?%
b10111101 ?%
b10111110 ?%
b10111111 ?%
b11000000 ?%
b11000001 ?%
b11000010 ?%
b11000011 ?%
b11000100 ?%
b11000101 ?%
b11000110 ?%
b11000111 ?%
b11001000 ?%
b11001001 ?%
b11001010 ?%
b11001011 ?%
b11001100 ?%
b11001101 ?%
b11001110 ?%
b11001111 ?%
b11010000 ?%
b11010001 ?%
b11010010 ?%
b11010011 ?%
b11010100 ?%
b11010101 ?%
b11010110 ?%
b11010111 ?%
b11011000 ?%
b11011001 ?%
b11011010 ?%
b11011011 ?%
b11011100 ?%
b11011101 ?%
b11011110 ?%
b11011111 ?%
b11100000 ?%
b11100001 ?%
b11100010 ?%
b11100011 ?%
b11100100 ?%
b11100101 ?%
b11100110 ?%
b11100111 ?%
b11101000 ?%
b11101001 ?%
b11101010 ?%
b11101011 ?%
b11101100 ?%
b11101101 ?%
b11101110 ?%
b11101111 ?%
b11110000 ?%
b11110001 ?%
b11110010 ?%
b11110011 ?%
b11110100 ?%
b11110101 ?%
b11110110 ?%
b11110111 ?%
b11111000 ?%
b11111001 ?%
b11111010 ?%
b11111011 ?%
b11111100 ?%
b11111101 ?%
b11111110 ?%
b11111111 ?%
b100000000 ?%
b11 #!
#201
0"!
09
0~
1]#
1~$
1j!
1i!
0$,
1k!
1F+
0F+
#250
0!!
0#,
08
0}
#287
16
b101011100 3
b11000 4
b100 W
b11 S
b1 O
1u
1t
1l+
1k+
1j+
1h+
1f+
1L"
1K"
1z
1",
1{+
1z+
1f
1e
1d
1b
1`
1K
1F+
b101 Q+
1J+
b100 O+
1K+
0F+
1s!
1x!
1\+
1X+
1t!
1u!
1f#
1)%
1a#
1c#
#300
1!!
1#,
18
1}
1]+
1Y+
b100 #!
#301
1S+
1U+
1F+
b0 O+
0J+
0K+
b110 Q+
1N+
b101011000 P+
0s!
0t!
1>"
19"
18"
16"
14"
0\+
1Z+
0x!
1_#
0a#
11&
0u!
0f#
0)%
0_#
0c#
1`&
1g#
1I#
1H#
1l!
1Y"
1n!
b0 P+
0N+
b101 Q+
b110 Q+
1N+
b101011000 P+
1'!
12
#350
0!!
0#,
08
0}
#400
1!!
1#,
18
1}
1|&
10'
1/'
1-'
1+'
1C(
1B(
1@(
1>(
1V)
1U)
1S)
1Q)
1i*
1h*
1f*
1d*
1/+
0]+
1[+
b101 #!
#401
1T+
0U+
15&
1%*
1'*
1)*
1**
1p(
1r(
1t(
1u(
1]'
1_'
1a'
1b'
1J&
1L&
1N&
1O&
1a&
1h&
1&&
1{&
1v&
1t&
1r&
1n&
1l&
1C%
1R"
01&
0`&
0&&
0R"
1?"
b0 P+
0N+
1N+
b101011010 P+
1;"
1+&
0*&
10&
1s'
0?"
b0 P+
0N+
b111 Q+
1N+
b101011010 P+
1\+
#450
0!!
0#,
08
0}
#500
1!!
1#,
18
1}
0|&
1P'
1K'
1I'
1G'
1C'
1A'
1~&
11(
0/+
1.+
13+
1]+
b110 #!
#501
1U+
19&
14&
05&
1t'
1b&
1D%
1F%
1J%
1L%
1N%
1S%
0a&
1{'
1'&
0{&
0v&
0t&
0r&
0n&
0l&
1,"
1'"
1%"
1#"
1}!
1{!
10(
1.(
1+(
1)(
1((
1'(
1&(
1%(
1!(
1B%
1R"
00&
0s'
0'&
0R"
1?"
b0 P+
0N+
1K+
1N+
b101011100 P+
0;"
1:"
1t!
1u!
1_#
1c#
1d#
1e#
0l!
1,&
0+&
0g#
1O"
0L"
0K"
1J"
1H"
1F"
1B"
1@"
1/&
1()
0n!
0?"
0K+
b0 P+
0N+
b1000 Q+
1K+
1N+
b101011100 P+
0\+
0Z+
0X+
1V+
#550
0!!
0#,
08
0}
#600
1!!
1#,
18
1}
0P'
0K'
0I'
0G'
0C'
0A'
0~&
1"'
01(
1c(
1a(
1^(
1\(
1[(
1Z(
1Y(
1X(
1T(
13(
1D)
0.+
1-+
03+
12+
17+
0]+
0[+
0Y+
1W+
b111 #!
#601
1R+
0S+
0T+
0U+
1=&
18&
09&
13&
04&
1))
1u'
1T%
1X%
1Y%
1Z%
1[%
1\%
1^%
1a%
1c%
0t'
1c&
0b&
0D%
0F%
0J%
0L%
0N%
0S%
10)
1(&
00(
0.(
0+(
0)(
0((
0'(
0&(
0%(
0!(
1*"
1$"
1""
1!"
0}!
1C)
1B)
1@)
19)
17)
16)
1A%
1R"
0/&
0()
0(&
1M"
1G"
1E"
1D"
0B"
0R"
1?"
0K+
b0 P+
0N+
1K+
1N+
b101011110 P+
b10 O+
1y!
1;"
0_#
1`#
1-&
0,&
1,#
1'#
1%#
1##
1}"
1{"
1.&
1;*
0?"
b0 O+
0K+
b0 P+
0N+
b1001 Q+
1K+
1N+
b101011110 P+
b10 O+
1\+
#650
0!!
0#,
08
0}
#700
1!!
1#,
18
1}
0"'
0c(
0a(
0^(
0\(
0[(
0Z(
0Y(
0X(
0T(
03(
15(
0D)
1v)
1u)
1s)
1l)
1j)
1i)
1F)
1W*
0-+
1,+
02+
11+
07+
16+
1]+
b1000 #!
#701
1U+
1<&
0=&
17&
08&
12&
03&
1<*
1*)
1f%
1g%
1i%
1p%
1r%
1s%
0))
1v'
0u'
0T%
0X%
0Y%
0Z%
0[%
0\%
0^%
0a%
0c%
0c&
0h&
1C*
1)&
0C)
0B)
0@)
09)
07)
06)
1+"
0*"
1)"
0'"
0%"
0$"
0#"
0!"
1~!
1}!
0{!
1U*
1T*
1S*
1R*
1P*
1N*
1M*
1J*
1I*
1H*
1G*
0C%
1@%
1R"
0.&
0;*
0)&
1N"
0M"
1L"
0J"
0H"
0G"
0F"
0D"
1C"
1B"
0@"
0R"
1?"
b0 O+
0K+
b0 P+
0N+
b1010 Q+
1K+
b100 O+
0>"
0\+
1Z+
0;"
0:"
09"
08"
06"
04"
0y!
1x!
1a#
0`#
0-&
1*&
1<#
1:#
17#
15#
14#
13#
12#
11#
1-#
0I#
0H#
0?"
b0 O+
0K+
b1001 Q+
b1010 Q+
1K+
b100 O+
#750
0!!
0#,
08
0}
#800
1!!
1#,
18
1}
00'
0/'
0-'
0+'
0C(
0B(
0@(
0>(
05(
0V)
0U)
0S)
0Q)
0v)
0u)
0s)
0l)
0j)
0i)
0F)
1H)
0W*
0i*
0h*
0f*
0d*
1*+
1)+
1(+
1'+
1%+
1#+
1"+
1}*
1|*
1{*
1z*
1Y*
0,+
01+
10+
06+
15+
0]+
1[+
b1001 #!
#801
1T+
0U+
1;&
0<&
16&
07&
02&
1=*
1t%
1u%
1v%
1w%
1z%
1{%
1}%
1!&
1"&
1#&
1$&
0%*
0'*
0)*
0**
0<*
1+)
0*)
0f%
0g%
0i%
0p%
0r%
0s%
0p(
0r(
0t(
0u(
0v'
0]'
0_'
0a'
0b'
0J&
0L&
0N&
0O&
0{'
0U*
0T*
0S*
0R*
0P*
0N*
0M*
0J*
0I*
0H*
0G*
0,"
1*"
1("
1&"
1$"
1#"
0""
1|!
1{!
0B%
0O"
1M"
1K"
1I"
1G"
1F"
0E"
1A"
1@"
b0 O+
0K+
b1011 Q+
1K+
1L+
b110 O+
1\+
1y!
1w!
0a#
1b#
1L#
1K#
1I#
1B#
1@#
1?#
#850
0!!
0#,
08
0}
#900
1!!
1#,
18
1}
0H)
0*+
0)+
0(+
0'+
0%+
0#+
0"+
0}*
0|*
0{*
0z*
0Y*
1[*
00+
05+
14+
1]+
b1010 #!
#901
1U+
1:&
0;&
06&
1>*
0=*
0t%
0u%
0v%
0w%
0z%
0{%
0}%
0!&
0"&
0#&
0$&
0+)
00)
0+"
0*"
0)"
0("
0&"
0$"
0#"
0~!
0}!
0|!
0{!
0A%
0N"
0M"
0L"
0K"
0I"
0G"
0F"
0C"
0B"
0A"
0@"
b0 O+
0K+
0L+
b1100 Q+
1J+
1K+
b100 O+
0w!
0\+
0Z+
1X+
0y!
1s!
0d#
0e#
1f#
1)%
1a#
0b#
1h#
1[#
1Z#
1Y#
1X#
1V#
1T#
1S#
1P#
1O#
1N#
1M#
0L#
0K#
0I#
0B#
0@#
0?#
1L"
1K"
1o!
1V"
1q!
b0 O+
0J+
0K+
b1011 Q+
b1100 Q+
1J+
1K+
b100 O+
#950
0!!
0#,
08
0}
#1000
1!!
1#,
18
1}
0[*
04+
0]+
0[+
1Y+
b1011 #!
#1001
1S+
0T+
0U+
0:&
0>*
0C*
0@%
b0 O+
0J+
0K+
b0 Q+
1E+
b100 O+
0s!
0t!
0X+
0V+
0u!
0f#
0)%
0a#
0c#
1g#
1I#
1H#
1l!
1E!
1D!
1X"
1n!
1e!
1d!
1T"
0E+
b0 O+
b1100 Q+
b0 Q+
1E+
b100 O+
b11000 %!
1&!
1-
1,
11
#1002
b1 P
06
0z
0",
0K
0E+
b0 O+
b1100 Q+
b0 Q+
1E+
b100 O+
#1050
0!!
0#,
08
0}
#1100
1!!
1#,
18
1}
1='
1<'
1P(
1O(
1c)
1b)
1v*
1u*
0Y+
0W+
1^+
b1100 #!
#1101
1U"
0R+
0S+
16*
17*
1#)
1$)
1n'
1o'
1[&
1\&